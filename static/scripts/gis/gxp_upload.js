Ext.ns("Ext.ux.form");
Ext.ux.form.FileUploadField=Ext.extend(Ext.form.TextField,{buttonText:"Browse...",buttonOnly:!1,buttonOffset:3,readOnly:!0,autoSize:Ext.emptyFn,initComponent:function(){Ext.ux.form.FileUploadField.superclass.initComponent.call(this);this.addEvents("fileselected")},onRender:function(a,b){Ext.ux.form.FileUploadField.superclass.onRender.call(this,a,b);this.wrap=this.el.wrap({cls:"x-form-field-wrap x-form-file-wrap"});this.el.addClass("x-form-file-text");this.el.dom.removeAttribute("name");this.createFileInput();
var c=Ext.applyIf(this.buttonCfg||{},{text:this.buttonText});this.button=new Ext.Button(Ext.apply(c,{renderTo:this.wrap,cls:"x-form-file-btn"+(c.iconCls?" x-btn-icon":"")}));this.buttonOnly&&(this.el.hide(),this.wrap.setWidth(this.button.getEl().getWidth()));this.bindListeners();this.resizeEl=this.positionEl=this.wrap},bindListeners:function(){this.fileInput.on({scope:this,mouseenter:function(){this.button.addClass(["x-btn-over","x-btn-focus"])},mouseleave:function(){this.button.removeClass(["x-btn-over",
"x-btn-focus","x-btn-click"])},mousedown:function(){this.button.addClass("x-btn-click")},mouseup:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},change:function(){var a=this.fileInput.dom.value;this.setValue(a);this.fireEvent("fileselected",this,a)}})},createFileInput:function(){this.fileInput=this.wrap.createChild({id:this.getFileInputId(),name:this.name||this.getId(),cls:"x-form-file",tag:"input",type:"file",size:1})},reset:function(){this.fileInput.remove();this.createFileInput();
this.bindListeners();Ext.ux.form.FileUploadField.superclass.reset.call(this)},getFileInputId:function(){return this.id+"-file"},onResize:function(a,b){Ext.ux.form.FileUploadField.superclass.onResize.call(this,a,b);this.wrap.setWidth(a);this.buttonOnly||(a=this.wrap.getWidth()-this.button.getEl().getWidth()-this.buttonOffset,this.el.setWidth(a))},onDestroy:function(){Ext.ux.form.FileUploadField.superclass.onDestroy.call(this);Ext.destroy(this.fileInput,this.button,this.wrap)},onDisable:function(){Ext.ux.form.FileUploadField.superclass.onDisable.call(this);
this.doDisable(!0)},onEnable:function(){Ext.ux.form.FileUploadField.superclass.onEnable.call(this);this.doDisable(!1)},doDisable:function(a){this.fileInput.dom.disabled=a;this.button.setDisabled(a)},preFocus:Ext.emptyFn,alignErrorIcon:function(){this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])}});Ext.reg("fileuploadfield",Ext.ux.form.FileUploadField);Ext.form.FileUploadField=Ext.ux.form.FileUploadField;Ext.namespace("gxp");
gxp.LayerUploadPanel=Ext.extend(Ext.FormPanel,{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",
dataStoreLabel:"Store",dataStoreEmptyText:"Choose a store",dataStoreNewText:"Create new store",crsLabel:"CRS",crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)",fileUpload:!0,validFileExtensions:".zip .tif .tiff .gz .tar.bz2 .tar .tgz .tbz2".split(" "),defaultDataStore:null,constructor:function(a){a.errorReader={read:a.handleUploadResponse||this.handleUploadResponse.createDelegate(this)};gxp.LayerUploadPanel.superclass.constructor.call(this,
a)},selectedWorkspace:null,initComponent:function(){this.items=[{xtype:"textfield",name:"title",fieldLabel:this.titleLabel,emptyText:this.titleEmptyText,allowBlank:!0},{xtype:"textarea",name:"abstract",fieldLabel:this.abstractLabel,emptyText:this.abstractEmptyText,allowBlank:!0},{xtype:"fileuploadfield",id:"file",anchor:"90%",emptyText:this.fieldEmptyText,fieldLabel:this.fileLabel,name:"file",buttonText:"",buttonCfg:{iconCls:"gxp-icon-filebrowse"},listeners:{fileselected:function(a,b){a.setValue(b.split(/[/\\]/).pop())}},
validator:this.fileNameValidator.createDelegate(this)},{xtype:"fieldset",ref:"optionsFieldset",title:this.optionsText,checkboxToggle:!0,collapsed:!0,hidden:void 0!=this.workspace&&void 0!=this.store&&void 0!=this.crs,hideMode:"offsets",defaults:{anchor:"97%"},items:[this.createWorkspacesCombo(),this.createDataStoresCombo(),{xtype:"textfield",name:"nativeCRS",fieldLabel:this.crsLabel,emptyText:this.crsEmptyText,allowBlank:!0,regex:/^epsg:\d+$/i,regexText:this.invalidCrsText}],listeners:{collapse:function(a){a.items.each(function(a){a.reset()})}}}];
this.buttons=[{text:this.uploadText,handler:function(){var a=this.getForm();if(a.isValid()){var b=a.getFieldValues(),c={"import":{}};b.workspace&&(c["import"].targetWorkspace={workspace:{name:b.workspace}});Ext.isEmpty(b.store)&&this.defaultDataStore?c["import"].targetStore={dataStore:{name:this.defaultDataStore}}:Ext.isEmpty(b.store)||b.store===this.dataStoreNewText||(c["import"].targetStore={dataStore:{name:b.store}});Ext.Ajax.request({url:this.getUploadUrl(),method:"POST",jsonData:c,success:function(b){this._import=
b.getResponseHeader("Location");this.optionsFieldset.expand();a.submit({url:this._import+"/tasks?expand=all",waitMsg:this.waitMsgText,waitMsgTarget:!0,reset:!0,scope:this})},scope:this})}},scope:this}];this.addEvents("workspaceselected","datastoreselected","uploadcomplete");this.getDefaultDataStore("default");gxp.LayerUploadPanel.superclass.initComponent.call(this)},fileNameValidator:function(a){for(var b=!1,c,d=0,e=this.validFileExtensions.length;d<e;++d)if(c=this.validFileExtensions[d],a.slice(-c.length).toLowerCase()===
c){b=!0;break}return b||this.invalidFileExtensionText+"<br/>"+this.validFileExtensions.join(", ")},createWorkspacesCombo:function(){return{xtype:"combo",name:"workspace",ref:"../workspace",fieldLabel:this.workspaceLabel,store:new Ext.data.JsonStore({url:this.getWorkspacesUrl(),autoLoad:!0,root:"workspaces.workspace",fields:["name","href"]}),displayField:"name",valueField:"name",mode:"local",allowBlank:!0,triggerAction:"all",forceSelection:!0,listeners:{select:function(a,b,c){this.getDefaultDataStore(b.get("name"));
this.fireEvent("workspaceselected",this,b)},scope:this}}},createDataStoresCombo:function(){var a=new Ext.data.JsonStore({autoLoad:!1,root:"dataStores.dataStore",fields:["name","href"]});this.on({workspaceselected:function(d,e){c.reset();var f=e.get("href");a.removeAll();a.proxy=new Ext.data.HttpProxy({url:f.split(".json").shift()+"/datastores.json"});a.proxy.on("loadexception",b,this);a.load()},scope:this});var b=function(){var c=new a.recordType({name:this.dataStoreNewText});a.insert(0,c);a.proxy&&
a.proxy.un("loadexception",b,this)};a.on("load",b,this);var c=new Ext.form.ComboBox({name:"store",ref:"../dataStore",emptyText:this.dataStoreEmptyText,fieldLabel:this.dataStoreLabel,store:a,displayField:"name",valueField:"name",mode:"local",allowBlank:!0,triggerAction:"all",forceSelection:!0,listeners:{select:function(a,b,c){this.fireEvent("datastoreselected",this,b)},scope:this}});return c},getDefaultDataStore:function(a){Ext.Ajax.request({url:this.url+"/workspaces/"+a+"/datastores/default.json",
callback:function(b,c,d){this.defaultDataStore=null;200===d.status&&(b=Ext.decode(d.responseText),"default"===a&&b.dataStore&&b.dataStore.workspace&&(this.workspace.setValue(b.dataStore.workspace.name),c=new this.workspace.store.recordType({name:b.dataStore.workspace.name,href:b.dataStore.workspace.href}),this.fireEvent("workspaceselected",this,c)),b.dataStore&&!0===b.dataStore.enabled&&!/file/i.test(b.dataStore.type)&&(this.defaultDataStore=b.dataStore.name,this.dataStore.setValue(this.defaultDataStore)))},
scope:this})},getUploadUrl:function(){return this.url+"/imports"},getWorkspacesUrl:function(){return this.url+"/workspaces.json"},handleUploadResponse:function(a){var b=this.parseResponseText(a.responseText),c,d,e,f;a=this.getForm().getFieldValues();var g=!!b;if(b)if("string"===typeof b)g=!1,e=b;else if(d=b.tasks||[b.task],0===d.length)g=!1,e="Upload contains no suitable files.";else for(f=d.length-1;0<=f;--f)(b=d[f],b)?"NO_FORMAT"===b.state?(g=!1,e="Upload contains no suitable files."):"NO_CRS"!==
b.state||a.nativeCRS||(g=!1,e="Coordinate Reference System (CRS) of source file "+b.data.file+" could not be determined. Please specify manually."):(g=!1,e="Unknown upload error");g?(a.title||a["abstract"]||a.nativeCRS)&&d[0].target.dataStore?(this.waitMsg=new Ext.LoadMask((this.ownerCt||this).getEl(),{msg:this.processingUploadText}),this.waitMsg.show(),Ext.Ajax.request({method:"PUT",url:d[0].layer.href,jsonData:{title:a.title||void 0,"abstract":a["abstract"]||void 0,srs:a.nativeCRS||void 0},success:this.finishUpload,
failure:function(a){this.waitMsg&&this.waitMsg.hide();var b=[];try{var c=Ext.decode(a.responseText);if(c.errors)for(var d=0,e=c.errors.length;d<e;++d)b.push({id:~c.errors[d].indexOf("SRS")?"nativeCRS":"file",msg:c.errors[d]})}catch(f){b.push({id:"file",msg:a.responseText})}this.getForm().markInvalid(b)},scope:this})):this.finishUpload():c=[{data:{id:"file",msg:e||this.uploadFailedText}}];return{success:!1,records:c}},finishUpload:function(){Ext.Ajax.request({method:"POST",url:this._import,failure:this.handleFailure,
success:this.handleUploadSuccess,scope:this})},parseResponseText:function(a){var b;try{b=Ext.decode(a)}catch(c){if(a=a.match(/^\s*<pre[^>]*>(.*)<\/pre>\s*/))try{b=Ext.decode(a[1])}catch(d){b=a[1]}}return b},handleUploadSuccess:function(a){Ext.Ajax.request({method:"GET",url:this._import+"?expand=all",failure:this.handleFailure,success:function(a){this.waitMsg&&this.waitMsg.hide();this.getForm().reset();a=Ext.decode(a.responseText);this.fireEvent("uploadcomplete",this,a);delete this._import},scope:this})},
handleFailure:function(a){a&&1223===a.status?this.handleUploadSuccess(a):(this.waitMsg&&this.waitMsg.hide(),this.getForm().markInvalid([{file:this.uploadFailedText}]))}});Ext.reg("gxp_layeruploadpanel",gxp.LayerUploadPanel);
