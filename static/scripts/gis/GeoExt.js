Ext.namespace("GeoExt");GeoExt.singleFile=!0;
(function(){if("object"!=typeof GeoExt||!GeoExt.singleFile)for(var a="GeoExt/data/AttributeReader.js GeoExt/data/AttributeStore.js GeoExt/data/FeatureRecord.js GeoExt/data/FeatureReader.js GeoExt/data/FeatureStore.js GeoExt/data/LayerRecord.js GeoExt/data/LayerReader.js GeoExt/data/LayerStore.js GeoExt/data/ScaleStore.js GeoExt/data/StyleReader.js GeoExt/data/WMSCapabilitiesReader.js GeoExt/data/WMSCapabilitiesStore.js GeoExt/data/WFSCapabilitiesReader.js GeoExt/data/WFSCapabilitiesStore.js GeoExt/data/WMSDescribeLayerReader.js GeoExt/data/WMSDescribeLayerStore.js GeoExt/data/WMCReader.js GeoExt/widgets/Action.js GeoExt/data/ProtocolProxy.js GeoExt/widgets/FeatureRenderer.js GeoExt/widgets/MapPanel.js GeoExt/widgets/Popup.js GeoExt/widgets/form.js GeoExt/widgets/form/SearchAction.js GeoExt/widgets/form/BasicForm.js GeoExt/widgets/form/FormPanel.js GeoExt/widgets/grid/SymbolizerColumn.js GeoExt/widgets/tips/SliderTip.js GeoExt/widgets/tips/LayerOpacitySliderTip.js GeoExt/widgets/tips/ZoomSliderTip.js GeoExt/widgets/tree/LayerNode.js GeoExt/widgets/tree/TreeNodeUIEventMixin.js GeoExt/plugins/TreeNodeComponent.js GeoExt/plugins/TreeNodeRadioButton.js GeoExt/plugins/TreeNodeActions.js GeoExt/widgets/tree/LayerLoader.js GeoExt/widgets/tree/LayerContainer.js GeoExt/widgets/tree/BaseLayerContainer.js GeoExt/widgets/tree/OverlayLayerContainer.js GeoExt/widgets/tree/LayerParamNode.js GeoExt/widgets/tree/LayerParamLoader.js GeoExt/widgets/tree/WMSCapabilitiesLoader.js GeoExt/widgets/LayerOpacitySlider.js GeoExt/widgets/LayerLegend.js GeoExt/widgets/LegendImage.js GeoExt/widgets/UrlLegend.js GeoExt/widgets/WMSLegend.js GeoExt/widgets/VectorLegend.js GeoExt/widgets/LegendPanel.js GeoExt/widgets/ZoomSlider.js GeoExt/widgets/grid/FeatureSelectionModel.js GeoExt/data/PrintPage.js GeoExt/data/PrintProvider.js GeoExt/plugins/PrintPageField.js GeoExt/plugins/PrintProviderField.js GeoExt/plugins/PrintExtent.js GeoExt/plugins/AttributeForm.js GeoExt/widgets/PrintMapPanel.js GeoExt/state/PermalinkProvider.js GeoExt/Lang.js".split(" "),b=
a.length,c=S3.Ap.concat("/static/scripts/gis/GeoExt/lib/"),d,e,f=0;f<b;f++)d=c+a[f],e=document.createElement("script"),e.src=d,e.async=!1,document.getElementsByTagName("head")[0].appendChild(e)})();Ext.namespace("GeoExt");
GeoExt.LayerLegend=Ext.extend(Ext.Container,{layerRecord:null,showTitle:!0,legendTitle:null,labelCls:null,layerStore:null,initComponent:function(){GeoExt.LayerLegend.superclass.initComponent.call(this);this.autoEl={};this.add({xtype:"label",html:this.getLayerTitle(this.layerRecord),cls:"x-form-item x-form-item-label"+(this.labelCls?" "+this.labelCls:"")});this.layerRecord&&this.layerRecord.store&&(this.layerStore=this.layerRecord.store,this.layerStore.on("update",this.onStoreUpdate,this),this.layerStore.on("add",
this.onStoreAdd,this),this.layerStore.on("remove",this.onStoreRemove,this))},getLabel:function(){var a=this.items.get(0);return a.rendered?a.el.dom.innerHTML:a.html},onStoreRemove:function(a,b,c){},onStoreAdd:function(a,b,c){},onStoreUpdate:function(a,b,c){b===this.layerRecord&&0<this.items.getCount()&&(a=b.getLayer(),this.setVisible(a.getVisibility()&&a.calculateInRange()&&a.displayInLayerSwitcher&&!b.get("hideInLegend")),this.update())},update:function(){var a=this.getLayerTitle(this.layerRecord),
b=this.items.itemAt(0);b instanceof Ext.form.Label&&this.getLabel()!==a&&b.setText(a,!1)},getLayerTitle:function(a){var b=this.legendTitle||"";this.showTitle&&!b&&a&&!a.get("hideTitle")&&(b=a.get("title")||a.get("name")||a.getLayer().name||"");return b},beforeDestroy:function(){this.layerStore&&(this.layerStore.un("update",this.onStoreUpdate,this),this.layerStore.un("remove",this.onStoreRemove,this),this.layerStore.un("add",this.onStoreAdd,this));GeoExt.LayerLegend.superclass.beforeDestroy.apply(this,
arguments)},onDestroy:function(){this.layerStore=this.layerRecord=null;GeoExt.LayerLegend.superclass.onDestroy.apply(this,arguments)}});GeoExt.LayerLegend.getTypes=function(a,b){var c=(b||[]).concat(),d=[],e,f;for(f in GeoExt.LayerLegend.types)e=GeoExt.LayerLegend.types[f].supports(a),0<e?-1==c.indexOf(f)&&d.push({type:f,score:e}):c.remove(f);d.sort(function(a,b){return a.score<b.score?1:a.score==b.score?0:-1});e=d.length;f=Array(e);for(var g=0;g<e;++g)f[g]=d[g].type;return c.concat(f)};
GeoExt.LayerLegend.supports=function(a){};GeoExt.LayerLegend.types={};Ext.namespace("GeoExt");
GeoExt.VectorLegend=Ext.extend(GeoExt.LayerLegend,{layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"",clickableSymbol:!1,clickableTitle:!1,selectOnClick:!1,enableDD:!1,bodyBorder:!1,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){GeoExt.VectorLegend.superclass.initComponent.call(this);this.layerRecord&&(this.layer=this.layerRecord.getLayer(),this.layer.map&&(this.map=this.layer.map,this.currentScaleDenominator=this.layer.map.getScale(),this.layer.map.events.on({zoomend:this.onMapZoom,
scope:this})));if(!this.symbolType)if(this.feature)this.symbolType=this.symbolTypeFromFeature(this.feature);else if(this.layer)if(0<this.layer.features.length){for(var a,b=0,c=this.layer.features.length;b<c;b++)if(null!==this.layer.features[b].geometry){a=this.layer.features[b].clone();break}a.attributes={};this.feature=a;this.symbolType=this.symbolTypeFromFeature(this.feature)}else this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this});this.layer&&this.feature&&!this.rules&&this.setRules();
this.rulesContainer=new Ext.Container({autoEl:{}});this.add(this.rulesContainer);this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved");this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.layer.map.getScale())},symbolTypeFromFeature:function(a){return(a=a.geometry.CLASS_NAME.match(/Point|Line|Polygon/))&&a[0]||"Point"},onFeaturesAdded:function(a){for(var b=0,c=a.features.length;b<c;++b)if(null!==a.features[b].geometry){this.layer.events.un({featuresadded:this.onFeaturesAdded,
scope:this});a=a.features[b].clone();a.attributes={};this.feature=a;this.symbolType=this.symbolTypeFromFeature(this.feature);this.rules||this.setRules();this.update();break}},setRules:function(){var a=this.layer.styleMap&&this.layer.styleMap.styles["default"];a||(a=new OpenLayers.Style);this.rules=0===a.rules.length?[new OpenLayers.Rule({title:a.title,symbolizer:a.createSymbolizer(this.feature)})]:a.rules},setCurrentScaleDenominator:function(a){a!==this.currentScaleDenominator&&(this.currentScaleDenominator=
a,this.update())},getRuleEntry:function(a){return this.rulesContainer.items.get(this.rules.indexOf(a))},addRuleEntry:function(a,b){this.rulesContainer.add(this.createRuleEntry(a));b||this.doLayout()},removeRuleEntry:function(a,b){var c=this.getRuleEntry(a);c&&(this.rulesContainer.remove(c),b||this.doLayout())},selectRuleEntry:function(a){var b=a!=this.selectedRule;this.selectedRule&&this.unselect();b&&(this.getRuleEntry(a).body.addClass("x-grid3-row-selected"),this.selectedRule=a,this.fireEvent("ruleselected",
this,a))},unselect:function(){this.rulesContainer.items.each(function(a,b){this.rules[b]==this.selectedRule&&(a.body.removeClass("x-grid3-row-selected"),this.selectedRule=null,this.fireEvent("ruleunselected",this,this.rules[b]))},this)},createRuleEntry:function(a){var b=!0;null!=this.currentScaleDenominator&&(a.minScaleDenominator&&(b=b&&this.currentScaleDenominator>=a.minScaleDenominator),a.maxScaleDenominator&&(b=b&&this.currentScaleDenominator<a.maxScaleDenominator));return{xtype:"panel",layout:"column",
border:!1,hidden:!b,bodyStyle:this.selectOnClick?{cursor:"pointer"}:void 0,defaults:{border:!1},items:[this.createRuleRenderer(a),this.createRuleTitle(a)],listeners:{render:function(b){this.selectOnClick&&b.getEl().on({click:function(b){this.selectRuleEntry(a)},scope:this});1==this.enableDD&&this.addDD(b)},scope:this}}},createRuleRenderer:function(a){var b=[this.symbolType,"Point","Line","Polygon"],c,d,e,f,g=a.symbolizers;if(g){var h;e=0;f=b.length;a:for(;e<f;++e)if(c=b[e],h=OpenLayers.Symbolizer[c])for(var k=
0,l=g.length;k<l;++k)if(g[k]instanceof h){d=!0;break a}}else{g=a.symbolizer;e=0;for(f=b.length;e<f;++e)if(c=b[e],g[c]){g=g[c];d=!0;break}b=OpenLayers.Util.extend({},g);delete b.label;delete b.graphicHeight;delete b.graphicWidth;delete b.graphicXOffset;delete b.graphicYOffset;g=[b]}return{xtype:"gx_renderer",labelText:"Ab",symbolType:d?c:this.symbolType,symbolizers:g,style:this.clickableSymbol?{cursor:"pointer"}:void 0,listeners:{click:function(){this.clickableSymbol&&(this.fireEvent("symbolclick",
this,a),this.fireEvent("ruleclick",this,a))},scope:this}}},createRuleTitle:function(a){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?{cursor:"pointer"}:void 0),html:this.getRuleTitle(a),listeners:{render:function(b){this.clickableTitle&&b.getEl().on({click:function(){this.fireEvent("titleclick",this,a);this.fireEvent("ruleclick",this,a)},scope:this})},scope:this}}},addDD:function(a){var b=a.ownerCt,c=this;new Ext.dd.DragSource(a.getEl(),
{ddGroup:b.id,onDragOut:function(a,b){var c=Ext.getCmp(b);c.removeClass("gx-ruledrag-insert-above");c.removeClass("gx-ruledrag-insert-below");return Ext.dd.DragZone.prototype.onDragOut.apply(this,arguments)},onDragEnter:function(c,e){var f=Ext.getCmp(e),g,h=b.items.indexOf(a),k=b.items.indexOf(f);h>k?g="gx-ruledrag-insert-above":h<k&&(g="gx-ruledrag-insert-below");g&&f.addClass(g);return Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(d,e){c.moveRule(b.items.indexOf(a),
b.items.indexOf(Ext.getCmp(e)));return Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(a){if(a=a.getTarget(".x-column-inner")){var b=a.cloneNode(!0);b.id=Ext.id();return{sourceEl:a,repairXY:Ext.fly(a).getXY(),ddel:b}}}});new Ext.dd.DropTarget(a.getEl(),{ddGroup:b.id,notifyDrop:function(){return!0}})},update:function(){GeoExt.VectorLegend.superclass.update.apply(this,arguments);var a,b;if(this.symbolType&&this.rules){if(this.rulesContainer.items)for(a=this.rulesContainer.items.length-
1;0<=a;--a)b=this.rulesContainer.getComponent(a),this.rulesContainer.remove(b,!0);a=0;for(b=this.rules.length;a<b;++a)this.addRuleEntry(this.rules[a],!0);this.doLayout();this.selectedRule&&this.getRuleEntry(this.selectedRule).body.addClass("x-grid3-row-selected")}},updateRuleEntry:function(a){var b=this.getRuleEntry(a);b&&(b.removeAll(),b.add(this.createRuleRenderer(a)),b.add(this.createRuleTitle(a)),b.doLayout())},moveRule:function(a,b){var c=this.rules[a];this.rules.splice(a,1);this.rules.splice(b,
0,c);this.update();this.fireEvent("rulemoved",this,c)},getRuleTitle:function(a){var b=a.title||a.name||"";!b&&this.untitledPrefix&&(b=this.untitledPrefix+(this.rules.indexOf(a)+1));return b},beforeDestroy:function(){this.layer&&(this.layer.events&&this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this}),this.layer.map&&this.layer.map.events&&this.layer.map.events.un({zoomend:this.onMapZoom,scope:this}));delete this.layer;delete this.map;delete this.rules;GeoExt.VectorLegend.superclass.beforeDestroy.apply(this,
arguments)},onStoreRemove:function(a,b,c){b.getLayer()===this.layer&&this.map&&this.map.events&&this.map.events.un({zoomend:this.onMapZoom,scope:this})},onStoreAdd:function(a,b,c){a=0;for(c=b.length;a<c;a++)if(b[a].getLayer()===this.layer&&this.layer.map&&this.layer.map.events)this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}});GeoExt.VectorLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.Vector?1:0};GeoExt.LayerLegend.types.gx_vectorlegend=GeoExt.VectorLegend;
Ext.reg("gx_vectorlegend",GeoExt.VectorLegend);Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerContainer=Ext.extend(Ext.tree.AsyncTreeNode,{text:"Layers",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});this.loader=a.loader instanceof GeoExt.tree.LayerLoader?a.loader:new GeoExt.tree.LayerLoader(Ext.applyIf(a.loader||{},{store:a.layerStore}));GeoExt.tree.LayerContainer.superclass.constructor.call(this,a)},recordIndexToNodeIndex:function(a){for(var b=this.loader.store,c=b.getCount(),d=this.childNodes.length,e=-1,c=c-1;0<=c&&!(!0===this.loader.filter(b.getAt(c))&&
(++e,a===c||e>d-1));--c);return e},destroy:function(){delete this.layerStore;GeoExt.tree.LayerContainer.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layercontainer=GeoExt.tree.LayerContainer;Ext.namespace("GeoExt.tree");
GeoExt.tree.BaseLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Base Layer",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text,loader:{}});a.loader=Ext.applyIf(a.loader,{baseAttrs:Ext.applyIf(a.loader.baseAttrs||{},{iconCls:"gx-tree-baselayer-icon",checkedGroup:"baselayer"}),filter:function(a){a=a.getLayer();return!0===a.displayInLayerSwitcher&&!0===a.isBaseLayer}});GeoExt.tree.BaseLayerContainer.superclass.constructor.call(this,a)}});
Ext.tree.TreePanel.nodeTypes.gx_baselayercontainer=GeoExt.tree.BaseLayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.LayerParamLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");GeoExt.tree.LayerParamLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.LayerParamLoader,Ext.util.Observable,{param:null,delimiter:",",load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(;a.firstChild;)a.removeChild(a.firstChild);var c=a.layer instanceof OpenLayers.Layer.HTTPRequest&&a.layer.params[this.param];c&&(c=c instanceof Array?c.slice():c.split(this.delimiter),Ext.each(c,function(b,c,f){this.addParamNode(b,f,a)},this));"function"==typeof b&&b();this.fireEvent("load",this,a)}},addParamNode:function(a,b,c){a=this.createNode({layer:c.layer,
param:this.param,item:a,allItems:b,delimiter:this.delimiter});(b=c.item(0))?c.insertBefore(a,b):c.appendChild(a)},createNode:function(a){this.baseAttrs&&Ext.apply(a,this.baseAttrs);"string"==typeof a.uiProvider&&(a.uiProvider=this.uiProviders[a.uiProvider]||eval(a.uiProvider));a.nodeType=a.nodeType||"gx_layerparam";return new Ext.tree.TreePanel.nodeTypes[a.nodeType](a)}});Ext.namespace("GeoExt");
GeoExt.SliderTip=Ext.extend(Ext.slider.Tip,{hover:!0,minWidth:10,offsets:[0,-10],dragging:!1,init:function(a){GeoExt.SliderTip.superclass.init.apply(this,arguments);if(this.hover)a.on("render",this.registerThumbListeners,this);this.slider=a},registerThumbListeners:function(){for(var a,b,c=0,d=this.slider.thumbs.length;c<d;++c)a=this.slider.thumbs[c],b=a.tracker.el,function(a,b){b.on({mouseover:function(b){this.onSlide(this.slider,b,a);this.dragging=!1},mouseout:function(){this.dragging||this.hide.apply(this,
arguments)},scope:this})}.apply(this,[a,b])},onSlide:function(a,b,c){this.dragging=!0;return GeoExt.SliderTip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("GeoExt");
GeoExt.ZoomSlider=Ext.extend(Ext.slider.SingleSlider,{map:null,baseCls:"gx-zoomslider",aggressive:!1,updating:!1,initComponent:function(){GeoExt.ZoomSlider.superclass.initComponent.call(this);this.map&&(this.map instanceof GeoExt.MapPanel&&(this.map=this.map.map),this.bind(this.map));if(!0===this.aggressive)this.on("change",this.changeHandler,this);else this.on("changecomplete",this.changeHandler,this);this.on("beforedestroy",this.unbind,this)},onRender:function(){GeoExt.ZoomSlider.superclass.onRender.apply(this,
arguments);this.el.addClass(this.baseCls)},afterRender:function(){Ext.slider.SingleSlider.superclass.afterRender.apply(this,arguments);this.update()},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(a){a=this.getEl();
a.un("mousedown",this.stopMouseEvents,this);a.un("click",this.stopMouseEvents,this);this.unbind()},bind:function(a){this.map=a;this.map.events.on({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this});this.initZoomValues()},onZoomEnd:function(){this.update()},unbind:function(){this.map&&this.map.events&&this.map.events.un({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this})},initZoomValues:function(){var a=
this.map.baseLayer;if(a){if(void 0===this.initialConfig.minValue){var b=this.map.getMinZoom?this.map.getMinZoom():0;this.minValue=Math.max(b,a.minZoomLevel||0)}void 0===this.initialConfig.maxValue&&(this.maxValue=null==a.minZoomLevel?a.numZoomLevels-1:a.maxZoomLevel);this.update(!0)}},getZoom:function(){return this.getValue()},getScale:function(){return OpenLayers.Util.getScaleFromResolution(this.map.getResolutionForZoom(this.getValue()),this.map.getUnits())},getResolution:function(){return this.map.getResolutionForZoom(this.getValue())},
changeHandler:function(){this.map&&!this.updating&&this.map.zoomTo(this.getValue())},update:function(a){this.rendered&&this.map&&(this.updating=!0,a&&(this.thumbs[0].value=null),this.setValue(this.map.getZoom()),this.updating=!1)}});Ext.reg("gx_zoomslider",GeoExt.ZoomSlider);Ext.namespace("GeoExt");
GeoExt.LayerOpacitySlider=Ext.extend(Ext.slider.SingleSlider,{layer:null,complementaryLayer:null,delay:5,changeVisibilityDelay:5,aggressive:!1,changeVisibility:!1,value:null,inverse:!1,constructor:function(a){a.layer&&(this.layer=this.getLayer(a.layer),this.bind(),this.complementaryLayer=this.getLayer(a.complementaryLayer),void 0!==a.inverse&&(this.inverse=a.inverse),a.value=void 0!==a.value?a.value:this.getOpacityValue(this.layer),delete a.layer,delete a.complementaryLayer);GeoExt.LayerOpacitySlider.superclass.constructor.call(this,
a)},bind:function(){if(this.layer&&this.layer.map)this.layer.map.events.on({changelayer:this.update,scope:this})},unbind:function(){this.layer&&this.layer.map&&this.layer.map.events&&this.layer.map.events.un({changelayer:this.update,scope:this})},update:function(a){"opacity"!==a.property||a.layer!=this.layer||this._settingOpacity||this.setValue(this.getOpacityValue(this.layer))},setLayer:function(a){this.unbind();this.layer=this.getLayer(a);this.setValue(this.getOpacityValue(a));this.bind()},getOpacityValue:function(a){a=
a&&null!==a.opacity?parseInt(a.opacity*(this.maxValue-this.minValue)):this.maxValue;!0===this.inverse&&(a=this.maxValue-this.minValue-a);return a},getLayer:function(a){if(a instanceof OpenLayers.Layer)return a;if(a instanceof GeoExt.data.LayerRecord)return a.getLayer()},initComponent:function(){GeoExt.LayerOpacitySlider.superclass.initComponent.call(this);this.changeVisibility&&this.layer&&(0==this.layer.opacity||!1===this.inverse&&this.value==this.minValue||!0===this.inverse&&this.value==this.maxValue)&&
this.layer.setVisibility(!1);this.complementaryLayer&&(this.layer&&1==this.layer.opacity||!1===this.inverse&&this.value==this.maxValue||!0===this.inverse&&this.value==this.minValue)&&this.complementaryLayer.setVisibility(!1);if(!0===this.aggressive)this.on("change",this.changeLayerOpacity,this,{buffer:this.delay});else this.on("changecomplete",this.changeLayerOpacity,this);if(!0===this.changeVisibility)this.on("change",this.changeLayerVisibility,this,{buffer:this.changeVisibilityDelay});if(this.complementaryLayer)this.on("change",
this.changeComplementaryLayerVisibility,this,{buffer:this.changeVisibilityDelay});this.on("beforedestroy",this.unbind,this)},changeLayerOpacity:function(a,b){this.layer&&(b/=this.maxValue-this.minValue,!0===this.inverse&&(b=1-b),this._settingOpacity=!0,this.layer.setOpacity(b),delete this._settingOpacity)},changeLayerVisibility:function(a,b){var c=this.layer.getVisibility();!1===this.inverse&&b==this.minValue||!0===this.inverse&&b==this.maxValue&&!0===c?this.layer.setVisibility(!1):(!1===this.inverse&&
b>this.minValue||!0===this.inverse&&b<this.maxValue&&0==c)&&this.layer.setVisibility(!0)},changeComplementaryLayerVisibility:function(a,b){var c=this.complementaryLayer.getVisibility();!1===this.inverse&&b==this.maxValue||!0===this.inverse&&b==this.minValue&&!0===c?this.complementaryLayer.setVisibility(!1):(!1===this.inverse&&b<this.maxValue||!0===this.inverse&&b>this.minValue&&0==c)&&this.complementaryLayer.setVisibility(!0)},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();
b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},scope:this})},removeFromMapPanel:function(a){this.getEl().un({mousedown:this.stopMouseEvents,click:this.stopMouseEvents,scope:this});this.unbind()},stopMouseEvents:function(a){a.stopEvent()}});Ext.reg("gx_opacityslider",GeoExt.LayerOpacitySlider);Ext.namespace("GeoExt.data");
GeoExt.data.WMSCapabilitiesReader=function(a,b){a=a||{};a.format||(a.format=new OpenLayers.Format.WMSCapabilities);"function"!==typeof b&&(b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"opaque",type:"boolean"},{name:"noSubsets",type:"boolean"},{name:"cascaded",type:"int"},{name:"fixedWidth",type:"int"},{name:"fixedHeight",type:"int"},{name:"minScale",type:"float"},{name:"maxScale",
type:"float"},{name:"prefix",type:"string"},{name:"formats"},{name:"styles"},{name:"srs"},{name:"dimensions"},{name:"bbox"},{name:"llbbox"},{name:"attribution"},{name:"keywords"},{name:"identifiers"},{name:"authorityURLs"},{name:"metadataURLs"},{name:"infoFormats"}]));GeoExt.data.WMSCapabilitiesReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.WMSCapabilitiesReader,Ext.data.DataReader,{attributionCls:"gx-attribution",read:function(a){var b=a.responseXML;b&&b.documentElement||(b=a.responseText);return this.readRecords(b)},serviceExceptionFormat:function(a){return-1<OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_inimage")?"application/vnd.ogc.se_inimage":-1<OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_xml")?"application/vnd.ogc.se_xml":a[0]},imageFormat:function(a){var b=a.formats;return a.opaque&&-1<OpenLayers.Util.indexOf(b,
"image/jpeg")?"image/jpeg":-1<OpenLayers.Util.indexOf(b,"image/png")?"image/png":-1<OpenLayers.Util.indexOf(b,"image/png; mode=24bit")?"image/png; mode=24bit":-1<OpenLayers.Util.indexOf(b,"image/gif")?"image/gif":b[0]},imageTransparent:function(a){return void 0==a.opaque||!a.opaque},readRecords:function(a){if("string"===typeof a||a.nodeType)a=this.meta.format.read(a);if(a.error)throw new Ext.data.DataReader.Error("invalid-response",a.error);var b=a.version,c=a.capability||{};a=c.request&&c.request.getmap&&
c.request.getmap.href;var d=c.layers,c=this.serviceExceptionFormat(c.exception?c.exception.formats:[]),e=[];if(a&&d)for(var f=this.recordType.prototype.fields,g,h,k,l,m=0,n=d.length;m<n;m++)if(g=d[m],g.name){h={};for(var r=0,q=f.length;r<q;r++)k=f.items[r],l=g[k.mapping||k.name]||k.defaultValue,l=k.convert(l),h[k.name]=l;k={attribution:g.attribution?this.meta.rawAttribution?g.attribution:this.attributionMarkup(g.attribution):void 0,minScale:g.minScale,maxScale:g.maxScale};this.meta.layerOptions&&
Ext.apply(k,this.meta.layerOptions);l={layers:g.name,exceptions:c,format:this.imageFormat(g),transparent:this.imageTransparent(g),version:b};this.meta.layerParams&&Ext.apply(l,this.meta.layerParams);h.layer=new OpenLayers.Layer.WMS(g.title||g.name,a,l,k);e.push(new this.recordType(h,h.layer.id))}return{totalRecords:e.length,success:!0,records:e}},attributionMarkup:function(a){var b=[];a.logo&&b.push("<img class='"+this.attributionCls+"-image' width='"+a.logo.width+"' height='"+a.logo.height+"' src='"+
a.logo.href+"' />");a.title&&b.push("<span class='"+this.attributionCls+"-title'>"+a.title+"</span>");if(a.href)for(var c=0;c<b.length;c++)b[c]="<a class='"+this.attributionCls+"-link' href="+a.href+">"+b[c]+"</a>";return b.join(" ")}});Ext.namespace("GeoExt.data");
GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(a){a=a||{};a.reader=a.reader||new GeoExt.data.LayerReader({},a.fields);delete a.fields;var b=a.map instanceof GeoExt.MapPanel?a.map.map:a.map;delete a.map;a.layers&&(a.data=a.layers);delete a.layers;var c={initDir:a.initDir};delete a.initDir;arguments.callee.superclass.constructor.call(this,a);this.addEvents("bind");b&&this.bind(b,c)},bind:function(a,b){if(!this.map){this.map=a;b=b||{};var c=b.initDir;void 0==
b.initDir&&(c=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP);var d=a.layers.slice(0);c&GeoExt.data.LayerStore.STORE_TO_MAP&&this.each(function(a){this.map.addLayer(a.getLayer())},this);c&GeoExt.data.LayerStore.MAP_TO_STORE&&this.loadData(d,!0);a.events.on({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this});this.data.on({replace:this.onReplace,
scope:this});this.fireEvent("bind",this,a)}},unbind:function(){this.map&&(this.map.events.un({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this}),this.un("load",this.onLoad,this),this.un("clear",this.onClear,this),this.un("add",this.onAdd,this),this.un("remove",this.onRemove,this),this.data.un("replace",this.onReplace,this),this.map=null)},onChangeLayer:function(a){var b=a.layer,c=this.findBy(function(a,c){return a.getLayer()===b});if(-1<c){var d=this.getAt(c);
"order"===a.property?this._adding||this._removing||(a=this.map.getLayerIndex(b),a!==c&&(this._removing=!0,this.remove(d),delete this._removing,this._adding=!0,this.insert(a,[d]),delete this._adding)):"name"===a.property?d.set("title",b.name):this.fireEvent("update",this,d,Ext.data.Record.EDIT)}},onAddLayer:function(a){this._adding||(a=a.layer,this._adding=!0,this.loadData([a],!0),delete this._adding)},onRemoveLayer:function(a){this.map.unloadDestroy?this._removing||(a=a.layer,this._removing=!0,this.remove(this.getById(a.id)),
delete this._removing):this.unbind()},onLoad:function(a,b,c){Ext.isArray(b)||(b=[b]);if(c&&!c.add){this._removing=!0;for(a=this.map.layers.length-1;0<=a;a--)this.map.removeLayer(this.map.layers[a]);delete this._removing;a=b.length;if(0<a){c=Array(a);for(var d=0;d<a;d++)c[d]=b[d].getLayer();this._adding=!0;this.map.addLayers(c);delete this._adding}}},onClear:function(a){this._removing=!0;for(a=this.map.layers.length-1;0<=a;a--)this.map.removeLayer(this.map.layers[a]);delete this._removing},onAdd:function(a,
b,c){if(!this._adding){this._adding=!0;for(var d=b.length-1;0<=d;--d)a=b[d].getLayer(),this.map.addLayer(a),c!==this.map.layers.length-1&&this.map.setLayerIndex(a,c);delete this._adding}},onRemove:function(a,b,c){this._removing||(a=b.getLayer(),null!=this.map.getLayer(a.id)&&(this._removing=!0,this.removeMapLayer(b),delete this._removing))},onUpdate:function(a,b,c){c===Ext.data.Record.EDIT&&b.modified&&b.modified.title&&(a=b.getLayer(),b=b.get("title"),b!==a.name&&a.setName(b))},removeMapLayer:function(a){this.map.removeLayer(a.getLayer())},
onReplace:function(a,b,c){this.removeMapLayer(b)},getByLayer:function(a){var b=this.findBy(function(b){return b.getLayer()===a});if(-1<b)return this.getAt(b)},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this)}}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");this.iconCls={};GeoExt.tree.LayerLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.LayerLoader,Ext.util.Observable,{store:null,filter:function(a){return 1==a.getLayer().displayInLayerSwitcher},baseAttrs:null,uiProviders:null,load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(this.removeStoreHandlers();a.firstChild;)a.removeChild(a.firstChild);this.uiProviders||(this.uiProviders=a.getOwnerTree().getLoader().uiProviders);this.store||(this.store=GeoExt.MapPanel.guess().layers);this.store.each(function(b){this.addLayerNode(a,b)},this);this.addStoreHandlers(a);
"function"==typeof b&&b();this.fireEvent("load",this,a)}},onStoreAdd:function(a,b,c,d){if(!this._reordering)for(a=d.recordIndexToNodeIndex(c+b.length-1),c=0;c<b.length;++c)this.addLayerNode(d,b[c],a)},onStoreRemove:function(a,b,c,d){this._reordering||this.removeLayerNode(d,b)},addLayerNode:function(a,b,c){c=c||0;!0===this.filter(b)&&(b=this.createNode({nodeType:"gx_layer",layer:b.getLayer(),layerStore:this.store,iconCls:this.iconCls[b.id]}),(c=a.item(c))?a.insertBefore(b,c):a.appendChild(b),b.on("move",
this.onChildMove,this))},removeLayerNode:function(a,b){if(!0===this.filter(b)){var c=a.findChildBy(function(a){return a.layer==b.getLayer()});c&&(c.un("move",this.onChildMove,this),c.remove(),a.reload())}},onChildMove:function(a,b,c,d,e){this._reordering=!0;a=this.store.getByLayer(b.layer);delete c.loader.iconCls[a.id];if(d instanceof GeoExt.tree.LayerContainer&&this.store===d.loader.store){d.loader._reordering=!0;d.loader.iconCls[a.id]=b.attributes.iconCls;this.store.remove(a);var f;if(1<d.childNodes.length){var g=
0===e?e+1:e-1;f=this.store.findBy(function(a){return d.childNodes[g].layer===a.getLayer()});0===e&&f++}else if(c.parentNode===d.parentNode){var h=d;do h=h.previousSibling;while(h&&!(h instanceof GeoExt.tree.LayerContainer&&h.lastChild));if(h)f=this.store.findBy(function(a){return h.lastChild.layer===a.getLayer()});else{var k=d;do k=k.nextSibling;while(k&&!(k instanceof GeoExt.tree.LayerContainer&&k.firstChild));k&&(f=this.store.findBy(function(a){return k.firstChild.layer===a.getLayer()}));f++}}void 0!==
f?(this.store.insert(f,[a]),window.setTimeout(function(){d.reload();c.reload()})):this.store.insert(oldRecordIndex,[a]);delete d.loader._reordering}delete this._reordering},addStoreHandlers:function(a){if(!this._storeHandlers){this._storeHandlers={add:this.onStoreAdd.createDelegate(this,[a],!0),remove:this.onStoreRemove.createDelegate(this,[a],!0)};for(var b in this._storeHandlers)this.store.on(b,this._storeHandlers[b],this)}},removeStoreHandlers:function(){if(this._storeHandlers){for(var a in this._storeHandlers)this.store.un(a,
this._storeHandlers[a],this);delete this._storeHandlers}},createNode:function(a){this.baseAttrs&&Ext.apply(a,this.baseAttrs);"string"==typeof a.uiProvider&&(a.uiProvider=this.uiProviders[a.uiProvider]||eval(a.uiProvider));a.nodeType=a.nodeType||"gx_layer";return new Ext.tree.TreePanel.nodeTypes[a.nodeType](a)},destroy:function(){this.removeStoreHandlers();this.iconCls=null}});Ext.namespace("GeoExt");
GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,prettyStateKeys:!1,stateEvents:"aftermapmove afterlayervisibilitychange afterlayeropacitychange afterlayerorderchange afterlayernamechange afterlayeradd afterlayerremove".split(" "),initComponent:function(){this.map instanceof OpenLayers.Map||(this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:!0,fallThrough:!0})));var a=this.layers;if(!a||a instanceof Array)this.layers=new GeoExt.data.LayerStore({layers:a,
map:0<this.map.layers.length?this.map:null});"string"==typeof this.center?this.center=OpenLayers.LonLat.fromString(this.center):this.center instanceof Array&&(this.center=new OpenLayers.LonLat(this.center[0],this.center[1]));"string"==typeof this.extent?this.extent=OpenLayers.Bounds.fromString(this.extent):this.extent instanceof Array&&(this.extent=OpenLayers.Bounds.fromArray(this.extent));GeoExt.MapPanel.superclass.initComponent.call(this);this.addEvents("aftermapmove","afterlayervisibilitychange",
"afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove");this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this});this.on("afterlayout",function(){"function"===typeof this.map.getViewport&&this.items.each(function(a){"function"===typeof a.addToMapPanel&&a.getEl().appendTo(this.map.getViewport())},this)},this)},onMoveend:function(){this.fireEvent("aftermapmove")},
onChangelayer:function(a){a.property&&("visibility"===a.property?this.fireEvent("afterlayervisibilitychange"):"order"===a.property?this.fireEvent("afterlayerorderchange"):"name"===a.property?this.fireEvent("afterlayernamechange"):"opacity"===a.property&&this.fireEvent("afterlayeropacitychange"))},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},applyState:function(a){"x"in a&&"y"in a&&(this.center=new OpenLayers.LonLat(a.x,a.y));"zoom"in
a&&(this.zoom=a.zoom);var b,c,d,e,f,g=this.map.layers;b=0;for(c=g.length;b<c;b++)d=g[b],e=this.prettyStateKeys?d.name:d.id,f=a["visibility_"+e],void 0!==f&&(f=/^true$/i.test(f),d.isBaseLayer?f&&this.map.setBaseLayer(d):d.setVisibility(f)),e=a["opacity_"+e],void 0!==e&&d.setOpacity(e)},getState:function(){var a;if(this.map){a=(a=this.map.getCenter())?{x:a.lon,y:a.lat,zoom:this.map.getZoom()}:{};var b,c,d,e,f=this.map.layers;b=0;for(c=f.length;b<c;b++)d=f[b],e=this.prettyStateKeys?d.name:d.id,a["visibility_"+
e]=d.getVisibility(),a["opacity_"+e]=null==d.opacity?1:d.opacity;return a}},updateMapSize:function(){this.map&&this.map.updateSize()},renderMap:function(){var a=this.map;a.render(this.body.dom);this.layers.bind(a);if(0<a.layers.length)this.setInitialExtent();else this.layers.on("add",this.setInitialExtent,this,{single:!0})},setInitialExtent:function(){var a=this.map;this.center||null!=this.zoom?a.setCenter(this.center,this.zoom):this.extent?a.zoomToExtent(this.extent):a.zoomToMaxExtent()},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,
arguments);this.ownerCt?(this.ownerCt.on("move",this.updateMapSize,this),this.ownerCt.on({afterlayout:this.afterLayout,scope:this})):this.renderMap()},afterLayout:function(){var a=this.getInnerWidth()-this.body.getBorderWidth("lr"),b=this.getInnerHeight()-this.body.getBorderWidth("tb");0<a&&0<b&&(this.ownerCt.un("afterlayout",this.afterLayout,this),this.renderMap())},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize()},onBeforeAdd:function(a){"function"===
typeof a.addToMapPanel&&a.addToMapPanel(this);GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments)},remove:function(a,b){"function"===typeof a.removeFromMapPanel&&a.removeFromMapPanel(this);GeoExt.MapPanel.superclass.remove.apply(this,arguments)},beforeDestroy:function(){this.ownerCt&&this.ownerCt.un("move",this.updateMapSize,this);this.map&&this.map.events&&this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this});
this.initialConfig.map&&this.initialConfig.map instanceof OpenLayers.Map||this.map&&this.map.destroy&&this.map.destroy();delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(a){return a instanceof GeoExt.MapPanel})};Ext.reg("gx_mappanel",GeoExt.MapPanel);Ext.namespace("GeoExt","GeoExt.data");
GeoExt.data.LayerReader=function(a,b){a=a||{};b instanceof Function||(b=GeoExt.data.LayerRecord.create(b||a.fields||{}));GeoExt.data.LayerReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(a){var b=[];if(a){var c=this.recordType,d=c.prototype.fields,e,f,g,h,k,l,m,n;e=0;for(f=a.length;e<f;e++){k=a[e];l={};g=0;for(h=d.length;g<h;g++)m=d.items[g],n=k[m.mapping||m.name]||m.defaultValue,n=m.convert(n),l[m.name]=n;l.layer=k;b[b.length]=new c(l,k.id)}}return{records:b,totalRecords:null!=this.totalRecords?this.totalRecords:b.length}}});Ext.namespace("GeoExt.data");
GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer")};GeoExt.data.LayerRecord.prototype.setLayer=function(a){a!==this.data.layer&&(this.dirty=!0,this.modified||(this.modified={}),void 0===this.modified.layer&&(this.modified.layer=this.data.layer),this.data.layer=a,this.editing||this.afterEdit())};
GeoExt.data.LayerRecord.prototype.clone=function(a){var b=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:b},this.data),a||b.id)};
GeoExt.data.LayerRecord.create=function(a){var b=Ext.extend(GeoExt.data.LayerRecord,{}),c=b.prototype;c.fields=new Ext.util.MixedCollection(!1,function(a){return a.name});GeoExt.data.LayerRecord.prototype.fields.each(function(a){c.fields.add(a)});if(a)for(var d=0,e=a.length;d<e;d++)c.fields.add(new Ext.data.Field(a[d]));b.getField=function(a){return c.fields.get(a)};return b};Ext.namespace("GeoExt.form");
GeoExt.form.BasicForm=Ext.extend(Ext.form.BasicForm,{protocol:null,prevResponse:null,autoAbort:!0,doAction:function(a,b){"search"==a&&(b=Ext.applyIf(b||{},{protocol:this.protocol,abortPrevious:this.autoAbort}),a=new GeoExt.form.SearchAction(this,b));return GeoExt.form.BasicForm.superclass.doAction.call(this,a,b)},search:function(a){return this.doAction("search",a)}});Ext.namespace("GeoExt.data");
GeoExt.data.StyleReader=Ext.extend(Ext.data.JsonReader,{onMetaChange:function(){GeoExt.data.StyleReader.superclass.onMetaChange.apply(this,arguments);this.recordType.prototype.commit=Ext.createInterceptor(this.recordType.prototype.commit,function(){var a=this.store.reader;a.raw[a.meta.root]=a.meta.storeToData(this.store)})},readRecords:function(a){var b;b=a instanceof OpenLayers.Symbolizer.Raster?"colorMap":"rules";this.raw=a;Ext.applyIf(this.meta,GeoExt.data.StyleReader.metaData[b]);var c={metaData:this.meta};
c[b]=a[b];return GeoExt.data.StyleReader.superclass.readRecords.call(this,c)}});
GeoExt.data.StyleReader.metaData={colorMap:{root:"colorMap",idProperty:"filter",fields:[{name:"symbolizers",mapping:function(a){return{fillColor:a.color,fillOpacity:a.opacity,stroke:!1}}},{name:"filter",mapping:"quantity",type:"float"},{name:"label",mapping:function(a){return a.label||a.quantity}}],storeToData:function(a){a.sort("filter","ASC");var b=[];a.each(function(a){var d=a.get("symbolizers"),e=a.get("label"),f=a.isModified("label"),g=Number(a.get("filter"));a.data.filter=g;if(!a.json.label&&
!f&&a.isModified("filter")||f&&!e)a.data.label=g;b.push(Ext.apply(a.json,{color:d.fillColor,label:"string"==typeof e?e:void 0,opacity:d.opacity,quantity:g}))});return b}},rules:{root:"rules",fields:["symbolizers","filter",{name:"label",mapping:"title"},"name","description","elseFilter","minScaleDenominator","maxScaleDenominator"],storeToData:function(a){var b=[];a.each(function(a){var d=a.get("filter");"string"===typeof d&&(d=d?OpenLayers.Format.CQL.prototype.read(d):null);b.push(Ext.apply(a.json,
{symbolizers:a.get("symbolizers"),filter:d,title:a.get("label"),name:a.get("name"),description:a.get("description"),elseFilter:a.get("elseFilter"),minScaleDenominator:a.get("minScaleDenominator"),maxScaleDenominator:a.get("maxScaleDenominator")}))});return b}}};Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.FeatureReader=function(a,b){a=a||{};b instanceof Function||(b=GeoExt.data.FeatureRecord.create(b||a.fields||{}));GeoExt.data.FeatureReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(a){var b=[];if(a){var c=this.recordType,d=c.prototype.fields,e,f,g,h,k,l,m,n;e=0;for(f=a.length;e<f;e++){k=a[e];l={};if(k.attributes)for(g=0,h=d.length;g<h;g++){m=d.items[g];if(/[\[\.]/.test(m.mapping))try{n=(new Function("obj","return obj."+m.mapping))(k.attributes)}catch(r){n=m.defaultValue}else n=k.attributes[m.mapping||m.name]||m.defaultValue;m.convert&&
(n=m.convert(n));l[m.name]=n}l.feature=k;l.state=k.state;l.fid=k.fid;b[b.length]=new c(l,k.state===OpenLayers.State.INSERT?void 0:k.id)}}return{records:b,totalRecords:null!=this.totalRecords?this.totalRecords:b.length}}});Ext.namespace("GeoExt");
GeoExt.WMSLegend=Ext.extend(GeoExt.LayerLegend,{defaultStyleIsFirst:!0,useScaleParameter:!0,baseParams:null,itemXType:"gx_legendimage",initComponent:function(){GeoExt.WMSLegend.superclass.initComponent.call(this);var a=this.layerRecord.getLayer();this._noMap=!a.map;a.events.register("moveend",this,this.onLayerMoveend);this.update()},onLayerMoveend:function(a){if(!0===a.zoomChanged&&!0===this.useScaleParameter||this._noMap)delete this._noMap,this.update()},getLegendUrl:function(a,b){var c=this.layerRecord,
d,e=c&&c.get("styles"),c=c.getLayer();b=b||(""+c.params.LAYERS).split(",");var f=c.params.STYLES&&(""+c.params.STYLES).split(","),g=b.indexOf(a),h=f&&f[g];e&&0<e.length&&(h?Ext.each(e,function(a){d=a.name==h&&a.legend&&a.legend.href;return!d}):f||c.params.SLD||c.params.SLD_BODY||(Ext.each(e,function(b){d=b.layerName==a&&b.legend&&b.legend.href;return!d}),d||!0!==this.defaultStyleIsFirst||(d=e[0].legend&&e[0].legend.href)),d&&(d=decodeURIComponent(d)));d||(d=c.getFullRequestString({REQUEST:"GetLegendGraphic",
WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:a,LAYERS:null,STYLE:""!==h?h:null,STYLES:null,SRS:null,FORMAT:null,TIME:null}));e=Ext.apply({},this.baseParams);c.params._OLSALT&&(e._OLSALT=c.params._OLSALT);e=Ext.urlEncode(e);f=/([&\?]?)format=[^&]*&?/i;f.test(e)&&f.test(d)&&(d=d.replace(f,"$1"));d=OpenLayers.Util.urlAppend(d,e);-1!=d.toLowerCase().indexOf("request=getlegendgraphic")&&(-1==d.toLowerCase().indexOf("format=")&&(d=Ext.urlAppend(d,"FORMAT=image%2Fgif")),!0===this.useScaleParameter&&
(c=c.map.getScale(),d=Ext.urlAppend(d,"SCALE="+c)));return d},update:function(){var a=this.layerRecord.getLayer();if(a&&a.map){GeoExt.WMSLegend.superclass.update.apply(this,arguments);var a=(""+a.params.LAYERS).split(",").reverse(),b=this.items.find(function(a){return a.isXType("label")});this.items.each(function(a){a!=b&&(this.remove(a),a.destroy())},this);var c,d,e;d=0;for(e=a.length;d<e;d++)c=a[d],this.items&&this.getComponent(c)||this.add({xtype:this.itemXType,url:this.getLegendUrl(c,a),itemId:c});
this.doLayout()}},beforeDestroy:function(){if(!0===this.useScaleParameter){var a=this.layerRecord.getLayer();a&&a.events&&a.events.unregister("moveend",this,this.onLayerMoveend)}GeoExt.WMSLegend.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.WMSLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.WMS?1:0};GeoExt.LayerLegend.types.gx_wmslegend=GeoExt.WMSLegend;Ext.reg("gx_wmslegend",GeoExt.WMSLegend);Ext.namespace("GeoExt.data");
GeoExt.data.WMSDescribeLayerReader=function(a,b){a=a||{};a.format||(a.format=new OpenLayers.Format.WMSDescribeLayer);"function"!==typeof b&&(b=Ext.data.Record.create(b||a.fields||[{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}]));GeoExt.data.WMSDescribeLayerReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.WMSDescribeLayerReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;b&&b.documentElement||(b=a.responseText);return this.readRecords(b)},readRecords:function(a){if("string"===typeof a||a.nodeType)a=this.meta.format.read(a);for(var b=[],c,d=0,e=a.length;d<e;d++)(c=a[d])&&b.push(new this.recordType(c));return{totalRecords:b.length,success:!0,records:b}}});Ext.namespace("GeoExt.form");
GeoExt.form.SearchAction=Ext.extend(Ext.form.Action,{type:"search",response:null,constructor:function(a,b){GeoExt.form.SearchAction.superclass.constructor.call(this,a,b)},run:function(){var a=this.options,b=GeoExt.form.toFilter(this.form,a.logicalOp,a.wildcard);!1===a.clientValidation||this.form.isValid()?(a.abortPrevious&&this.form.prevResponse&&a.protocol.abort(this.form.prevResponse),this.form.prevResponse=a.protocol.read(Ext.applyIf({filter:b,callback:this.handleResponse,scope:this},a))):!1!==
a.clientValidation&&(this.failureType=Ext.form.Action.CLIENT_INVALID,this.form.afterAction(this,!1))},handleResponse:function(a){this.form.prevResponse=null;this.response=a;a.success()?this.form.afterAction(this,!0):this.form.afterAction(this,!1);var b=this.options;b.callback&&b.callback.call(b.scope,a)}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature")};
GeoExt.data.FeatureRecord.prototype.setFeature=function(a){a!==this.data.feature&&(this.dirty=!0,this.modified||(this.modified={}),void 0===this.modified.feature&&(this.modified.feature=this.data.feature),this.data.feature=a,this.editing||this.afterEdit())};
GeoExt.data.FeatureRecord.create=function(a){var b=Ext.extend(GeoExt.data.FeatureRecord,{}),c=b.prototype;c.fields=new Ext.util.MixedCollection(!1,function(a){return a.name});GeoExt.data.FeatureRecord.prototype.fields.each(function(a){c.fields.add(a)});if(a)for(var d=0,e=a.length;d<e;d++)c.fields.add(new Ext.data.Field(a[d]));b.getField=function(a){return c.fields.get(a)};return b};Ext.namespace("GeoExt.plugins");GeoExt.plugins.AttributeForm=function(a){Ext.apply(this,a)};
GeoExt.plugins.AttributeForm.prototype={attributeStore:null,formPanel:null,init:function(a){this.formPanel=a;this.attributeStore instanceof Ext.data.Store&&(this.fillForm(),this.bind(this.attributeStore));a.on("destroy",this.onFormDestroy,this)},bind:function(a){this.unbind();a.on({load:this.onLoad,scope:this});this.attributeStore=a},unbind:function(){this.attributeStore&&this.attributeStore.un("load",this.onLoad,this)},onLoad:function(){this.formPanel.items&&this.formPanel.removeAll();this.fillForm()},
fillForm:function(){this.attributeStore.each(function(a){(a=GeoExt.form.recordToField(a,Ext.apply({checkboxLabelProperty:"fieldLabel"},this.recordToFieldOptions||{})))&&this.formPanel.add(a)},this);this.formPanel.doLayout()},onFormDestroy:function(){this.unbind()}};Ext.preg("gx_attributeform",GeoExt.plugins.AttributeForm);Ext.namespace("GeoExt.data");
GeoExt.data.WMSDescribeLayerStore=function(a){a=a||{};GeoExt.data.WMSDescribeLayerStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.WMSDescribeLayerReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSDescribeLayerStore,Ext.data.Store);Ext.namespace("GeoExt.form");
GeoExt.form.toFilter=function(a,b,c){a instanceof Ext.form.FormPanel&&(a=a.getForm());var d=[];a=a.getValues(!1);for(var e in a){var f=e.split("__"),g=a[e],h;1<f.length&&void 0!==(h=GeoExt.form.toFilter.FILTER_MAP[f[1]])?e=f[0]:h=OpenLayers.Filter.Comparison.EQUAL_TO;if(h===OpenLayers.Filter.Comparison.LIKE)switch(c){case GeoExt.form.ENDS_WITH:g=".*"+g;break;case GeoExt.form.STARTS_WITH:g+=".*";break;case GeoExt.form.CONTAINS:g=".*"+g+".*"}d.push(new OpenLayers.Filter.Comparison({type:h,value:g,property:e}))}return 1==
d.length&&b!=OpenLayers.Filter.Logical.NOT?d[0]:new OpenLayers.Filter.Logical({type:b||OpenLayers.Filter.Logical.AND,filters:d})};GeoExt.form.toFilter.FILTER_MAP={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE};
GeoExt.form.ENDS_WITH=1;GeoExt.form.STARTS_WITH=2;GeoExt.form.CONTAINS=3;
GeoExt.form.recordToField=function(a,b){b=b||{};var c=a.get("type");if("object"===typeof c&&c.xtype)return c;var c=c.split(":").pop(),d,e=a.get("name"),f=a.get("restriction")||{},g=a.get("nillable")||!1,h=a.get("label"),k=b.labelTpl;k?h=(k instanceof Ext.Template?k:new Ext.XTemplate(k)).apply(a.data):null==h&&(h=e);e={name:e,labelStyle:g?"":null!=b.mandatoryFieldLabelStyle?b.mandatoryFieldLabelStyle:"font-weight:bold;"};k=GeoExt.form.recordToField.REGEXES;f.enumeration?d=Ext.apply({xtype:"combo",
fieldLabel:h,mode:"local",forceSelection:!0,triggerAction:"all",editable:!1,store:f.enumeration},e):c.match(k.text)?(c=void 0!==f.maxLength?parseFloat(f.maxLength):void 0,f=void 0!==f.minLength?parseFloat(f.minLength):void 0,d=Ext.apply({xtype:c>=b.minTextAreaMaxLength?"textarea":"textfield",fieldLabel:h,maxLength:c,minLength:f},e)):c.match(k["int"])||c.match(k["float"])?(d=void 0!==f.maxInclusive?parseFloat(f.maxInclusive):void 0,f=void 0!==f.minInclusive?parseFloat(f.minInclusive):void 0,d=Ext.apply({xtype:g?
"numberornullfield":"numberfield",allowDecimals:k["float"].test(c),decimalPrecision:-1,allowNegative:!k.positive.test(c),fieldLabel:h,maxValue:d,minValue:f},e)):c.match(k["boolean"])?(d=Ext.apply({xtype:"checkbox"},e),d[b.checkboxLabelProperty||"boxLabel"]=h):c.match(k.date)&&(d=Ext.apply({xtype:"datefield",fieldLabel:h,format:"date"==c?"Y-m-d":"c"},e));return d};
GeoExt.form.recordToField.REGEXES={text:/^(string|text|character)$/i,"int":/^(integer|long|int|short|byte|nonPositiveInteger|negativeInteger|nonNegativeInteger|positiveInteger|unsignedLong|unsignedInt|unsignedShort|unsignedByte)$/i,"float":/^(float|double|decimal|number|real)$/i,positive:/^(nonNegativeInteger|positiveInteger|unsignedLong|unsignedInt|unsignedShort|unsignedByte)$/i,"boolean":/^(boolean)$/i,date:/^(date|dateTime)$/i};
GeoExt.form.NumberOrNullField=Ext.extend(Ext.form.NumberField,{getValue:function(){value=GeoExt.form.NumberOrNullField.superclass.getValue.apply(this,arguments);return""===value?null:value}});Ext.reg("numberornullfield",GeoExt.form.NumberOrNullField);Ext.namespace("GeoExt");
GeoExt.FeatureRenderer=Ext.extend(Ext.BoxComponent,{feature:void 0,symbolizers:[OpenLayers.Feature.Vector.style["default"]],symbolType:"Polygon",labelText:null,resolution:1,minWidth:20,minHeight:20,renderers:["SVG","VML","Canvas"],rendererOptions:null,pointFeature:void 0,lineFeature:void 0,polygonFeature:void 0,textFeature:void 0,renderer:null,initComponent:function(){GeoExt.FeatureRenderer.superclass.initComponent.apply(this,arguments);Ext.applyIf(this,{pointFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,
0)),lineFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-8,-3),new OpenLayers.Geometry.Point(-3,3),new OpenLayers.Geometry.Point(3,-3),new OpenLayers.Geometry.Point(8,3)])),polygonFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-8,-4),new OpenLayers.Geometry.Point(-6,-6),new OpenLayers.Geometry.Point(6,-6),new OpenLayers.Geometry.Point(8,-4),new OpenLayers.Geometry.Point(8,
4),new OpenLayers.Geometry.Point(6,6),new OpenLayers.Geometry.Point(-6,6),new OpenLayers.Geometry.Point(-8,4)])])),textFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0))});this.feature||this.setFeature(null,{draw:!1});this.addEvents("click")},initCustomEvents:function(){this.clearCustomEvents();this.el.on("click",this.onClick,this)},clearCustomEvents:function(){this.el&&this.el.removeAllListeners&&this.el.removeAllListeners()},onClick:function(){this.fireEvent("click",this)},
onRender:function(a,b){this.el||(this.el=document.createElement("div"),this.el.id=this.getId());this.renderer&&this.renderer.supported()||this.assignRenderer();this.renderer.map={getResolution:function(){return this.resolution}.createDelegate(this)};GeoExt.FeatureRenderer.superclass.onRender.apply(this,arguments);this.drawFeature()},afterRender:function(){GeoExt.FeatureRenderer.superclass.afterRender.apply(this,arguments);this.initCustomEvents()},onResize:function(a,b){this.setRendererDimensions();
GeoExt.FeatureRenderer.superclass.onResize.apply(this,arguments)},setRendererDimensions:function(){var a=this.feature.geometry.getBounds(),b=a.getWidth(),c=a.getHeight(),d=this.initialConfig.resolution;d||(d=Math.max(b/this.width||0,c/this.height||0)||1);this.resolution=d;var b=Math.max(this.width||this.minWidth,b/d),c=Math.max(this.height||this.minHeight,c/d),a=a.getCenterPixel(),e=b*d/2,d=c*d/2,d=new OpenLayers.Bounds(a.x-e,a.y-d,a.x+e,a.y+d);this.renderer.setSize(new OpenLayers.Size(Math.round(b),
Math.round(c)));this.renderer.setExtent(d,!0)},assignRenderer:function(){for(var a=0,b=this.renderers.length;a<b;++a){var c=OpenLayers.Renderer[this.renderers[a]];if(c&&c.prototype.supported()){this.renderer=new c(this.el,this.rendererOptions);break}}},setSymbolizers:function(a,b){this.symbolizers=a;b&&!b.draw||this.drawFeature()},setSymbolType:function(a,b){this.symbolType=a;this.setFeature(null,b)},setFeature:function(a,b){this.feature=a||this[this.symbolType.toLowerCase()+"Feature"];b&&!b.draw||
this.drawFeature()},drawFeature:function(){this.renderer.clear();this.setRendererDimensions();for(var a,b,c=0,d=this.symbolizers.length;c<d;++c)a=this.symbolizers[c],b=this.feature,a instanceof OpenLayers.Symbolizer?(a=a.clone(),OpenLayers.Symbolizer.Text&&a instanceof OpenLayers.Symbolizer.Text&&!1===a.graphic&&(a.fill=a.stroke=!1),this.initialConfig.feature||(b=a.CLASS_NAME.split(".").pop().toLowerCase(),b=this[b+"Feature"])):a=Ext.apply({},a),void 0!==a.label&&null!==this.labelText&&(a.label=this.labelText),
this.renderer.drawFeature(b.clone(),a)},update:function(a){a=a||{};a.feature?this.setFeature(a.feature,{draw:!1}):a.symbolType&&this.setSymbolType(a.symbolType,{draw:!1});a.symbolizers&&this.setSymbolizers(a.symbolizers,{draw:!1});this.drawFeature()},beforeDestroy:function(){this.clearCustomEvents();this.renderer&&this.renderer.destroy()}});Ext.reg("gx_renderer",GeoExt.FeatureRenderer);Ext.namespace("GeoExt");
GeoExt.Popup=Ext.extend(Ext.Window,{anchored:!0,map:null,panIn:!0,unpinnable:!0,location:null,insideViewport:null,animCollapse:!1,draggable:!1,shadow:!1,popupCls:"gx-popup",ancCls:null,anchorPosition:"auto",initComponent:function(){this.map instanceof GeoExt.MapPanel&&(this.map=this.map.map);!this.map&&this.location instanceof OpenLayers.Feature.Vector&&this.location.layer&&(this.map=this.location.layer.map);this.location instanceof OpenLayers.Feature.Vector&&(this.location=this.location.geometry);
this.location instanceof OpenLayers.Geometry?("function"==typeof this.location.getCentroid&&(this.location=this.location.getCentroid()),this.location=this.location.getBounds().getCenterLonLat()):this.location instanceof OpenLayers.Pixel&&(this.location=this.map.getLonLatFromViewPortPx(this.location));this.location instanceof OpenLayers.LonLat||(this.anchored=!1);var a=this.map.getExtent();a&&this.location&&(this.insideViewport=a.containsLonLat(this.location));this.anchored?(this.addAnchorEvents(),
this.elements+=",anc"):this.unpinnable=!1;this.baseCls=this.popupCls+" "+this.baseCls;GeoExt.Popup.superclass.initComponent.call(this)},onRender:function(a,b){GeoExt.Popup.superclass.onRender.call(this,a,b);this.anchored?(this.ancCls=this.popupCls+"-anc",this.createElement("anc",this.el.dom)):this.makeDraggable()},initTools:function(){this.unpinnable&&this.addTool({id:"unpin",handler:this.unanchorPopup.createDelegate(this,[])});GeoExt.Popup.superclass.initTools.call(this)},show:function(){GeoExt.Popup.superclass.show.apply(this,
arguments);this.anchored&&(this.position(),this.panIn&&!this._mapMove&&this.panIntoView())},maximize:function(){!this.maximized&&this.anc&&this.unanchorPopup();GeoExt.Popup.superclass.maximize.apply(this,arguments)},setSize:function(a,b){if(this.anc){var c=this.anc.getSize();"object"==typeof a?(b=a.height-c.height,a=a.width):isNaN(b)||(b-=c.height)}GeoExt.Popup.superclass.setSize.call(this,a,b)},position:function(){var a=this;!0===a._mapMove&&(a.insideViewport=a.map.getExtent().containsLonLat(a.location),
a.insideViewport!==a.isVisible()&&a.setVisible(a.insideViewport));if(a.isVisible()){var b=a.map.getPixelFromLonLat(a.location),c=Ext.fly(a.map.div).getBox(!0),d=b.y+c.y,e=b.x+c.x,f=a.el.getSize(),g=a.anc.getSize(),h=a.anchorPosition;if(-1<h.indexOf("right")||b.x>c.width/2){a.anc.addClass("right");var k=a.el.getX(!0)+f.width-a.anc.getX(!0)-g.width,e=e-(f.width-k-g.width/2)}else a.anc.removeClass("right"),k=a.anc.getLeft(!0),e-=k+g.width/2;-1<h.indexOf("bottom")||b.y>c.height/2?(a.anc.removeClass("top"),
d-=f.height+g.height):(a.anc.addClass("top"),d+=g.height);a.setPagePosition(e,d);window.setTimeout(function(){a.el.dom&&a.setPagePosition(e,d)},0)}},makeDraggable:function(){this.draggable=!0;this.header.addClass("x-window-draggable");this.dd=new Ext.Window.DD(this)},unanchorPopup:function(){this.removeAnchorEvents();this.makeDraggable();this.anc.remove();this.anc=null;this.tools.unpin.hide()},panIntoView:function(){var a=Ext.fly(this.map.div).getBox(!0),b=this.getPosition(!0);b[0]-=a.x;b[1]-=a.y;
var a=[a.width,a.height],c=this.getSize(),d=[b[0],b[1]],e=this.map.paddingForPopups;b[0]<e.left?d[0]=e.left:b[0]+c.width>a[0]-e.right&&(d[0]=a[0]-e.right-c.width);b[1]<e.top?d[1]=e.top:b[1]+c.height>a[1]-e.bottom&&(d[1]=a[1]-e.bottom-c.height);this.map.pan(b[0]-d[0],b[1]-d[1])},onMapMove:function(){this.hidden&&this.insideViewport||(this._mapMove=!0,this.position(),delete this._mapMove)},addAnchorEvents:function(){this.map.events.on({move:this.onMapMove,scope:this});this.on({resize:this.position,
collapse:this.position,expand:this.position,scope:this})},removeAnchorEvents:function(){this.map.events.un({move:this.onMapMove,scope:this});this.un("resize",this.position,this);this.un("collapse",this.position,this);this.un("expand",this.position,this)},beforeDestroy:function(){this.anchored&&this.removeAnchorEvents();GeoExt.Popup.superclass.beforeDestroy.call(this)}});Ext.reg("gx_popup",GeoExt.Popup);Ext.namespace("GeoExt.data");
GeoExt.data.AttributeStoreMixin=function(){return{constructor:function(a){a=a||{};arguments.callee.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.AttributeReader(a,a.fields||["name","type","restriction",{name:"nillable",type:"boolean"},"annotation"])}));this.feature&&this.bind()},bind:function(){this.on({update:this.onUpdate,load:this.onLoad,add:this.onAdd,scope:this});var a=[];
this.each(function(b){a.push(b)});this.updateFeature(a)},onUpdate:function(a,b,c){this.updateFeature([b])},onLoad:function(a,b,c){c&&!0===c.add||this.updateFeature(b)},onAdd:function(a,b,c){this.updateFeature(b)},updateFeature:function(a){var b=this.feature,c=b.layer,d,e,f,g,h,k;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.get("name"),h=f.get("value"),f=b.attributes[g],f!==h&&(k=!0);if(k&&c&&c.events&&!1!==c.events.triggerEvent("beforefeaturemodified",{feature:b})){d=0;for(e=a.length;d<e;d++)f=a[d],g=f.get("name"),
h=f.get("value"),"xsd:date"==f.get("type")&&h instanceof Date&&(h=h.format("Y-m-d")),b.attributes[g]=h;c.events.triggerEvent("featuremodified",{feature:b});c.drawFeature(b)}}}};GeoExt.data.AttributeStore=Ext.extend(Ext.data.Store,GeoExt.data.AttributeStoreMixin());Ext.namespace("GeoExt.form");GeoExt.form.FormPanel=Ext.extend(Ext.form.FormPanel,{protocol:null,createForm:function(){delete this.initialConfig.listeners;return new GeoExt.form.BasicForm(null,this.initialConfig)},search:function(a){this.getForm().search(a)}});
Ext.reg("gx_formpanel",GeoExt.form.FormPanel);Ext.namespace("GeoExt.tree");GeoExt.tree.OverlayLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Overlays",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});a.loader=Ext.applyIf(a.loader||{},{filter:function(a){a=a.getLayer();return!0===a.displayInLayerSwitcher&&!1===a.isBaseLayer}});GeoExt.tree.OverlayLayerContainer.superclass.constructor.call(this,a)}});Ext.tree.TreePanel.nodeTypes.gx_overlaylayercontainer=GeoExt.tree.OverlayLayerContainer;
Ext.namespace("GeoExt");
GeoExt.Action=Ext.extend(Ext.Action,{control:null,activateOnEnable:!1,deactivateOnDisable:!1,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(a){this.uScope=a.scope;this.uHandler=a.handler;this.uToggleHandler=a.toggleHandler;this.uCheckHandler=a.checkHandler;a.scope=this;a.handler=this.pHandler;a.toggleHandler=this.pToggleHandler;a.checkHandler=this.pCheckHandler;var b=this.control=a.control;delete a.control;this.activateOnEnable=!!a.activateOnEnable;
delete a.activateOnEnable;this.deactivateOnDisable=!!a.deactivateOnDisable;delete a.deactivateOnDisable;b&&(a.map&&(a.map.addControl(b),delete a.map),(a.pressed||a.checked)&&b.map&&b.activate(),b.active&&(a.pressed=!0,a.checked=!0),b.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this}));arguments.callee.superclass.constructor.call(this,a)},pHandler:function(a){var b=this.control;b&&b.type==OpenLayers.Control.TYPE_BUTTON&&b.trigger();this.uHandler&&this.uHandler.apply(this.uScope,
arguments)},pToggleHandler:function(a,b){this.changeControlState(b);this.uToggleHandler&&this.uToggleHandler.apply(this.uScope,arguments)},pCheckHandler:function(a,b){this.changeControlState(b);this.uCheckHandler&&this.uCheckHandler.apply(this.uScope,arguments)},changeControlState:function(a){a?this._activating||(this._activating=!0,this.control.activate(),this.initialConfig.pressed=!0,this.initialConfig.checked=!0,this._activating=!1):this._deactivating||(this._deactivating=!0,this.control.deactivate(),
this.initialConfig.pressed=!1,this._deactivating=this.initialConfig.checked=!1)},onCtrlActivate:function(){this.control.type==OpenLayers.Control.TYPE_BUTTON?this.enable():(this.safeCallEach("toggle",[!0]),this.safeCallEach("setChecked",[!0]))},onCtrlDeactivate:function(){this.control.type==OpenLayers.Control.TYPE_BUTTON?this.disable():(this.safeCallEach("toggle",[!1]),this.safeCallEach("setChecked",[!1]))},safeCallEach:function(a,b){for(var c=this.items,d=0,e=c.length;d<e;d++)c[d][a]&&(c[d].rendered?
c[d][a].apply(c[d],b):c[d].on({render:c[d][a].createDelegate(c[d],b),single:!0}))},setDisabled:function(a){!a&&this.activateOnEnable&&this.control&&!this.control.active&&this.control.activate();a&&this.deactivateOnDisable&&this.control&&this.control.active&&this.control.deactivate();return GeoExt.Action.superclass.setDisabled.apply(this,arguments)}});Ext.namespace("GeoExt");
GeoExt.ZoomSliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>Zoom Level: {zoom}</div><div>Resolution: {resolution}</div><div>Scale: 1 : {scale}</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.ZoomSliderTip.superclass.init.call(this,a)},getText:function(a){a={zoom:a.value,resolution:this.slider.getResolution(),scale:Math.round(this.slider.getScale())};return this.compiledTemplate.apply(a)}});Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerParamNode=Ext.extend(Ext.tree.TreeNode,{layer:null,param:null,item:null,delimiter:null,allItems:null,constructor:function(a){var b=a||{};b.iconCls=b.iconCls||"gx-tree-layerparam-icon";b.text=b.text||b.item;this.param=b.param;this.item=b.item;this.delimiter=b.delimiter||",";this.allItems=b.allItems;GeoExt.tree.LayerParamNode.superclass.constructor.apply(this,arguments);this.getLayer();if(this.layer){this.allItems||(this.allItems=this.getItemsFromLayer());if(null==this.attributes.checked)this.attributes.checked=
this.layer.getVisibility()&&0<=this.getItemsFromLayer().indexOf(this.item);else this.onCheckChange(this,this.attributes.checked);this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this})}},getLayer:function(){if(!this.layer){var a=this.attributes.layer;if("string"==typeof a)var b=this.attributes.layerStore||GeoExt.MapPanel.guess().layers,c=b.findBy(function(b){return b.get("title")==a}),a=-1!=c?b.getAt(c).getLayer():null;
this.layer=a}return this.layer},getItemsFromLayer:function(){var a=this.layer.params[this.param];return a instanceof Array?a:a?a.split(this.delimiter):[]},createParams:function(a){var b={};b[this.param]=this.layer.params[this.param]instanceof Array?a:a.join(this.delimiter);return b},onLayerVisibilityChanged:function(){0===this.getItemsFromLayer().length&&this.layer.mergeNewParams(this.createParams(this.allItems));var a=this.layer.getVisibility();a&&-1!==this.getItemsFromLayer().indexOf(this.item)&&
this.getUI().toggleCheck(!0);a||(this.layer.mergeNewParams(this.createParams([])),this.getUI().toggleCheck(!1))},onCheckChange:function(a,b){var c=this.layer,d=[],e=this.getItemsFromLayer();!0===b&&!1===c.getVisibility()&&e.length===this.allItems.length&&(e=[]);Ext.each(this.allItems,function(a){(a!==this.item&&-1!==e.indexOf(a)||!0===b&&a===this.item)&&d.push(a)},this);var f=0<d.length;f&&c.mergeNewParams(this.createParams(d));f!==c.getVisibility()&&c.setVisibility(f);!f&&c.mergeNewParams(this.createParams([]))},
destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this});delete this.layer;this.un("checkchange",this.onCheckChange,this);GeoExt.tree.LayerParamNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layerparam=GeoExt.tree.LayerParamNode;Ext.namespace("GeoExt");
GeoExt.UrlLegend=Ext.extend(GeoExt.LayerLegend,{initComponent:function(){GeoExt.UrlLegend.superclass.initComponent.call(this);this.add(new GeoExt.LegendImage({url:this.layerRecord.get("legendURL")}))},update:function(){GeoExt.UrlLegend.superclass.update.apply(this,arguments);this.items.get(1).setUrl(this.layerRecord.get("legendURL"))}});GeoExt.UrlLegend.supports=function(a){return null==a.get("legendURL")?0:10};GeoExt.LayerLegend.types.gx_urllegend=GeoExt.UrlLegend;Ext.reg("gx_urllegend",GeoExt.UrlLegend);
Ext.namespace("GeoExt.state");GeoExt.state.PermalinkProvider=function(a){GeoExt.state.PermalinkProvider.superclass.constructor.apply(this,arguments);a=a||{};var b=a.url;delete a.url;Ext.apply(this,a);this.state=this.readURL(b)};
Ext.extend(GeoExt.state.PermalinkProvider,Ext.state.Provider,{encodeType:!0,readURL:function(a){var b={};a=OpenLayers.Util.getParameters(a);var c,d,e;for(c in a)a.hasOwnProperty(c)&&(d=c.split("_"),1<d.length&&(e=d[0],b[e]=b[e]||{},b[e][d.slice(1).join("_")]=this.encodeType?this.decodeValue(a[c]):a[c]));return b},getLink:function(a){a=a||document.location.href;var b={},c,d,e=this.state;for(c in e)if(e.hasOwnProperty(c))for(d in e[c])b[c+"_"+d]=this.encodeType?unescape(this.encodeValue(e[c][d])):e[c][d];
OpenLayers.Util.applyDefaults(b,OpenLayers.Util.getParameters(a));b=OpenLayers.Util.getParameterString(b);c=a.indexOf("?");0<c&&(a=a.substring(0,c));return Ext.urlAppend(a,b)}});Ext.namespace("GeoExt");
GeoExt.LegendImage=Ext.extend(Ext.BoxComponent,{url:null,defaultImgSrc:null,imgCls:null,noImgCls:"gx-legend-noimage",initComponent:function(){GeoExt.LegendImage.superclass.initComponent.call(this);null===this.defaultImgSrc&&(this.defaultImgSrc=Ext.BLANK_IMAGE_URL);this.autoEl={tag:"img","class":this.imgCls?this.imgCls+" "+this.noImgCls:this.noImgCls,src:this.defaultImgSrc}},getImgEl:function(){return this.getEl()},setUrl:function(a){this.url=a;var b=this.getImgEl();b&&(b.un("load",this.onImageLoad,
this),b.on("load",this.onImageLoad,this,{single:!0}),b.un("error",this.onImageLoadError,this),b.on("error",this.onImageLoadError,this,{single:!0}),b.dom.src=a)},onRender:function(a,b){GeoExt.LegendImage.superclass.onRender.call(this,a,b);this.url&&this.setUrl(this.url)},onDestroy:function(){var a=this.getImgEl();a&&(a.un("load",this.onImageLoad,this),a.un("error",this.onImageLoadError,this));GeoExt.LegendImage.superclass.onDestroy.apply(this,arguments)},onImageLoadError:function(){var a=this.getImgEl();
a.addClass(this.noImgCls);a.dom.src=this.defaultImgSrc},onImageLoad:function(){var a=this.getImgEl();OpenLayers.Util.isEquivalentUrl(a.dom.src,this.defaultImgSrc)||a.removeClass(this.noImgCls)}});Ext.reg("gx_legendimage",GeoExt.LegendImage);Ext.namespace("GeoExt.tree");GeoExt.tree.WMSCapabilitiesLoader=function(a){Ext.apply(this,a);GeoExt.tree.WMSCapabilitiesLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.WMSCapabilitiesLoader,Ext.tree.TreeLoader,{url:null,layerOptions:null,layerParams:null,requestMethod:"GET",getParams:function(a){return{service:"WMS",request:"GetCapabilities"}},processResponse:function(a,b,c,d){a=(new OpenLayers.Format.WMSCapabilities).read(a.responseXML||a.responseText);a.capability&&this.processLayer(a.capability,a.capability.request.getmap.href,b);"function"==typeof c&&c.apply(d||b,[b])},createWMSLayer:function(a,b){return a.name?new OpenLayers.Layer.WMS(a.title,
b,OpenLayers.Util.extend({formats:a.formats[0],layers:a.name},this.layerParams),OpenLayers.Util.extend({minScale:a.minScale,queryable:a.queryable,maxScale:a.maxScale,metadata:a},this.layerOptions)):null},processLayer:function(a,b,c){Ext.each(a.nestedLayers,function(a){var e=this.createNode({text:a.title||a.name,nodeType:"node",layer:this.createWMSLayer(a,b),leaf:0===a.nestedLayers.length});e&&c.appendChild(e);a.nestedLayers&&this.processLayer(a,b,e)},this)}});Ext.namespace("GeoExt.data");
GeoExt.data.AttributeReader=function(a,b){a=a||{};a.format||(a.format=new OpenLayers.Format.WFSDescribeFeatureType);GeoExt.data.AttributeReader.superclass.constructor.call(this,a,b||a.fields);a.feature&&this.recordType.prototype.fields.add(new Ext.data.Field("value"))};
Ext.extend(GeoExt.data.AttributeReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;b&&b.documentElement||(b=a.responseText);return this.readRecords(b)},readRecords:function(a){if(!(a instanceof Array)){a=this.meta.format.read(a);if(a.error)throw new Ext.data.DataReader.Error("invalid-response",a.error);a=a.featureTypes[0].properties}for(var b=this.meta.feature,c=this.recordType,d=c.prototype.fields,e=d.length,f,g,h,k,l,m=[],n=0,r=a.length;n<r;++n){k=!1;f=a[n];g={};for(var q=0;q<e;++q){l=
d.items[q];h=l.name;l=l.convert(f[h]);if(this.ignoreAttribute(h,l)){k=!0;break}g[h]=l}b&&(l=b.attributes[g.name],void 0!==l&&(this.ignoreAttribute("value",l)?k=!0:g.value=l));k||(m[m.length]=new c(g))}return{success:!0,records:m,totalRecords:m.length}},ignoreAttribute:function(a,b){var c=!1;if(this.meta.ignore&&this.meta.ignore[a]){var d=this.meta.ignore[a];"string"==typeof d?c=d===b:d instanceof Array?c=-1<d.indexOf(b):d instanceof RegExp&&(c=d.test(b))}return c}});Ext.namespace("GeoExt.grid");
GeoExt.grid.SymbolizerColumn=Ext.extend(Ext.grid.Column,{renderer:function(a,b){if(null!=a){var c=Ext.id();window.setTimeout(function(){var b=Ext.get(c);b&&new GeoExt.FeatureRenderer({symbolizers:a instanceof Array?a:[a],renderTo:b})},0);b.css="gx-grid-symbolizercol";return'<div id="'+c+'"></div>'}}});Ext.grid.Column.types.gx_symbolizercolumn=GeoExt.grid.SymbolizerColumn;Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{constructor:function(a){GeoExt.tree.LayerNodeUI.superclass.constructor.apply(this,arguments)},render:function(a){var b=this.node.attributes;void 0===b.checked&&(b.checked=this.node.layer.getVisibility());void 0===b.disabled&&this.node.autoDisable&&(this.node.disabled=!1===this.node.layer.inRange||!this.node.layer.calculateInRange());GeoExt.tree.LayerNodeUI.superclass.render.apply(this,arguments);var c=this.checkbox;b.checkedGroup&&(b=Ext.DomHelper.insertAfter(c,
['<input type="radio" name="',b.checkedGroup,'_checkbox" class="',c.className,c.checked?'" checked="checked"':"",'"></input>'].join("")),b.defaultChecked=c.defaultChecked,Ext.get(c).remove(),this.checkbox=b);this.enforceOneVisible()},onClick:function(a){a.getTarget(".x-tree-node-cb",1)?this.toggleCheck(this.isChecked()):GeoExt.tree.LayerNodeUI.superclass.onClick.apply(this,arguments)},toggleCheck:function(a){a=void 0===a?!this.isChecked():a;GeoExt.tree.LayerNodeUI.superclass.toggleCheck.call(this,
a);this.enforceOneVisible()},enforceOneVisible:function(){var a=this.node.attributes,b=a.checkedGroup;if(b&&"gx_baselayer"!==b){var c=this.node.layer,d=this.node.getOwnerTree().getChecked(),e=0;Ext.each(d,function(d){var g=d.layer;d.hidden||d.attributes.checkedGroup!==b||(e++,g!=c&&a.checked&&g.setVisibility(!1))});0===e&&0==a.checked&&c.setVisibility(!0)}},appendDDGhost:function(a){var b=this.elNode.cloneNode(!0),c=Ext.DomQuery.select("input[type='radio']",b);Ext.each(c,function(a){a.name+="_clone"});
a.appendChild(b)}});
GeoExt.tree.LayerNode=Ext.extend(Ext.tree.AsyncTreeNode,{layer:null,autoDisable:null,layerStore:null,constructor:function(a){a.leaf=a.leaf||!(a.children||a.loader);a.iconCls||a.children||(a.iconCls="gx-tree-layer-icon");!a.loader||a.loader instanceof Ext.tree.TreeLoader||(a.loader=new GeoExt.tree.LayerParamLoader(a.loader));this.defaultUI=this.defaultUI||GeoExt.tree.LayerNodeUI;Ext.apply(this,{layer:a.layer,layerStore:a.layerStore,autoDisable:a.autoDisable});a.text&&(this.fixedText=!0);GeoExt.tree.LayerNode.superclass.constructor.apply(this,
arguments)},render:function(a){var b=this.layer instanceof OpenLayers.Layer&&this.layer;if(!b){this.layerStore&&"auto"!=this.layerStore||(this.layerStore=GeoExt.MapPanel.guess().layers);var c=this.layerStore.findBy(function(a){return a.get("title")==this.layer},this);-1!=c&&(b=this.layerStore.getAt(c).getLayer())}this.rendered&&b||(c=this.getUI(),b?(this.layer=b,b.isBaseLayer&&(this.draggable=!1,Ext.applyIf(this.attributes,{checkedGroup:"gx_baselayer"})),this.autoDisable=!(!1===this.autoDisable||
this.layer.isBaseLayer||this.layer.alwaysInRange),this.text||(this.text=b.name),c.show(),this.addVisibilityEventHandlers()):c.hide(),this.layerStore instanceof GeoExt.data.LayerStore&&this.addStoreEventHandlers(b));GeoExt.tree.LayerNode.superclass.render.apply(this,arguments)},addVisibilityEventHandlers:function(){this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this});this.autoDisable&&(this.layer.map?this.layer.map.events.register("moveend",
this,this.onMapMoveend):this.layer.events.register("added",this,function b(){this.layer.events.unregister("added",this,b);this.layer.map.events.register("moveend",this,this.onMapMoveend)}))},onLayerVisibilityChanged:function(){this._visibilityChanging||this.getUI().toggleCheck(this.layer.getVisibility())},onCheckChange:function(a,b){if(b!=this.layer.getVisibility()){this._visibilityChanging=!0;var c=this.layer;b&&c.isBaseLayer&&c.map?c.map.setBaseLayer(c):c.setVisibility(b);delete this._visibilityChanging}},
onMapMoveend:function(a){this.autoDisable&&(!1===this.layer.inRange?this.disable():this.enable())},addStoreEventHandlers:function(){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,update:this.onStoreUpdate,scope:this})},onStoreAdd:function(a,b,c){for(c=0;c<b.length;++c)if(a=b[c].getLayer(),this.layer==a){this.getUI().show();break}else if(this.layer==a.name){this.render();break}},onStoreRemove:function(a,b,c){this.layer==b.getLayer()&&this.getUI().hide()},onStoreUpdate:function(a,
b,c){a=b.getLayer();this.fixedText||this.layer!=a||this.text===a.name||this.setText(a.name)},destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&(a.map&&a.map.events.unregister("moveend",this,this.onMapMoveend),a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this}));delete this.layer;if(a=this.layerStore)a.un("add",this.onStoreAdd,this),a.un("remove",this.onStoreRemove,this),a.un("update",this.onStoreUpdate,this);delete this.layerStore;this.un("checkchange",this.onCheckChange,
this);GeoExt.tree.LayerNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layer=GeoExt.tree.LayerNode;Ext.namespace("GeoExt.data");
GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(a){a=a||{};a.reader=a.reader||new GeoExt.data.FeatureReader({},a.fields);var b=a.layer;delete a.layer;a.features&&(a.data=a.features);delete a.features;var c={initDir:a.initDir};delete a.initDir;arguments.callee.superclass.constructor.call(this,a);b&&this.bind(b,c)},bind:function(a,b){if(!this.layer){this.layer=a;b=b||{};var c=b.initDir;void 0==b.initDir&&(c=GeoExt.data.FeatureStore.LAYER_TO_STORE|
GeoExt.data.FeatureStore.STORE_TO_LAYER);var d=a.features.slice(0);if(c&GeoExt.data.FeatureStore.STORE_TO_LAYER)for(var e=this.getRange(),f=e.length-1;0<=f;f--)this.layer.addFeatures([e[f].getFeature()]);c&GeoExt.data.FeatureStore.LAYER_TO_STORE&&this.loadData(d,!0);a.events.on({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,
scope:this})}},unbind:function(){this.layer&&(this.layer.events.un({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this}),this.un("load",this.onLoad,this),this.un("clear",this.onClear,this),this.un("add",this.onAdd,this),this.un("remove",this.onRemove,this),this.un("update",this.onUpdate,this),this.layer=null)},getRecordFromFeature:function(a){return this.getByFeature(a)||null},getByFeature:function(a){var b;if(a.state!==OpenLayers.State.INSERT)b=
this.getById(a.id);else{var c=this.findBy(function(b){return b.getFeature()===a});-1<c&&(b=this.getAt(c))}return b},onFeaturesAdded:function(a){if(!this._adding){var b=a=a.features;if(this.featureFilter){var b=[],c,d,e;c=0;for(d=a.length;c<d;c++)e=a[c],!1!==this.featureFilter.evaluate(e)&&b.push(e)}this._adding=!0;this.loadData(b,!0);delete this._adding}},onFeaturesRemoved:function(a){if(!this._removing){a=a.features;var b,c;for(c=a.length-1;0<=c;c--)b=a[c],b=this.getByFeature(b),void 0!==b&&(this._removing=
!0,this.remove(b),delete this._removing)}},onFeatureModified:function(a){if(!this._updating){a=a.feature;var b=this.getByFeature(a);if(void 0!==b){b.beginEdit();var c=a.attributes;if(c)for(var d=this.recordType.prototype.fields,e=0,f=d.length;e<f;e++){var g=d.items[e],h=g.mapping||g.name;h in c&&b.set(g.name,g.convert(c[h]))}b.set("state",a.state);b.set("fid",a.fid);b.setFeature(a);this._updating=!0;b.endEdit();delete this._updating}}},addFeaturesToLayer:function(a){var b,c,d;d=Array(c=a.length);
for(b=0;b<c;b++)d[b]=a[b].getFeature();0<d.length&&(this._adding=!0,this.layer.addFeatures(d),delete this._adding)},onLoad:function(a,b,c){c&&!0===c.add||(this._removing=!0,this.layer.removeFeatures(this.layer.features),delete this._removing,this.addFeaturesToLayer(b))},onClear:function(a){this._removing=!0;this.layer.removeFeatures(this.layer.features);delete this._removing},onAdd:function(a,b,c){this._adding||this.addFeaturesToLayer(b)},onRemove:function(a,b,c){this._removing||(a=b.getFeature(),
null!=this.layer.getFeatureById(a.id)&&(this._removing=!0,this.layer.removeFeatures([b.getFeature()]),delete this._removing))},onUpdate:function(a,b,c){if(!this._updating){var d=(new GeoExt.data.FeatureRecord).fields;a=b.getFeature();a.state!==OpenLayers.State.INSERT&&(a.state=OpenLayers.State.UPDATE);if(b.fields&&!1!==this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})){var e=a.attributes;b.fields.each(function(a){var c=a.mapping||a.name;d.containsKey(c)||(e[c]=b.get(a.name))});this._updating=
!0;this.layer.events.triggerEvent("featuremodified",{feature:a});delete this._updating;null!=this.layer.getFeatureById(a.id)&&this.layer.drawFeature(a)}}},destroy:function(){this.unbind();GeoExt.data.FeatureStore.superclass.destroy.call(this)}}};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace("GeoExt.grid");
GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:!0,layerFromStore:!0,selectControl:null,bound:!1,superclass:null,selectedFeatures:[],autoPanMapOnSelection:!1,constructor:function(a){a=a||{};if(a.selectControl instanceof OpenLayers.Control.SelectFeature){if(!a.singleSelect){var b=a.selectControl;a.singleSelect=!(b.multiple||b.multipleKey)}}else a.layer instanceof OpenLayers.Layer.Vector&&(this.selectControl=this.createSelectControl(a.layer,a.selectControl),delete a.layer,
delete a.selectControl);a.autoPanMapOnSelection&&(this.autoPanMapOnSelection=!0,delete a.autoPanMapOnSelection);this.superclass=arguments.callee.superclass;this.superclass.constructor.call(this,a)},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var a=this.grid.getStore()&&this.grid.getStore().layer;!a||this.selectControl instanceof OpenLayers.Control.SelectFeature||(this.selectControl=this.createSelectControl(a,this.selectControl))}this.selectControl&&this.bind(this.selectControl)},
createSelectControl:function(a,b){b=b||{};b=OpenLayers.Util.extend({toggle:!0,multipleKey:(void 0!==b.singleSelect?b.singleSelect:this.singleSelect)?null:Ext.isMac?"metaKey":"ctrlKey"},b);var c=new OpenLayers.Control.SelectFeature(a,b);a.map.addControl(c);return c},bind:function(a,b){if(!this.bound){b=b||{};this.selectControl=a;a instanceof OpenLayers.Layer.Vector&&(this.selectControl=this.createSelectControl(a,b.controlConfig));this.autoActivateControl&&this.selectControl.activate();for(var c=this.getLayers(),
d=0,e=c.length;d<e;d++)c[d].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=!0}return this.selectControl},unbind:function(){var a=this.selectControl;if(this.bound){for(var b=this.getLayers(),c=0,d=b.length;c<d;c++)b[c].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});this.un("rowselect",this.rowSelected,
this);this.un("rowdeselect",this.rowDeselected,this);this.autoActivateControl&&a.deactivate();this.selectControl=null;this.bound=!1}return a},featureSelected:function(a){if(!this._selecting){var b=this.grid.store.findBy(function(b,d){return b.getFeature()==a.feature});-1==b||this.isSelected(b)||(this._selecting=!0,this.selectRow(b,!this.singleSelect),this._selecting=!1,this.grid.getView().focusRow(b))}},featureUnselected:function(a){if(!this._selecting){var b=this.grid.store.findBy(function(b,d){return b.getFeature()==
a.feature});-1!=b&&this.isSelected(b)&&(this._selecting=!0,this.deselectRow(b),this._selecting=!1,this.grid.getView().focusRow(b))}},rowSelected:function(a,b,c){a=c.getFeature();if(!this._selecting&&a){b=this.getLayers();c=0;for(var d=b.length;c<d;c++)if(-1==b[c].selectedFeatures.indexOf(a)){this._selecting=!0;this.selectControl.select(a);this._selecting=!1;this.selectedFeatures.push(a);break}this.autoPanMapOnSelection&&this.recenterToSelectionExtent()}},rowDeselected:function(a,b,c){a=c.getFeature();
if(!this._selecting&&a){b=this.getLayers();c=0;for(var d=b.length;c<d;c++)if(-1!=b[c].selectedFeatures.indexOf(a)){this._selecting=!0;this.selectControl.unselect(a);this._selecting=!1;OpenLayers.Util.removeItem(this.selectedFeatures,a);break}this.autoPanMapOnSelection&&0<this.selectedFeatures.length&&this.recenterToSelectionExtent()}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer]},recenterToSelectionExtent:function(){var a=this.selectControl.map,b=this.getSelectionExtent();
a.getZoomForExtent(b,!1)>a.getZoom()?a.setCenter(b.getCenterLonLat()):a.zoomToExtent(b)},getSelectionExtent:function(){var a=null,b=this.selectedFeatures;if(b&&0<b.length)for(var c=null,d=0,e=b.length;d<e;d++)if(c=b[d].geometry)null===a&&(a=new OpenLayers.Bounds),a.extend(c.getBounds());return a}}};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin);Ext.namespace("GeoExt","GeoExt.data");
GeoExt.data.ProtocolProxy=function(a){Ext.apply(this,a);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments)};
Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:!0,setParamsAsOptions:!1,response:null,load:function(a,b,c,d,e){!1!==this.fireEvent("beforeload",this,a)?(b=OpenLayers.Function.bind(this.loadResponse,this,{params:a||{},request:{callback:c,scope:d,arg:e},reader:b}),this.abortPrevious&&this.abortRequest(),a={params:a,callback:b,scope:this},Ext.applyIf(a,e),!0===this.setParamsAsOptions&&(Ext.applyIf(a,a.params),delete a.params),this.response=this.protocol.read(a)):
c.call(d||this,null,e,!1)},abortRequest:function(){this.response&&(this.protocol.abort(this.response),this.response=null)},loadResponse:function(a,b){if(b.success()){var c;try{c=a.reader.read(b)}catch(d){this.fireEvent("loadexception",this,a,b,d);this.fireEvent("exception",this,"response",null,a,b,d);a.request.callback.call(a.request.scope,null,a.request.arg,!1);return}this.fireEvent("load",this,a,a.request.arg);a.request.callback.call(a.request.scope,c,a.request.arg,!0)}else this.fireEvent("loadexception",
this,a,b),a.request.callback.call(a.request.scope,null,a.request.arg,!1)}});Ext.namespace("GeoExt");
GeoExt.LegendPanel=Ext.extend(Ext.Panel,{dynamic:!0,layerStore:null,preferredTypes:null,filter:function(a){return!0},onRender:function(){GeoExt.LegendPanel.superclass.onRender.apply(this,arguments);this.layerStore||(this.layerStore=GeoExt.MapPanel.guess().layers);this.layerStore.each(function(a){this.addLegend(a)},this);if(this.dynamic)this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,clear:this.onStoreClear,scope:this})},recordIndexToPanelIndex:function(a){for(var b=this.layerStore,
c=b.getCount(),d=-1,e=this.items?this.items.length:0,f,g=c-1;0<=g&&!(f=b.getAt(g),c=f.getLayer(),f=GeoExt.LayerLegend.getTypes(f),c.displayInLayerSwitcher&&0<f.length&&!0!==b.getAt(g).get("hideInLegend")&&(++d,a===g||d>e-1));--g);return d},getIdForLayer:function(a){return this.id+"-"+a.id},onStoreAdd:function(a,b,c){a=this.recordIndexToPanelIndex(c+b.length-1);c=0;for(var d=b.length;c<d;c++)this.addLegend(b[c],a);this.doLayout()},onStoreRemove:function(a,b,c){this.removeLegend(b)},removeLegend:function(a){this.items&&
(a=this.getComponent(this.getIdForLayer(a.getLayer())))&&(this.remove(a,!0),this.doLayout())},onStoreClear:function(a){this.removeAllLegends()},removeAllLegends:function(){this.removeAll(!0);this.doLayout()},addLegend:function(a,b){if(!0===this.filter(a)){var c=a.getLayer();b=b||0;var d=GeoExt.LayerLegend.getTypes(a,this.preferredTypes);c.displayInLayerSwitcher&&!a.get("hideInLegend")&&0<d.length&&this.insert(b,{xtype:d[0],id:this.getIdForLayer(c),layerRecord:a,hidden:!(!c.map&&c.visibility||c.getVisibility()&&
c.calculateInRange())})}},onDestroy:function(){this.layerStore&&(this.layerStore.un("add",this.onStoreAdd,this),this.layerStore.un("remove",this.onStoreRemove,this),this.layerStore.un("clear",this.onStoreClear,this));GeoExt.LegendPanel.superclass.onDestroy.apply(this,arguments)}});Ext.reg("gx_legendpanel",GeoExt.LegendPanel);Ext.namespace("GeoExt.tree");
GeoExt.tree.TreeNodeUIEventMixin=function(){return{constructor:function(a){a.addEvents("rendernode","rawclicknode");this.superclass=arguments.callee.superclass;this.superclass.constructor.apply(this,arguments)},render:function(a){this.rendered||(this.superclass.render.apply(this,arguments),this.fireEvent("rendernode",this.node))},onClick:function(a){!1!==this.fireEvent("rawclicknode",this.node,a)&&this.superclass.onClick.apply(this,arguments)}}};Ext.namespace("GeoExt.data");
GeoExt.data.WMSCapabilitiesStore=function(a){a=a||{};GeoExt.data.WMSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.WMSCapabilitiesReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSCapabilitiesStore,Ext.data.Store);Ext.namespace("GeoExt");
GeoExt.LayerOpacitySliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>{opacity}%</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.LayerOpacitySliderTip.superclass.init.call(this,a)},getText:function(a){return this.compiledTemplate.apply({opacity:a.value})}});Ext.namespace("gxp");
gxp.NewSourceDialog=Ext.extend(Ext.Panel,{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS/TMS/REST endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server...",bodyStyle:"padding: 0px",error:null,initComponent:function(){this.addEvents("urlselected");this.urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:!1,width:240,msgTarget:"under",validator:this.urlValidator.createDelegate(this),
listeners:{specialkey:function(a,b){b.getKey()===b.ENTER&&this.addServer()},scope:this}});this.form=new Ext.form.FormPanel({items:[{xtype:"combo",width:240,name:"type",fieldLabel:"Type",value:"WMS",mode:"local",triggerAction:"all",store:[["WMS","Web Map Service (WMS)"],["TMS","Tiled Map Service (TMS)"],["REST","ArcGIS REST Service (REST)"]]},this.urlTextField],border:!1,labelWidth:30,bodyStyle:"padding: 5px",autoWidth:!0,autoHeight:!0,listeners:{afterrender:function(){this.urlTextField.focus(!1,!0)},
scope:this}});this.bbar=[new Ext.Button({text:this.cancelText,handler:this.hide,scope:this}),new Ext.Toolbar.Fill,new Ext.Button({text:this.addServerText,iconCls:"add",handler:this.addServer,scope:this})];this.items=this.form;gxp.NewSourceDialog.superclass.initComponent.call(this);this.form.on("render",function(){this.loadMask=new Ext.LoadMask(this.form.getEl(),{msg:this.contactingServerText})},this);this.on({hide:this.reset,removed:this.reset,scope:this});this.on("urlselected",function(a,b){this.setLoading();
this.addSource(b,this.hide,function(){this.setError(this.sourceLoadFailureMessage)},this)},this)},addServer:function(){this.error=null;this.urlTextField.validate()&&this.fireEvent("urlselected",this,this.urlTextField.getValue(),this.form.getForm().findField("type").getValue())},reset:function(){this.error=null;this.urlTextField.reset();this.loadMask.hide()},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(a){a=this.urlRegExp.test(a)?!this.error||this.error:
this.invalidURLText;this.error=null;return a},setLoading:function(){this.loadMask.show()},setError:function(a){this.loadMask.hide();this.error=a;this.urlTextField.validate()},addSource:function(a,b,c,d){}});Ext.reg("gxp_newsourcedialog",gxp.NewSourceDialog);Ext.namespace("gxp");
gxp.NewSourceWindow=Ext.extend(Ext.Window,{bodyStyle:"padding: 0px",hideBorders:!0,width:300,closeAction:"hide",error:null,initComponent:function(){window.setTimeout(function(){throw"gxp.NewSourceWindow is deprecated. Use gxp.NewSourceDialog instead.";},0);this.addEvents("server-added");gxp.NewSourceWindow.superclass.initComponent.apply(this,arguments);this.addEvents("server-added");var a=this.add(new gxp.NewSourceDialog(Ext.applyIf({addSource:this.addSource,header:!1,listeners:{urlselected:function(a,
c){this.fireEvent("server-added",c)}}},this.initialConfig)));this.setTitle(a.title);this.setLoading=a.setLoading.createDelegate(a);this.setError=a.setError.createDelegate(a);this.on("hide",a.onHide,a)},addSource:function(a,b,c,d){}});Ext.namespace("gxp");
gxp.util={_uniqueNames:{},getOGCExceptionText:function(a){var b;a&&a.exceptions?(b=[],Ext.each(a.exceptions,function(a){Ext.each(a.texts,function(a){b.push(a)})}),b=b.join("\n")):b="Unknown error (no exception report).";return b},dispatch:function(a,b,c){function d(){++g;g===f&&b.call(c,h)}function e(b){window.setTimeout(function(){a[b].apply(c,[d,h])})}b=b||Ext.emptyFn;c=c||this;for(var f=a.length,g=0,h={},k=0;k<f;++k)e(k)},uniqueName:function(a,b){b=b||" ";var c=new RegExp(b+"[0-9]*$"),d=a.replace(c,
""),c=c.exec(a),c=void 0!==this._uniqueNames[d]?this._uniqueNames[d]:c instanceof Array?Number(c[0]):void 0,e=d;void 0!==c&&(c++,e+=b+c);this._uniqueNames[d]=c||0;return e},getAbsoluteUrl:function(a){var b;Ext.isIE6||Ext.isIE7||Ext.isIE8?(b=document.createElement("<a href='"+a+"'/>"),b.style.display="none",document.body.appendChild(b),b.href=b.href,document.body.removeChild(b)):(b=document.createElement("a"),b.href=a);return b.href},throttle:function(){var a=function(a,c,d){var e,f,g,h,k=function(){a.apply(d||
this,g);e=(new Date).getTime()};return function(){f=(new Date).getTime()-e;g=arguments;clearTimeout(h);!e||f>=c?k():h=setTimeout(k,c-f)}};return function(b,c,d){return a(b,c,d)}}(),md5:function(){function a(a){return String.fromCharCode(a&255)+String.fromCharCode(a>>>8&255)+String.fromCharCode(a>>>16&255)+String.fromCharCode(a>>>24&255)}function b(a){for(;0>a;)a+=4294967296;for(;4294967295<a;)a-=4294967296;return a}var c=[0,3614090360,3905402710,606105819,3250441966,4118548399,1200080426,2821735955,
4249261313,1770035416,2336552879,4294925233,2304563134,1804603682,4254626195,2792965006,1236535329,4129170786,3225465664,643717713,3921069994,3593408605,38016083,3634488961,3889429448,568446438,3275163606,4107603335,1163531501,2850285829,4243563512,1735328473,2368359562,4294588738,2272392833,1839030562,4259657740,2763975236,1272893353,4139469664,3200236656,681279174,3936430074,3572445317,76029189,3654602809,3873151461,530742520,3299628645,4096336452,1126891415,2878612391,4237533241,1700485571,2399980690,
4293915773,2240044497,1873313359,4264355552,2734768916,1309151649,4149444226,3174756917,718787259,3951481745],d=[[function(a,b,c){return a&b|~a&c},[[0,7,1],[1,12,2],[2,17,3],[3,22,4],[4,7,5],[5,12,6],[6,17,7],[7,22,8],[8,7,9],[9,12,10],[10,17,11],[11,22,12],[12,7,13],[13,12,14],[14,17,15],[15,22,16]]],[function(a,b,c){return a&c|b&~c},[[1,5,17],[6,9,18],[11,14,19],[0,20,20],[5,5,21],[10,9,22],[15,14,23],[4,20,24],[9,5,25],[14,9,26],[3,14,27],[8,20,28],[13,5,29],[2,9,30],[7,14,31],[12,20,32]]],[function(a,
b,c){return a^b^c},[[5,4,33],[8,11,34],[11,16,35],[14,23,36],[1,4,37],[4,11,38],[7,16,39],[10,23,40],[13,4,41],[0,11,42],[3,16,43],[6,23,44],[9,4,45],[12,11,46],[15,16,47],[2,23,48]]],[function(a,b,c){return b^(a|~c)},[[0,6,49],[7,10,50],[14,15,51],[5,21,52],[12,6,53],[3,10,54],[10,15,55],[1,21,56],[8,6,57],[15,10,58],[6,15,59],[13,21,60],[4,6,61],[11,10,62],[2,15,63],[9,21,64]]]];return function(e){var f,g,h,k,l,m,n,r,q,u,t;f=[1732584193,4023233417,2562383102,271733878];g=e.length;h=g&63;k=56>h?
56-h:120-h;if(0<k)for(e+="\u0080",h=0;h<k-1;h++)e+="\x00";e+=a(8*g);e+=a(0);g+=k+8;k=[0,1,2,3];l=[16];m=[4];for(u=0;u<g;u+=64){h=0;for(q=u;16>h;h++,q+=4)l[h]=e.charCodeAt(q)|e.charCodeAt(q+1)<<8|e.charCodeAt(q+2)<<16|e.charCodeAt(q+3)<<24;for(h=0;4>h;h++)m[h]=f[h];for(h=0;4>h;h++)for(n=d[h][0],r=d[h][1],q=0;16>q;q++){t=l;var v=m,x=r[q],y=void 0,z=void 0,w=void 0,B=void 0,s=void 0,A=void 0,C=void 0,w=s=void 0,y=k[0],z=k[1],w=k[2],B=k[3],s=x[0],A=x[1],C=x[2],w=n(v[z],v[w],v[B]),s=v[y]+w+t[s]+c[C],s=
b(s),s=s<<A|s>>>32-A,s=s+v[z];v[y]=b(s);t=k[0];k[0]=k[3];k[3]=k[2];k[2]=k[1];k[1]=t}for(h=0;4>h;h++)f[h]+=m[h],f[h]=b(f[h])}h=a(f[0])+a(f[1])+a(f[2])+a(f[3]);f="";for(e=0;16>e;e++)g=h.charCodeAt(e),f+="0123456789abcdef".charAt(g>>4&15),f+="0123456789abcdef".charAt(g&15);return f}}()};Ext.namespace("gxp.plugins");
gxp.plugins.Tool=Ext.extend(Ext.util.Observable,{ptype:"gxp_tool",autoActivate:!0,actionTarget:"map.tbar",showButtonText:!1,output:null,constructor:function(a){this.initialConfig=a||{};this.active=!1;Ext.apply(this,a);this.id||(this.id=Ext.id());this.output=[];this.addEvents("activate","deactivate");gxp.plugins.Tool.superclass.constructor.apply(this,arguments)},init:function(a){a.tools[this.id]=this;this.target=a;this.autoActivate&&this.activate();this.target.on("portalready",this.addActions,this)},
activate:function(){if(!1===this.active)return this.active=!0,this.fireEvent("activate",this),!0},deactivate:function(){if(!0===this.active)return this.active=!1,this.fireEvent("deactivate",this),!0},getContainer:function(a){var b,c;b=a.split(".");if(c=b[0])if("map"==c)a=this.target.mapPanel;else{if(a=Ext.getCmp(c)||this.target.portal[c],!a)throw Error("Can't find component with id: "+c);}else a=this.target.portal;if(b=1<b.length&&b[1])a=(c={tbar:"getTopToolbar",bbar:"getBottomToolbar",fbar:"getFooterToolbar"}[b])?
a[c]():a[b];return a},addActions:function(a){if((a=a||this.actions)&&null!==this.actionTarget){var b=this.actionTarget instanceof Array?this.actionTarget:[this.actionTarget];a=a instanceof Array?a:[a];var c,d,e,f,g,h,k=null;for(e=b.length-1;0<=e;--e){if(c=b[e])c instanceof Object&&(k=c.index,c=c.target),h=this.getContainer(c);f=0;for(g=a.length;f<g;++f)if(a[f]instanceof Ext.Action||a[f]instanceof Ext.Component||((d=Ext.getCmp(a[f]))&&(a[f]=d),"string"!=typeof a[f]&&(f==this.defaultAction&&(a[f].pressed=
!0),a[f]=new Ext.Action(a[f]))),c=a[f],f==this.defaultAction&&c instanceof GeoExt.Action&&(c.isDisabled()?c.activateOnEnable=!0:c.control.activate()),h){this.showButtonText&&c.setText(c.initialConfig.buttonText);h instanceof Ext.menu.Menu?c=Ext.apply(new Ext.menu.CheckItem(c),{text:c.initialConfig.menuText,group:c.initialConfig.toggleGroup,groupClass:null}):h instanceof Ext.Toolbar||(c=new Ext.Button(c));var l=null===k?h.add(c):h.insert(k,c);c=c instanceof Ext.Button?c:l;null!==k&&(k+=1);if(null!=
this.outputAction&&f==this.outputAction)c.on("click",function(){d?this.outputTarget?d.show():d.ownerCt.ownerCt.show():d=this.addOutput()},this)}h&&(h.isVisible()?h.doLayout():h instanceof Ext.menu.Menu||h.show())}return this.actions=a}this.removeOutput();this.addOutput(this.outputConfig)},addOutput:function(a){if(a||this.outputConfig){a=a||{};var b=this.outputTarget;b?(b=this.getContainer(b),a instanceof Ext.Component||Ext.apply(a,this.outputConfig)):(b=this.outputConfig||{},b=(new Ext.Window(Ext.apply({hideBorders:!0,
shadow:!1,closeAction:"hide",autoHeight:!b.height,layout:b.height?"fit":void 0,items:[{defaults:Ext.applyIf({autoHeight:!b.height&&!(b.defaults&&b.defaults.height)},b.defaults)}]},b))).show().items.get(0));if(b)return a=b.add(a),a.on("removed",function(a){this.output.remove(a)},this,{single:!0}),a instanceof Ext.Window?a.show():b.doLayout(),this.output.push(a),a;a=this.ptype;window.console&&console.error("Failed to create output for plugin with ptype: "+a)}},removeOutput:function(){for(var a,b=this.output.length-
1;0<=b;--b)if(a=this.output[b],this.outputTarget)if(a.ownerCt){if(a.ownerCt.remove(a),a.ownerCt instanceof Ext.Window)a.ownerCt[a.ownerCt.closeAction]()}else a.remove();else a.findParentBy(function(a){return a instanceof Ext.Window}).close();this.output=[]},getState:function(){return Ext.apply({},this.initialConfig)}});Ext.preg(gxp.plugins.Tool.prototype.ptype,gxp.plugins.Tool);Ext.namespace("gxp.plugins");
gxp.plugins.RemoveLayer=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_removelayer",removeMenuText:"Remove layer",removeActionTip:"Remove layer",addActions:function(){var a,b=gxp.plugins.RemoveLayer.superclass.addActions.apply(this,[{menuText:this.removeMenuText,iconCls:"gxp-icon-removelayers",disabled:!0,tooltip:this.removeActionTip,handler:function(){var b=a;b&&this.target.mapPanel.layers.remove(b)},scope:this}]),c=b[0];this.target.on("layerselectionchange",function(b){a=b;c.setDisabled(1>=this.target.mapPanel.layers.getCount()||
!b)},this);var d=function(b){c.setDisabled(!a||1>=b.getCount())};this.target.mapPanel.layers.on({add:d,remove:d});return b}});Ext.preg(gxp.plugins.RemoveLayer.prototype.ptype,gxp.plugins.RemoveLayer);Ext.namespace("gxp.plugins");
gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{store:null,lazy:!1,hidden:!1,title:"",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.addEvents("ready","failure");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;this.createStore()},getMapProjection:function(){var a=this.target.mapPanel.map.projection;return this.target.mapPanel.map.getProjectionObject()||a&&new OpenLayers.Projection(a)||new OpenLayers.Projection("EPSG:4326")},
getProjection:function(a){a=a.getLayer();var b=this.getMapProjection();return(a.projection?a.projection instanceof OpenLayers.Projection?a.projection:new OpenLayers.Projection(a.projection):b).equals(b)?b:null},createStore:function(){this.fireEvent("ready",this)},createLayerRecord:function(a){},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),visibility:b.getVisibility(),opacity:b.opacity||void 0,group:a.get("group"),fixed:a.get("fixed"),
selected:a.get("selected")}},getState:function(){return Ext.apply({},this.initialConfig)}});(function(){function a(a){var c=this.meta.format;if("string"===typeof a||a.nodeType){a=c.read(a);var d=c.read;c.read=function(){c.read=d;return a}}this.raw=a}Ext.intercept(GeoExt.data.WMSCapabilitiesReader.prototype,"readRecords",a);GeoExt.data.AttributeReader&&Ext.intercept(GeoExt.data.AttributeReader.prototype,"readRecords",a)})();Ext.namespace("gxp.plugins");
gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_wmssource",baseParams:null,format:null,describeLayerStore:null,describedLayers:null,schemaCache:null,ready:!1,requiredProperties:["title","bbox"],constructor:function(a){a&&!0===a.forceLazy&&(a.requiredProperties=[],delete a.forceLazy,window.console&&console.warn("Deprecated config option 'forceLazy: true' for layer source '"+a.id+"'. Use 'requiredProperties: []' instead."));gxp.plugins.WMSSource.superclass.constructor.apply(this,
arguments);this.format||(this.format=new OpenLayers.Format.WMSCapabilities({keepData:!0}))},init:function(a){gxp.plugins.WMSSource.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.onAuthorizationChange,this)},onAuthorizationChange:function(){if(!0!==this.disabled&&this.store&&"/"===this.url.charAt(0)){var a=this.store.lastOptions||{params:{}};Ext.apply(a.params,{_dc:Math.random()});this.store.reload(a)}},destroy:function(){this.target.un("authorizationchange",this.onAuthorizationChange,
this);gxp.plugins.WMSSource.superclass.destroy.apply(this,arguments)},isLazy:function(){var a=!0,b=this.target.initialConfig.map;if(b&&b.layers)for(var c,d=0,e=b.layers.length;d<e&&(c=b.layers[d],c.source!==this.id||(a=this.layerConfigComplete(c),!1!==a));++d);return a},layerConfigComplete:function(a){var b=!0;if(!Ext.isObject(a.capability))for(var c=this.requiredProperties,d=c.length-1;0<=d&&(b=!!a[c[d]],!1!==b);--d);return b},createStore:function(){var a=this.baseParams||{SERVICE:"WMS",REQUEST:"GetCapabilities"};
this.version&&(a.VERSION=this.version);var b=this.isLazy();this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.trimUrl(this.url,a),baseParams:a,format:this.format,autoLoad:!b,layerParams:{exceptions:null},listeners:{load:function(){this.store.reader.raw&&this.store.reader.raw.service?(this.title||(this.title=this.store.reader.raw.service.title),this.ready?this.lazy=!1:(this.ready=!0,this.fireEvent("ready",this))):this.fireEvent("failure",this,"Invalid capabilities document.");delete this.format.data},
exception:function(a,b,e,f,g,h){delete this.store;a="";"response"===b?"string"==typeof h?b=h:(b="Invalid response from server.",(a=this.format&&this.format.data)&&a.parseError&&(b+="  "+a.parseError.reason+" - line: "+a.parseError.line),g=g.status,a=200<=g&&300>g?gxp.util.getOGCExceptionText(h&&h.arg&&h.arg.exceptionReport):"Status: "+g):(b="Trouble creating layer store from response.",a="Unable to handle response.");this.fireEvent("failure",this,b,a);delete this.format.data},scope:this}});b&&(this.lazy=
b,this.ready=!0,this.fireEvent("ready",this))},trimUrl:function(a,b,c){c=OpenLayers.Util.getParameters(a);b=OpenLayers.Util.upperCaseObject(b);var d=0,e;for(e in c)++d,e.toUpperCase()in b&&(--d,delete c[e]);return a.split("?").shift()+(d?"?"+OpenLayers.Util.getParameterString(c):"")},createLazyLayerRecord:function(a){a=Ext.apply({},a);var b=a.srs||this.target.map.projection;a.srs={};a.srs[b]=!0;var c=a.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[b].maxExtent;a.bbox={};a.bbox[b]=
{bbox:c};c=this.store&&this.store instanceof GeoExt.data.WMSCapabilitiesStore?new this.store.recordType(a):new GeoExt.data.LayerRecord(a);c.setLayer(new OpenLayers.Layer.WMS(a.title||a.name,a.url||this.url,{layers:a.name,transparent:"transparent"in a?a.transparent:!0,cql_filter:a.cql_filter,format:a.format},{projection:b,eventListeners:{tileloaded:this.countAlive,tileerror:this.countAlive,scope:this}}));c.json=a;return c},countAlive:function(a){"_alive"in a.object.metadata||(a.object.metadata._alive=
0,a.object.events.register("loadend",this,this.removeDeadLayer));a.object.metadata._alive+="tileerror"==a.type?-1:1},removeDeadLayer:function(a){a.object.events.un({tileloaded:this.countAlive,tileerror:this.countAlive,loadend:this.removeDeadLayer,scope:this});0===a.object.metadata._alive&&(this.target.mapPanel.map.removeLayer(a.object),window.console&&console.debug("Unavailable layer "+a.object.name+" removed."));delete a.object.metadata._alive},createLayerRecord:function(a){var b,c,d=this.store.findExact("name",
a.name);-1<d?c=this.store.getAt(d):Ext.isObject(a.capability)?c=this.store.reader.readRecords({capability:{request:{getmap:{href:this.trimUrl(this.url,this.baseParams)}},layers:[a.capability]}}).records[0]:this.layerConfigComplete(a)&&(c=this.createLazyLayerRecord(a));if(c){b=c.getLayer().clone();var d=this.getMapProjection(),e=this.getProjection(c);e&&b.addOptions({projection:e});var e=(e||d).getCode(),f=c.get("bbox"),g;if(f&&f[e])g=OpenLayers.Bounds.fromArray(f[e].bbox,b.reverseAxisOrder());else if(e=
c.get("llbbox"))e[0]=Math.max(e[0],-180),e[1]=Math.max(e[1],-90),e[2]=Math.min(e[2],180),e[3]=Math.min(e[3],90),g=OpenLayers.Bounds.fromArray(e).transform("EPSG:4326",d);b.mergeNewParams({STYLES:a.styles,FORMAT:a.format,TRANSPARENT:a.transparent,CQL_FILTER:a.cql_filter});d=!1;"tiled"in a?d=!a.tiled:c.data.dimensions&&c.data.dimensions.time&&(d=!0);b.setName(a.title||b.name);b.addOptions({attribution:b.attribution||a.attribution,maxExtent:g,restrictedExtent:g,singleTile:d,ratio:a.ratio||1,visibility:"visibility"in
a?a.visibility:!0,opacity:"opacity"in a?a.opacity:1,buffer:"buffer"in a?a.buffer:1,dimensions:c.data.dimensions,transitionEffect:d?"resize":null,minScale:a.minscale,maxScale:a.maxscale});g=Ext.applyIf({title:b.name,group:a.group,infoFormat:a.infoFormat,getFeatureInfo:a.getFeatureInfo,source:a.source,properties:"gxp_wmslayerpanel",fixed:a.fixed,selected:"selected"in a?a.selected:!1,restUrl:this.restUrl,layer:b},c.data);var h=[{name:"source",type:"string"},{name:"group",type:"string"},{name:"properties",
type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"restUrl",type:"string"},{name:"infoFormat",type:"string"},{name:"getFeatureInfo"}];c.fields.each(function(a){h.push(a)});b=new (GeoExt.data.LayerRecord.create(h))(g,b.id);b.json=a}else window.console&&0<this.store.getCount()&&void 0!==a.name&&console.warn("Could not create layer record for layer '"+a.name+"'. Check if the layer is found in the WMS GetCapabilities response.");return b},getProjection:function(a){var b=
this.getMapProjection(),c=b;a=a.get("srs");if(!a[b.getCode()]){var c=null,d;for(d in a)if((a=new OpenLayers.Projection(d)).equals(b)){c=a;break}}return c},initDescribeLayerStore:function(){var a=this.store.reader.raw;this.lazy&&(a={capability:{request:{describelayer:{href:this.url}}},version:this.version||"1.1.1"});var b=a.capability.request.describelayer;b&&(a=a.version,1.1<parseFloat(a)&&(a="1.1.1"),a={SERVICE:"WMS",VERSION:a,REQUEST:"DescribeLayer"},this.describeLayerStore=new GeoExt.data.WMSDescribeLayerStore({url:this.trimUrl(b.href,
a),baseParams:a}))},describeLayer:function(a,b,c){function d(a){window.setTimeout(function(){b.call(c,a)},0)}this.describeLayerStore||this.initDescribeLayerStore();if(this.describeLayerStore){this.describedLayers||(this.describedLayers={});var e=a.getLayer().params.LAYERS;a=function(){for(var a=Ext.isArray(arguments[1])?arguments[1]:arguments[0],d,g,m=a.length-1;0<=m;m--){d=a[m];g=d.get("layerName");if(g==e){this.describeLayerStore.un("load",arguments.callee,this);this.describedLayers[g]=!0;b.call(c,
d);return}"function"==typeof this.describedLayers[g]&&(d=this.describedLayers[g],this.describeLayerStore.un("load",d,this),d.apply(this,arguments))}delete f[e];b.call(c,!1)};var f=this.describedLayers,g;if(f[e])if(-1==(g=this.describeLayerStore.findExact("layerName",e)))this.describeLayerStore.on("load",a,this);else d(this.describeLayerStore.getAt(g));else f[e]=a,this.describeLayerStore.load({params:{LAYERS:e},add:!0,callback:a,scope:this})}else d(!1)},fetchSchema:function(a,b,c,d){var e=this.schemaCache[b];
if(e)if(0==e.getCount())e.on("load",function(){c.call(d,e)},this,{single:!0});else c.call(d,e);else e=new GeoExt.data.AttributeStore({url:a,baseParams:{SERVICE:"WFS",VERSION:"1.1.0",REQUEST:"DescribeFeatureType",TYPENAME:b},autoLoad:!0,listeners:{load:function(){c.call(d,e)},scope:this}}),this.schemaCache[b]=e},getSchema:function(a,b,c){this.schemaCache||(this.schemaCache={});this.describeLayer(a,function(d){if(d&&"WFS"==d.get("owsType")){var e=d.get("typeName");d=d.get("owsURL");this.fetchSchema(d,
e,b,c)}else d?b.call(c,!1):this.fetchSchema(this.url,a.get("name"),b,c)},this)},getWFSProtocol:function(a,b,c){this.getSchema(a,function(d){var e=!1;if(d){var f,g=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;d.each(function(a){g.exec(a.get("type"))&&(f=a.get("name"))},this);e=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:a.getLayer().projection.getCode(),url:d.url,featureType:d.reader.raw.featureTypes[0].typeName,featureNS:d.reader.raw.targetNamespace,geometryName:f})}b.call(c,
e,d,a)},this)},getConfigForRecord:function(a){var b=Ext.applyIf(gxp.plugins.WMSSource.superclass.getConfigForRecord.apply(this,arguments),a.json),c=a.getLayer(),d=c.params,e=c.options,f=b.name,g=this.store.reader.raw;if(g)for(var g=g.capability.layers,h=g.length-1;0<=h;--h)if(g[h].name===f){b.capability=Ext.apply({},g[h]);f={};f[c.projection.getCode()]=!0;b.capability.srs=f;break}b.capability||(c.maxExtent&&(b.bbox=c.maxExtent.toArray()),b.srs=c.projection.getCode());return Ext.apply(b,{format:d.FORMAT,
styles:d.STYLES,tiled:!e.singleTile,transparent:d.TRANSPARENT,cql_filter:d.CQL_FILTER,minscale:e.minScale,maxscale:e.maxScale,infoFormat:a.get("infoFormat"),attribution:c.attribution})},disable:function(){this.disabled=!0},getState:function(){var a=gxp.plugins.WMSSource.superclass.getState.apply(this,arguments);return Ext.applyIf(a,{title:this.title})}});Ext.preg(gxp.plugins.WMSSource.prototype.ptype,gxp.plugins.WMSSource);Ext.namespace("gxp.plugins");
gxp.plugins.CatalogueSource=Ext.extend(gxp.plugins.WMSSource,{url:null,yx:null,title:null,lazy:!0,hidden:!0,proxyOptions:null,describeLayer:function(a,b,c){a=new (Ext.data.Record.create([{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}]))({owsType:"WFS",owsURL:a.get("url"),typeName:a.get("name")});b.call(c,a)},destroy:function(){this.store&&this.store.destroy();this.store=null;gxp.plugins.CatalogueSource.superclass.destroy.apply(this,arguments)}});Ext.namespace("gxp.plugins");
gxp.plugins.GeoNodeCatalogueSource=Ext.extend(gxp.plugins.CatalogueSource,{ptype:"gxp_geonodecataloguesource",rootProperty:"results",baseParams:null,fields:[{name:"title",convert:function(a){return[a]}},{name:"abstract",mapping:"description"},{name:"bounds",mapping:"bbox",convert:function(a){return{left:a.minx,right:a.maxx,bottom:a.miny,top:a.maxy}}},{name:"URI",mapping:"links",convert:function(a){var b=[],c;for(c in a)b.push({value:a[c].url});return b}}],createStore:function(){this.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy(Ext.apply({url:this.url,
method:"GET"},this.proxyOptions||{})),baseParams:Ext.apply({type:"layer"},this.baseParams),reader:new Ext.data.JsonReader({root:this.rootProperty},this.fields)});gxp.plugins.LayerSource.prototype.createStore.apply(this,arguments)},getPagingStart:function(){return 0},getPagingParamNames:function(){return{start:"startIndex",limit:"limit"}},filter:function(a){var b=void 0;if(void 0!==a.filters)for(var c=0,d=a.filters.length;c<d;++c){var e=a.filters[c];if(e instanceof OpenLayers.Filter.Spatial){b=e.value.toBBOX();
break}}Ext.apply(this.store.baseParams,{q:a.queryString});void 0!==a.limit&&Ext.apply(this.store.baseParams,{limit:a.limit});void 0!==b?Ext.apply(this.store.baseParams,{bbox:b}):delete this.store.baseParams.bbox;this.store.load()},createLayerRecord:function(a){a.restUrl=this.restUrl;a.queryable=!0;return gxp.plugins.GeoNodeCatalogueSource.superclass.createLayerRecord.apply(this,arguments)}});Ext.preg(gxp.plugins.GeoNodeCatalogueSource.prototype.ptype,gxp.plugins.GeoNodeCatalogueSource);Ext.namespace("gxp.plugins");
gxp.plugins.FeedGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_getfeedfeatureinfo",init:function(a){gxp.plugins.FeedGetFeatureInfo.superclass.init.apply(this,arguments);this.target.mapPanel.layers.on({add:this.addLayer,remove:this.removeLayer,scope:this})},addLayer:function(a,b,c){a=0;for(c=b.length;a<c;++a){var d=b[a],e=this.target.getSource(d),d=d.getLayer();e instanceof gxp.plugins.FeedSource&&(null==this.target.selectControl?(this.target.selectControl=new OpenLayers.Control.SelectFeature(d,
{clickout:!0,listeners:{clickoutFeature:function(){}},scope:this}),this.target.mapPanel.map.addControl(this.target.selectControl)):(e=this.target.selectControl.layers?this.target.selectControl.layers:this.target.selectControl.layer?[this.target.selectControl.layer]:[],e.push(d),this.target.selectControl.setLayer(e)))}this.target.selectControl&&this.target.selectControl.activate()},removeLayer:function(a,b,c){b.length||(b=[b]);a=0;for(c=b.length;a<c;++a){var d=b[a].getLayer(),e=this.target.selectControl;
if(null!=e)if(e.layers)for(var f=0;f<e.layers.length;f++){var g=e.layers;e.layers[f].id===d.id&&(g.splice(f,1),e.setLayer(g))}else null!=e.layer&&d.id===e.layer.id&&e.setLayer([])}}});Ext.preg(gxp.plugins.FeedGetFeatureInfo.prototype.ptype,gxp.plugins.FeedGetFeatureInfo);
Ext.grid.RowExpander=function(a){Ext.apply(this,a);this.addEvents({beforeexpand:!0,expand:!0,beforecollapse:!0,collapse:!0});Ext.grid.RowExpander.superclass.constructor.call(this);this.tpl&&("string"==typeof this.tpl&&(this.tpl=new Ext.Template(this.tpl)),this.tpl.compile());this.state={};this.bodyContent={}};
Ext.extend(Ext.grid.RowExpander,Ext.util.Observable,{header:"",width:20,sortable:!1,fixed:!0,menuDisabled:!0,dataIndex:"",id:"expander",lazyRender:!0,enableCaching:!0,getRowClass:function(a,b,c,d){--c.cols;(d=this.bodyContent[a.id])||this.lazyRender||(d=this.getBodyContent(a,b));d&&(c.body=d);return this.state[a.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(a){this.grid=a;var b=a.getView();b.getRowClass=this.getRowClass.createDelegate(this);b.enableRowBody=!0;a.on("render",function(){b.mainBody.on("mousedown",
this.onMouseDown,this)},this)},getBodyContent:function(a,b){if(!this.enableCaching)return this.tpl.apply(a.data);var c=this.bodyContent[a.id];c||(c=this.tpl.apply(a.data),this.bodyContent[a.id]=c);return c},onMouseDown:function(a,b){if("x-grid3-row-expander"==b.className){a.stopEvent();var c=a.getTarget(".x-grid3-row");this.toggleRow(c)}},renderer:function(a,b,c){b.cellAttr='rowspan="2"';return'<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(a,b,c){return!1!==this.fireEvent("beforeexpand",
this,a,b,c)?(this.tpl&&this.lazyRender&&(b.innerHTML=this.getBodyContent(a,c)),!0):!1},toggleRow:function(a){"number"==typeof a&&(a=this.grid.view.getRow(a));this[Ext.fly(a).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](a)},expandRow:function(a){"number"==typeof a&&(a=this.grid.view.getRow(a));var b=this.grid.store.getAt(a.rowIndex),c=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",a);this.beforeExpand(b,c,a.rowIndex)&&(this.state[b.id]=!0,Ext.fly(a).replaceClass("x-grid3-row-collapsed",
"x-grid3-row-expanded"),this.fireEvent("expand",this,b,c,a.rowIndex))},collapseRow:function(a){"number"==typeof a&&(a=this.grid.view.getRow(a));var b=this.grid.store.getAt(a.rowIndex),c=Ext.fly(a).child("tr:nth(1) div.x-grid3-row-body",!0);!1!==this.fireEvent("beforecollapse",this,b,c,a.rowIndex)&&(this.state[b.id]=!1,Ext.fly(a).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed"),this.fireEvent("collapse",this,b,c,a.rowIndex))}});Ext.ns("gxp.data","gxp.plugins");
gxp.data.TMSCapabilitiesReader=Ext.extend(Ext.data.DataReader,{constructor:function(a,b){a=a||{};a.format||(a.format=new OpenLayers.Format.TMSCapabilities);"function"!==typeof b&&(b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"tileMapUrl",type:"string"}]));gxp.data.TMSCapabilitiesReader.superclass.constructor.call(this,a,b)},read:function(a){var b=a.responseXML;b&&b.documentElement||(b=a.responseText);return this.readRecords(b)},readRecords:function(a){var b=
[],c,d,e;if("string"===typeof a||a.nodeType)if(this.raw=a=this.meta.format.read(a),a.tileMaps)for(c=0,d=a.tileMaps.length;c<d;++c){var f=a.tileMaps[c];e=new OpenLayers.Projection(f.srs);if(this.meta.mapProjection.equals(e)){e=f.href;var g=e.substring(e.indexOf(this.meta.version+"/")+6);b.push(new this.recordType({layer:new OpenLayers.Layer.TMS(f.title,-1!==this.meta.baseUrl.indexOf(this.meta.version)?this.meta.baseUrl.replace(this.meta.version+"/",""):this.meta.baseUrl,{layername:g}),title:f.title,
name:f.title,tileMapUrl:e}))}}else if(a.tileSets&&(e=new OpenLayers.Projection(a.srs),this.meta.mapProjection.equals(e))){f=[];c=0;for(d=a.tileSets.length;c<d;++c)f.push(a.tileSets[c].unitsPerPixel);e=this.meta.baseUrl;c=e.substring(e.indexOf(this.meta.version)+this.meta.version.length+1,e.lastIndexOf("/"));b.push(new this.recordType({layer:new OpenLayers.Layer.TMS(a.title,a.tileMapService.replace("/"+this.meta.version,""),{serverResolutions:f,type:a.tileFormat.extension,layername:c}),title:a.title,
name:a.title,tileMapUrl:this.meta.baseUrl}))}return{totalRecords:b.length,success:!0,records:b}}});
gxp.plugins.TMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_tmssource",version:"1.0.0",constructor:function(a){gxp.plugins.TMSSource.superclass.constructor.apply(this,arguments);this.format=new OpenLayers.Format.TMSCapabilities;"/"!==this.url.slice(-1)&&(this.url+="/")},createStore:function(){this.store=new Ext.data.Store({autoLoad:!0,listeners:{load:function(){this.title=this.store.reader.raw.title;this.fireEvent("ready",this)},exception:function(){this.fireEvent("failure",this,"Trouble creating TMS layer store from response.",
"Unable to handle response.")},scope:this},proxy:new Ext.data.HttpProxy({url:-1===this.url.indexOf(this.version)?this.url+this.version:this.url,disableCaching:!1,method:"GET"}),reader:new gxp.data.TMSCapabilitiesReader({baseUrl:this.url,version:this.version,mapProjection:this.getMapProjection()})})},createLayerRecord:function(a,b,c){var d=this.store.findExact("name",a.name);if(-1<d){var d=this.store.getAt(d),e=d.getLayer();if(null!==e.serverResolutions)return d;Ext.Ajax.request({url:d.get("tileMapUrl"),
success:function(d){var g=[];d=this.format.read(d.responseText);for(var h=0,k=d.tileSets.length;h<k;++h)g.push(d.tileSets[h].unitsPerPixel);e.addOptions({serverResolutions:g,type:d.tileFormat.extension});this.target.createLayerRecord({source:this.id,name:a.name},b,c)},scope:this})}}});Ext.preg(gxp.plugins.TMSSource.prototype.ptype,gxp.plugins.TMSSource);Ext.namespace("gxp.plugins");
gxp.plugins.ArcRestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_arcrestsource",requiredProperties:["name"],constructor:function(a){this.config=a;gxp.plugins.ArcRestSource.superclass.constructor.apply(this,arguments)},createStore:function(){var a=this.url.split("?")[0],b=this,c=function(c){var f=Ext.decode(c.responseText),g=b.getArcProjection(f.spatialReference.wkid),h=[];if(null!=g)for(c=0;c<f.layers.length;c++){var k=f.layers[c];h.push(new OpenLayers.Layer.ArcGIS93Rest(k.name,a+"/export",
{layers:"show:"+k.id,TRANSPARENT:!0},{isBaseLayer:!1,ratio:1,displayInLayerSwitcher:!0,visibility:!0,projection:g,queryable:f.capabilities&&f.capabilities.Identify}))}else d(c);b.title=f.documentInfo.Title;b.store=new GeoExt.data.LayerStore({layers:h,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"name"},{name:"layerid",type:"string"},{name:"group",type:"string",defaultValue:this.title},{name:"fixed",type:"boolean",defaultValue:!0},{name:"tiled",type:"boolean",defaultValue:!0},
{name:"queryable",type:"boolean",defaultValue:!0},{name:"selected",type:"boolean"}]});b.fireEvent("ready",b)},d=function(a){Ext.Msg.alert("No ArcGIS Layers","Could not find any compatible layers  at "+b.config.url);b.fireEvent("failure",b)};(this.lazy=this.isLazy())?this.fireEvent("ready"):Ext.Ajax.request({url:a,params:{f:"json",pretty:"false",keepPostParams:"true"},method:"POST",success:c,failure:d})},isLazy:function(){var a=!0,b=!1,c=this.target.initialConfig.map;if(c&&c.layers)for(var d,e=0,f=
c.layers.length;e<f&&(d=c.layers[e],d.source!==this.id||(b=!0,a=this.layerConfigComplete(d),!1!==a));++e);return a&&b},layerConfigComplete:function(a){for(var b=!0,c=this.requiredProperties,d=c.length-1;0<=d&&(b=!!a[c[d]],!1!==b);--d);return b},createLayerRecord:function(a){var b,c;c=function(b){return b.get("name")===a.name};var d=this.lazy||this.store&&-1<this.store.findBy(c);-1==this.target.mapPanel.layers.findBy(c)&&d&&(b=!this.lazy&&-1<this.store.findBy(c)?this.store.getAt(this.store.findBy(c)).clone():
this.createLazyLayerRecord(a),c=b.getLayer(),a.title&&(c.setName(a.title),b.set("title",a.title)),"visibility"in a&&(c.visibility=a.visibility),"opacity"in a&&(c.opacity=a.opacity),"format"in a&&(c.params.FORMAT=a.format,b.set("format",a.format)),c=!1,"tiled"in a&&(c=!a.tiled),b.set("tiled",!c),b.set("selected",a.selected||!1),b.set("queryable",a.queryable||!0),b.set("source",a.source),b.set("name",a.name),b.set("layerid",a.layerid),b.set("properties","gxp_wmslayerpanel"),"group"in a&&b.set("group",
a.group),b.commit());return b},getArcProjection:function(a){var b=this.getMapProjection(),c=b;a="EPSG:"+a+"";a!==b.getCode()&&(c=null,(p=new OpenLayers.Projection(a)).equals(b)&&(c=p));return c},createLazyLayerRecord:function(a){var b=a.srs||this.target.map.projection;a.srs={};a.srs[b]=!0;var c=a.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[b].maxExtent;a.bbox={};a.bbox[b]={bbox:c};c=new GeoExt.data.LayerRecord(a);c.set("name",a.name);c.set("layerid",a.layerid||"show:0");c.set("format",
a.format||"png");c.set("tiled","tiled"in a?a.tiled:!0);c.setLayer(new OpenLayers.Layer.ArcGIS93Rest(a.name,this.url.split("?")[0]+"/export",{layers:a.layerid,TRANSPARENT:!0,FORMAT:"format"in a?a.format:"png"},{isBaseLayer:!1,displayInLayerSwitcher:!0,projection:b,singleTile:"tiled"in a?!a.tiled:!1,queryable:"queryable"in a?a.queryable:!1}));return c},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),tiled:a.get("tiled"),visibility:b.getVisibility(),
layerid:b.params.LAYERS,format:b.params.FORMAT,opacity:b.opacity||void 0,group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected")}}});Ext.preg(gxp.plugins.ArcRestSource.prototype.ptype,gxp.plugins.ArcRestSource);Ext.namespace("gxp");
gxp.PointSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation",pointGraphics:null,colorManager:null,external:null,layout:"form",initComponent:function(){this.symbolizer||(this.symbolizer={});this.pointGraphics||(this.pointGraphics=
[{display:this.graphicCircleText,value:"circle",mark:!0},{display:this.graphicSquareText,value:"square",mark:!0},{display:this.graphicTriangleText,value:"triangle",mark:!0},{display:this.graphicStarText,value:"star",mark:!0},{display:this.graphicCrossText,value:"cross",mark:!0},{display:this.graphicXText,value:"x",mark:!0},{display:this.graphicExternalText}]);this.external=!!this.symbolizer.externalGraphic;this.markPanel=new Ext.Panel({border:!1,collapsed:this.external,layout:"form",items:[{xtype:"gxp_fillsymbolizer",
symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}}]});this.urlField=new Ext.form.TextField({name:"url",fieldLabel:this.urlText,value:this.symbolizer.externalGraphic,
hidden:!this.external,listeners:{change:function(a,b){this.symbolizer.externalGraphic=b;this.fireEvent("change",this.symbolizer)},scope:this},width:100});this.graphicPanel=new Ext.Panel({border:!1,collapsed:!this.external,layout:"form",items:[this.urlField,{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:[null==this.symbolizer.graphicOpacity?100:100*this.symbolizer.graphicOpacity],isFormField:!0,listeners:{changecomplete:function(a,b){this.symbolizer.graphicOpacity=b/100;this.fireEvent("change",
this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})],width:100}]});this.items=[{xtype:"combo",name:"mark",fieldLabel:this.symbolText,store:new Ext.data.JsonStore({data:{root:this.pointGraphics},root:"root",fields:["value","display","preview",{name:"mark",type:"boolean"}]}),value:this.external?0:this.symbolizer.graphicName,displayField:"display",valueField:"value",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item gx-pointsymbolizer-mark-item"><tpl if="preview"><img src="{preview}" alt="{display}"/></tpl><span>{display}</span></div></tpl>'),
mode:"local",allowBlank:!1,triggerAction:"all",editable:!1,listeners:{select:function(a,b){var c=b.get("mark"),d=b.get("value");c?(this.external&&(this.external=!1,delete this.symbolizer.externalGraphic,this.updateGraphicDisplay()),this.symbolizer.graphicName=d):(d?(this.urlField.hide(),this.symbolizer.externalGraphic=d):this.urlField.show(),this.external||(this.external=!0,c=this.urlField.getValue(),Ext.isEmpty(c)||(this.symbolizer.externalGraphic=c),delete this.symbolizer.graphicName,this.updateGraphicDisplay()));
this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"size",fieldLabel:this.sizeText,value:this.symbolizer.pointRadius&&2*this.symbolizer.pointRadius,listeners:{change:function(a,b){this.symbolizer.pointRadius=b/2;this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"rotation",fieldLabel:this.rotationText,value:this.symbolizer.rotation,listeners:{change:function(a,b){this.symbolizer.rotation=b;this.fireEvent("change",this.symbolizer)},
scope:this},width:100},this.markPanel,this.graphicPanel];this.addEvents("change");gxp.PointSymbolizer.superclass.initComponent.call(this)},updateGraphicDisplay:function(){this.external?(this.markPanel.collapse(),this.graphicPanel.expand()):(this.graphicPanel.collapse(),this.markPanel.expand())}});Ext.reg("gxp_pointsymbolizer",gxp.PointSymbolizer);Ext.namespace("gxp.plugins");
gxp.plugins.FeedSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_feedsource",title:"Feed Source",format:"OpenLayers.Format.GeoRSS",popupTemplate:'<a target="_blank" href="{link}">{description}</a>',fixed:!0,createLayerRecord:function(a){var b=new OpenLayers.Layer.Vector(a.name,{projection:"projection"in a?a.projection:"EPSG:4326",visibility:"visibility"in a?a.visibility:!0,strategies:[this.fixed?new OpenLayers.Strategy.Fixed:new OpenLayers.Strategy.BBOX({resFactor:1,ratio:1})],protocol:new OpenLayers.Protocol.HTTP({url:this.url,
params:a.params,format:this.getFormat(a)}),styleMap:this.getStyleMap(a)});this.configureInfoPopup(b);var c=GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"visibility",type:"boolean"},{name:"format",type:"string"},{name:"defaultStyle"},{name:"selectStyle"},{name:"params"}]),d="format"in a?a.format:this.format;return new c({layer:b,name:a.name,source:a.source,
group:a.group,fixed:"fixed"in a?a.fixed:!1,selected:"selected"in a?a.selected:!1,params:"params"in a?a.params:{},visibility:"visibility"in a?a.visibility:!1,format:d instanceof String?d:null,defaultStyle:"defaultStyle"in a?a.defaultStyle:{},selectStyle:"selectStyle"in a?a.selectStyle:{}},b.id)},getConfigForRecord:function(a){var b=gxp.plugins.FeedSource.superclass.getConfigForRecord.apply(this,arguments);return Ext.apply(b,{name:a.get("name"),group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected"),
params:a.get("params"),visibility:a.getLayer().getVisibility(),format:a.get("format"),defaultStyle:a.getLayer().styleMap.styles["default"].defaultStyle,selectStyle:a.getLayer().styleMap.styles.select.defaultStyle})},getFormat:function(a){var b=window;a="format"in a?a.format:this.format;if("string"==typeof a||a instanceof String){a=a.split(".");for(var c=0,d=a.length;c<d&&(b=b[a[c]],b);++c);if(b&&b.prototype&&b.prototype.initialize)return a=function(){b.prototype.initialize.apply(this)},a.prototype=
b.prototype,new a}else return a},configureInfoPopup:function(a){var b=new Ext.XTemplate(this.popupTemplate);a.events.on({featureselected:function(a){a=a.feature;this.target.selectControl&&(this.target.selectControl.popup&&this.target.selectControl.popup.close(),this.target.selectControl.popup=new GeoExt.Popup({title:a.attributes.title,closeAction:"destroy",location:a,html:b.apply(a.attributes)}),this.target.selectControl.popup.show())},featureunselected:function(){this.target.selectControl&&this.target.selectControl.popup&&
this.target.selectControl.popup.close()},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style("defaultStyle"in a?a.defaultStyle:{graphicName:"circle",pointRadius:5,fillOpacity:.7,fillColor:"Red"},{title:a.name}),select:new OpenLayers.Style("selectStyle"in a?a.selectStyle:{graphicName:"circle",pointRadius:10,fillOpacity:1,fillColor:"Yellow"})})}});Ext.preg(gxp.plugins.FeedSource.prototype.ptype,gxp.plugins.FeedSource);Ext.namespace("gxp.form");
gxp.form.CSWFilterField=Ext.extend(Ext.form.CompositeField,{clearTooltip:"Clear the filter for this category",emptyText:"Select filter",property:null,map:null,type:OpenLayers.Filter.Comparison.EQUAL_TO,name:null,comboFieldLabel:null,comboStoreData:null,target:null,getFilter:function(){return"BoundingBox"===this.property?new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.property,projection:"EPSG:4326",value:this.map.getExtent().transform(this.map.getProjectionObject(),
new OpenLayers.Projection("EPSG:4326"))}):new OpenLayers.Filter.Comparison({type:this.type,property:this.property,value:this.combo.getValue()})},initComponent:function(){this.items=[{ref:"combo",xtype:"combo",fieldLabel:this.comboFieldLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:this.comboStoreData}),displayField:"value",valueField:"id",mode:"local",listeners:{select:function(a,b){this.filter&&this.target.removeFilter(this.filter);this.filter=this.getFilter();this.target.addFilter(this.filter);
return!1},scope:this},emptyText:this.emptyText,triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.clearTooltip,handler:function(a){this.target.removeFilter(this.filter);this.hide()},scope:this}];this.hidden=!0;gxp.form.CSWFilterField.superclass.initComponent.apply(this,arguments)},destroy:function(){this.map=this.target=this.filter=null;gxp.form.CSWFilterField.superclass.destroy.call(this)}});Ext.reg("gxp_cswfilterfield",gxp.form.CSWFilterField);Ext.namespace("gxp");
gxp.CatalogueSearchPanel=Ext.extend(Ext.Panel,{border:!1,maxRecords:10,map:null,selectedSource:null,sources:null,searchFieldEmptyText:"Search",searchButtonText:"Search",addTooltip:"Create filter",addMapTooltip:"Add to map",advancedTitle:"Advanced",datatypeLabel:"Data type",extentLabel:"Spatial extent",categoryLabel:"Category",datasourceLabel:"Data source",filterLabel:"Filter search by",removeSourceTooltip:"Switch back to original source",initComponent:function(){var a=this;this.addEvents("addlayer");
this.filters=[];var b=[],c;for(c in this.sources)b.push([c,this.sources[c].title]);1<=b.length&&(this.selectedSource=b[0][0]);c=[["datatype","data type"],["extent","spatial extent"],["category","category"]];1<b.length&&c.push(["csw","data source"]);this.sources[this.selectedSource].store.on("loadexception",function(a,b,c,g){c.success()&&Ext.Msg.show({title:g.message,msg:gxp.util.getOGCExceptionText(g.arg.exceptionReport),icon:Ext.MessageBox.ERROR,buttons:Ext.MessageBox.OK})});this.items=[{xtype:"form",
border:!1,ref:"form",hideLabels:!0,autoHeight:!0,style:"margin-left: 5px; margin-right: 5px; margin-bottom: 5px; margin-top: 5px",items:[{xtype:"compositefield",items:[{xtype:"textfield",emptyText:this.searchFieldEmptyText,ref:"../../search",name:"search",listeners:{specialkey:function(a,b){b.getKey()==b.ENTER&&this.performQuery()},scope:this},width:250},{xtype:"button",text:this.searchButtonText,handler:this.performQuery,scope:this}]},{xtype:"fieldset",collapsible:!0,collapsed:!0,hideLabels:!1,hidden:!0,
title:this.advancedTitle,items:[{xtype:"gxp_cswfilterfield",name:"datatype",property:"apiso:Type",comboFieldLabel:this.datatypeLabel,comboStoreData:[["dataset","Dataset"],["datasetcollection","Dataset collection"],["application","Application"],["service","Service"]],target:this},{xtype:"gxp_cswfilterfield",name:"extent",property:"BoundingBox",map:this.map,comboFieldLabel:this.extentLabel,comboStoreData:[["map","spatial extent of the map"]],target:this},{xtype:"gxp_cswfilterfield",name:"category",
property:"apiso:TopicCategory",comboFieldLabel:this.categoryLabel,comboStoreData:[["farming","Farming"],["biota","Biota"],["boundaries","Boundaries"],["climatologyMeteorologyAtmosphere","Climatology/Meteorology/Atmosphere"],["economy","Economy"],["elevation","Elevation"],["environment","Environment"],["geoscientificinformation","Geoscientific Information"],["health","Health"],["imageryBaseMapsEarthCover","Imagery/Base Maps/Earth Cover"],["intelligenceMilitary","Intelligence/Military"],["inlandWaters",
"Inland Waters"],["location","Location"],["oceans","Oceans"],["planningCadastre","Planning Cadastre"],["society","Society"],["structure","Structure"],["transportation","Transportation"],["utilitiesCommunications","Utilities/Communications"]],target:this},{xtype:"compositefield",id:"csw",ref:"../../cswCompositeField",hidden:!0,items:[{xtype:"combo",ref:"../../../sourceCombo",fieldLabel:this.datasourceLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:b}),displayField:"value",valueField:"id",
mode:"local",listeners:{select:function(a,b){this.setSource(a.getValue())},render:function(){this.sourceCombo.setValue(this.selectedSource)},scope:this},triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.removeSourceTooltip,handler:function(a){this.setSource(this.initialConfig.selectedSource);this.sourceCombo.setValue(this.initialConfig.selectedSource);this.cswCompositeField.hide()},scope:this}]},{xtype:"compositefield",items:[{xtype:"combo",fieldLabel:this.filterLabel,
store:new Ext.data.ArrayStore({fields:["id","value"],data:c}),displayField:"value",valueField:"id",mode:"local",triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-addlayers",tooltip:this.addTooltip,handler:function(a){a.ownerCt.items.each(function(a){if("combo"===a.getXType()){var b=a.getValue();a.clearValue();(a=this.form.getForm().findField(b))&&a.show()}},this)},scope:this}]}]},{xtype:"grid",width:"100%",anchor:"99%",viewConfig:{scrollOffset:0,forceFit:!0},border:!1,ref:"../grid",bbar:new Ext.PagingToolbar({listeners:{beforechange:function(b,
c){var f=a.sources[a.selectedSource].getPagingStart();c.startPosition&&(c.startPosition+=f)}},onLoad:function(b,c,f){var g=a.sources[a.selectedSource].getPagingStart();this.rendered?(b=this.getParams(),this.cursor=f.params&&f.params[b.start]?f.params[b.start]-g:0,f=this.getPageData(),g=f.activePage,b=f.pages,this.afterTextItem.setText(String.format(this.afterPageText,f.pages)),this.inputItem.setValue(g),this.first.setDisabled(1==g),this.prev.setDisabled(1==g),this.next.setDisabled(g==b),this.last.setDisabled(g==
b),this.refresh.enable(),this.updateInfo(),this.fireEvent("change",this,f)):this.dsLoaded=[b,c,f]},paramNames:this.sources[this.selectedSource].getPagingParamNames(),store:this.sources[this.selectedSource].store,pageSize:this.maxRecords}),loadMask:!0,hideHeaders:!0,store:this.sources[this.selectedSource].store,columns:[{id:"title",xtype:"templatecolumn",tpl:new Ext.XTemplate("<b>{title}</b><br/>{abstract}"),sortable:!0},{xtype:"actioncolumn",width:30,items:[{getClass:function(a,b,c){if(!1!==this.findWMS(c.get("URI"))||
!1!==this.findWMS(c.get("references")))return"gxp-icon-addlayers"},tooltip:this.addMapTooltip,handler:function(a,b,c){a=this.grid.store.getAt(b);this.addLayer(a)},scope:this}]}],autoExpandColumn:"title",autoHeight:!0}]}];gxp.CatalogueSearchPanel.superclass.initComponent.apply(this,arguments)},destroy:function(){this.map=this.sources=null;gxp.CatalogueSearchPanel.superclass.destroy.call(this)},setSource:function(a){this.selectedSource=a;a=this.sources[a].store;this.grid.reconfigure(a,this.grid.getColumnModel());
this.grid.getBottomToolbar().bindStore(a)},performQuery:function(){this.sources[this.selectedSource].filter({queryString:this.search.getValue(),limit:this.maxRecords,filters:this.filters})},addFilter:function(a){this.filters.push(a)},removeFilter:function(a){this.filters.remove(a)},findWMS:function(a){var b=["OGC:WMS-1.1.1-HTTP-GET-MAP","OGC:WMS"],c=null,d=null,e,f,g;e=0;for(f=a.length;e<f;++e)if(g=a[e],g.protocol&&-1!==b.indexOf(g.protocol.toUpperCase())&&g.value&&g.name){c=g.value;d=g.name;break}if(null===
c)for(e=0,f=a.length;e<f;++e)if(g=a[e],b=g.value?g.value:g,0<b.toLowerCase().indexOf("service=wms")){a=OpenLayers.Util.createUrlObject(b);c=a.protocol+"//"+a.host+":"+a.port+a.pathname;d=a.args.layers;break}return null!==c&&null!==d?{url:c,name:d}:!1},addLayer:function(a){var b=a.get("URI"),c=a.get("bounds"),d=c.left,e=c.right,f=c.bottom,g=c.top,c=Math.min(d,e),d=Math.max(d,e),e=Math.min(f,g),f=Math.max(f,g),b=this.findWMS(b);!1===b&&(b=a.get("references"),b=this.findWMS(b));!1!==b&&this.fireEvent("addlayer",
this,this.selectedSource,Ext.apply({title:a.get("title")[0],bbox:[c,e,d,f],srs:"EPSG:4326",projection:a.get("projection")},b))}});Ext.reg("gxp_cataloguesearchpanel",gxp.CatalogueSearchPanel);Ext.namespace("gxp.plugins");
gxp.plugins.YouTubeFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_youtubesource",url:"http://gdata.youtube.com/feeds/api/videos?v=2&prettyprint=true&",format:"OpenLayers.Format.YouTube",title:"Youtube Videos",pointRadius:24,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img height="180"  width="240" title="{title}" src="{thumbnail}"/></a></tpl>',fixed:!1,createLayerRecord:function(a){Ext.isEmpty(a.params["max-results"])?a.params["max-results"]=50:a.params["max-results"]=Math.min(a.params["max-results"],
50);a.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(a){var b=OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);b.attributes.thumbnail=this.getElementsByTagNameNS(a,"http://search.yahoo.com/mrss/","thumbnail")[4].getAttribute("url");b.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(a,"*","summary")[0]);return b}});var b=gxp.plugins.YouTubeFeedSource.superclass.createLayerRecord.apply(this,arguments);
b.getLayer().protocol.filterToParams=function(a,b){if(a.type===OpenLayers.Filter.Spatial.BBOX){var e=a.value,f=e.getCenterLonLat(),e=Math.min((6378.137*e.right/180/3.1415926-6378.137*e.left/180/3.1415926)/2*2,1E3);Ext.apply(b,{location:""+f.lat+","+f.lon,"location-radius":e+"km"})}return b};return b},configureInfoPopup:function(a){var b=new Ext.XTemplate(this.popupTemplate);a.events.on({featureselected:function(a){a=a.feature;null!=this.target.selectControl.popup&&this.target.selectControl.popup.close();
this.target.selectControl.popup=new GeoExt.Popup({title:a.attributes.title,location:a,width:240,height:220,closeAction:"destroy",html:b.apply(a.attributes)});this.target.selectControl.popup.show()},featureunselected:function(a){this.target.selectControl&&this.target.selectControl.popup&&this.target.selectControl.popup.close()},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:24},{title:this.title}),select:new OpenLayers.Style({pointRadius:this.pointRadius+
5})})}});Ext.preg(gxp.plugins.YouTubeFeedSource.prototype.ptype,gxp.plugins.YouTubeFeedSource);Ext.namespace("gxp.plugins");
gxp.plugins.PicasaFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_picasasource",url:"http://picasaweb.google.com/data/feed/base/all?thumbsize=160c&",format:"OpenLayers.Format.Picasa",title:"Picasa Photos",pointRadius:14,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img  title="{title}" src="{thumbnail}"/></a></tpl>',fixed:!1,createLayerRecord:function(a){Ext.isEmpty(a.params["max-results"])&&(a.params["max-results"]=50);a.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(a){var b=
OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);b.attributes.thumbnail=this.getElementsByTagNameNS(a,"http://search.yahoo.com/mrss/","thumbnail")[0].getAttribute("url");b.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(a,"*","summary")[0]);return b}});var b=gxp.plugins.PicasaFeedSource.superclass.createLayerRecord.apply(this,arguments);b.getLayer().protocol.filterToParams=function(a,b){if(a.type===OpenLayers.Filter.Spatial.BBOX){var e=
a.value.toArray();b.bbox=[Math.max(-180,e[0]),Math.max(-90,e[1]),Math.min(180,e[2]),Math.min(90,e[3])]}return b};return b},configureInfoPopup:function(a){var b=new Ext.XTemplate(this.popupTemplate);a.events.on({featureselected:function(a){a=a.feature;null!=this.target.selectControl.popup&&this.target.selectControl.popup.close();var d=document.createElement("div");d.innerHTML=a.attributes.content;d={link:d.getElementsByTagName("a")[0].getAttribute("href"),title:a.attributes.title,thumbnail:a.attributes.thumbnail};
this.target.selectControl.popup=new GeoExt.Popup({title:a.attributes.title,closeAction:"destroy",location:a,width:175,height:200,html:b.apply(d)});this.target.selectControl.popup.show()},featureunselected:function(a){this.target.selectControl&&this.target.selectControl.popup&&this.target.selectControl.popup.close()},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:this.pointRadius},{title:this.title}),
select:new OpenLayers.Style({pointRadius:this.pointRadius+5})})}});Ext.preg(gxp.plugins.PicasaFeedSource.prototype.ptype,gxp.plugins.PicasaFeedSource);Ext.namespace("gxp");
gxp.FeedSourceDialog=Ext.extend(Ext.Container,{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Videos",addRSSText:"GeoRSS Feed",addFeedText:"Add to Map",addTitleText:"Title",keywordText:"Keyword",doneText:"Done",titleText:"Add Feeds",maxResultsText:"Max Items",width:300,autoHeight:!0,closeAction:"destroy",initComponent:function(){this.addEvents("addfeed");this.feedTypes||(this.feedTypes=[[gxp.plugins.PicasaFeedSource.ptype,this.addPicasaText],[gxp.plugins.YouTubeFeedSource.ptype,
this.addYouTubeText],[gxp.plugins.FeedSource.ptype,this.addRSSText]]);var a=new Ext.data.ArrayStore({fields:["type","name"],data:this.feedTypes}),b=new Ext.form.ComboBox({store:a,fieldLabel:this.feedTypeText,displayField:"name",valueField:"type",typeAhead:!0,width:180,mode:"local",triggerAction:"all",emptyText:"Select a feed source...",selectOnFocus:!0,listeners:{select:function(a){a.value==gxp.plugins.FeedSource.ptype?(c.show(),d.hide(),f.hide(),g.show()):(c.hide(),d.show(),f.show(),g.hide());h.setDisabled(null==
a.value)},scope:this}}),c=new Ext.form.TextField({fieldLabel:"URL",allowBlank:!1,width:180,msgTarget:"right",validator:this.urlValidator.createDelegate(this)}),d=new Ext.form.TextField({fieldLabel:this.keywordText,allowBlank:!0,hidden:!0,width:180,msgTarget:"right"}),e=new Ext.form.TextField({fieldLabel:this.addTitleText,allowBlank:!0,width:180,msgTarget:"right"}),f=new Ext.form.ComboBox({fieldLabel:this.maxResultsText,hidden:!0,hiddenName:"max-results",store:new Ext.data.ArrayStore({fields:["max-results"],
data:[[10],[25],[50],[100]]}),displayField:"max-results",mode:"local",triggerAction:"all",emptyText:"Choose number...",labelWidth:70,width:180,defaults:{labelWidth:70,width:180}}),g=new gxp.PointSymbolizer({bodyStyle:{padding:"10px"},width:280,border:!1,hidden:!0,labelWidth:70,defaults:{labelWidth:70},symbolizer:{pointGraphics:"circle",pointRadius:"5"}});g.find("name","rotation")[0].hidden=!0;"Point"===this.symbolType&&this.pointGraphics&&(cfg.pointGraphics=this.pointGraphics);var h=new Ext.Button({text:this.addFeedText,
iconCls:"gxp-icon-addlayers",disabled:!0,handler:function(){var a=b.getValue(),h={name:e.getValue()};if("gxp_feedsource"!=a)h.params={q:d.getValue(),"max-results":f.getValue()};else{h.url=c.getValue();var m=g.symbolizer;h.defaultStyle={};h.selectStyle={};Ext.apply(h.defaultStyle,m);Ext.apply(h.selectStyle,m);Ext.apply(h.selectStyle,{fillColor:"Yellow",pointRadius:parseInt(m.pointRadius)+2})}this.fireEvent("addfeed",a,h)},scope:this}),a=["->",h,new Ext.Button({text:this.doneText,handler:function(){this.hide()},
scope:this})];this.items=this.panel=new Ext.Panel({bbar:a,autoScroll:!0,items:[b,e,c,d,f,g],layout:"form",border:!1,labelWidth:100,bodyStyle:"padding: 5px",autoWidth:!0,autoHeight:!0});gxp.FeedSourceDialog.superclass.initComponent.call(this)},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(a){a=this.urlRegExp.test(a)?!this.error||this.error:this.invalidURLText;this.error=null;return a}});Ext.reg("gxp_feedsourcedialog",gxp.FeedSourceDialog);Ext.namespace("gxp.plugins");
gxp.plugins.AddLayers=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_addlayers",addActionMenuText:"Add layers",findActionMenuText:"Find layers",addFeedActionMenuText:"Add feeds",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting {type} capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",searchText:"Search for layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",
panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadRoles:["ROLE_ADMINISTRATOR"],uploadText:"Upload layers",relativeUploadOnly:!0,startSourceId:null,catalogSourceKey:null,selectedSource:null,addServerId:null,constructor:function(a){this.addEvents("sourceselected");gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments)},addActions:function(){var a={tooltip:this.addActionTip,text:this.addActionText,menuText:this.addActionMenuText,disabled:!0,iconCls:"gxp-icon-addlayers"},
b;if(this.initialConfig.search||this.uploadSource){var c=[new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addActionMenuText,handler:this.showCapabilitiesGrid,scope:this})];if(this.initialConfig.search&&this.initialConfig.search.selectedSource&&this.target.sources[this.initialConfig.search.selectedSource]){var d=new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.findActionMenuText,handler:this.showCatalogueSearch,scope:this});c.push(d);Ext.Ajax.request({method:"GET",url:this.target.sources[this.initialConfig.search.selectedSource].url,
callback:function(a,b,c){!1===b&&(this.target.layerSources[this.initialConfig.search.selectedSource].disable(),d.hide())},scope:this})}this.initialConfig.feeds&&c.push(new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addFeedActionMenuText,handler:this.showFeedDialog,scope:this}));this.uploadSource&&(b=this.createUploadButton(Ext.menu.Item))&&c.push(b);a=Ext.apply(a,{menu:new Ext.menu.Menu({items:c})})}else a=Ext.apply(a,{handler:this.showCapabilitiesGrid,scope:this});var e=gxp.plugins.AddLayers.superclass.addActions.apply(this,
[a]);this.target.on("ready",function(){if(this.uploadSource){var a=this.target.layerSources[this.uploadSource];a?this.setSelectedSource(a):(delete this.uploadSource,b&&b.hide())}e[0].enable()},this);return e},showCatalogueSearch:function(){var a=this.initialConfig.search.selectedSource,b={},c=!1,d;for(d in this.target.layerSources){var e=this.target.layerSources[d];e instanceof gxp.plugins.CatalogueSource&&(c={},c[d]=e,Ext.apply(b,c),c=!0)}if(!1===c)window.console&&window.console.debug("No catalogue source specified");
else return a=gxp.plugins.AddLayers.superclass.addOutput.apply(this,[{sources:b,title:this.searchText,height:300,width:315,selectedSource:a,xtype:"gxp_cataloguesearchpanel",map:this.target.mapPanel.map}]),a.on({addlayer:function(a,b,c){a=this.target.layerSources[b];var d=OpenLayers.Bounds.fromArray(c.bbox,a.yx&&!0===a.yx[c.projection]),e=this.target.mapPanel.map.getProjection(),d=d.transform(c.srs,e);c.srs=e;c.bbox=d.toArray();c.source=null!==this.initialConfig.catalogSourceKey?this.initialConfig.catalogSourceKey:
b;b=a.createLayerRecord(c);this.target.mapPanel.layers.add(b);d&&this.target.mapPanel.map.zoomToExtent(d)},scope:this}),(b=a.findParentByType("window"))&&b.center(),a},showCapabilitiesGrid:function(){this.capGrid?this.capGrid instanceof Ext.Window||this.addOutput(this.capGrid):this.initCapGrid();this.capGrid.show()},showFeedDialog:function(){if(!this.feedDialog){var a=this.outputTarget?Ext.Panel:Ext.Window;this.feedDialog=new a(Ext.apply({closeAction:"hide",autoScroll:!0,title:this.addFeedActionMenuText,
items:[{xtype:"gxp_feedsourcedialog",target:this.target,listeners:{addfeed:function(a,c){var d={config:{ptype:a}};c.url&&(d.config.url=c.url);d=this.target.addLayerSource(d);c.source=d.id;d=d.createLayerRecord(c);this.target.mapPanel.layers.add([d]);this.feedDialog.hide()},scope:this}}]},this.initialConfig.outputConfig));a===Ext.Panel&&this.addOutput(this.feedDialog)}this.feedDialog instanceof Ext.Window||this.addOutput(this.feedDialog);this.feedDialog.show()},initCapGrid:function(){function a(){function a(b){d&&
d.push(b);e--;0===e&&this.addLayers(d)}for(var b=this.selectedSource,c=h.getSelectionModel().getSelections(),d=[],e=c.length,f=0,g=c.length;f<g;++f){var k=b.createLayerRecord({name:c[f].get("name"),source:b.id},a,this);k&&a.call(this,k)}}var b,c=[],d=this.target,e;for(e in d.layerSources)b=d.layerSources[e],b.store&&!b.hidden&&c.push([e,b.title||e,b.url]);var f=new Ext.data.ArrayStore({fields:["id","title","url"],data:c});e=this.createExpander();var g=0;null!==this.startSourceId&&f.each(function(a){a.get("id")===
this.startSourceId&&(g=f.indexOf(a))},this);b=this.target.layerSources[c[g][0]];var h=new Ext.grid.GridPanel({store:b.store,autoScroll:!0,autoExpandColumn:"title",plugins:[e],loadMask:!0,colModel:new Ext.grid.ColumnModel([e,{id:"title",header:this.panelTitleText,dataIndex:"title",sortable:!0},{header:"Id",dataIndex:"name",width:120,sortable:!0}]),listeners:{rowdblclick:a,scope:this}}),k=new Ext.form.ComboBox({ref:"../../sourceComboBox",width:165,store:f,valueField:"id",displayField:"title",tpl:'<tpl for="."><div ext:qtip="{url}" class="x-combo-list-item">{title}</div></tpl>',
triggerAction:"all",editable:!1,allowBlank:!1,forceSelection:!0,mode:"local",value:c[g][0],listeners:{select:function(a,b,c){b=b.get("id");b===this.addServerId?(m.outputTarget?m.addOutput(l):(new Ext.Window({title:gxp.NewSourceDialog.prototype.title,modal:!0,hideBorders:!0,width:300,items:l})).show(),k.reset()):(b=this.target.layerSources[b],h.reconfigure(b.store,h.getColumnModel()),h.getView().focusRow(0),this.setSelectedSource(b),function(){a.triggerBlur();a.el.blur()}.defer(100))},focus:function(a){d.proxy&&
a.reset()},scope:this}});b=null;if(this.target.proxy||1<c.length)b=new Ext.Container({cls:"gxp-addlayers-sourceselect",items:[new Ext.Toolbar.TextItem({text:this.layerSelectionText}),k]}),b=[b];this.target.proxy&&(this.addServerId=Ext.id(),f.loadData([[this.addServerId,this.addServerText+"..."]],!0));var l={xtype:"gxp_newsourcedialog",header:!1,listeners:{hide:function(a){this.outputTarget||a.ownerCt.hide()},urlselected:function(a,b,c){a.setLoading();var d;switch(c){case "TMS":d="gxp_tmssource";break;
case "REST":d="gxp_arcrestsource";break;default:d="gxp_wmscsource"}this.target.addLayerSource({config:{url:b,ptype:d},callback:function(b){b=new f.recordType({id:b,title:this.target.layerSources[b].title||this.untitledText});f.insert(0,[b]);k.onSelect(b,0);a.hide()},fallback:function(b,d){a.setError((new Ext.Template(this.addLayerSourceErrorText)).apply({type:c,msg:d}))},scope:this})},scope:this}},m=this;e={xtype:"container",region:"center",layout:"fit",hideBorders:!0,items:[h]};this.instructionsText&&
e.items.push({xtype:"box",autoHeight:!0,autoEl:{tag:"p",cls:"x-form-item",style:"padding-left: 5px; padding-right: 5px"},html:this.instructionsText});var n=["->",new Ext.Button({text:this.addButtonText,iconCls:"gxp-icon-addlayers",handler:a,scope:this}),new Ext.Button({text:this.doneText,handler:function(){this.capGrid.hide()},scope:this})],r;this.uploadSource||(r=this.createUploadButton())&&n.unshift(r);r=this.outputTarget?Ext.Panel:Ext.Window;this.capGrid=new r(Ext.apply({title:this.availableLayersText,
closeAction:"hide",layout:"border",height:300,width:315,modal:!0,items:e,tbar:b,bbar:n,listeners:{hide:function(a){h.getSelectionModel().clearSelections()},show:function(a){null===this.selectedSource?this.setSelectedSource(this.target.layerSources[c[g][0]]):this.setSelectedSource(this.selectedSource)},scope:this}},this.initialConfig.outputConfig));r===Ext.Panel&&this.addOutput(this.capGrid)},addLayers:function(a,b){for(var c=this.selectedSource,d=this.target.mapPanel.layers,e,f,g,h=0,k=a.length;h<
k;++h)if(f=c.createLayerRecord({name:a[h].get("name"),source:c.id})||a[h])g=f.getLayer(),g.maxExtent&&(e?e.extend(f.getLayer().maxExtent):e=f.getLayer().maxExtent.clone()),"background"===f.get("group")?d.insert(1,[f]):d.add([f]);e&&this.target.mapPanel.map.zoomToExtent(e);if(1===a.length&&f&&(this.target.selectLayer(f),b&&this.postUploadAction)){var l,c=this.postUploadAction;Ext.isString(c)||(l=c.outputConfig,c=c.plugin);this.target.tools[c].addOutput(l)}},setSelectedSource:function(a,b){this.selectedSource=
a;this.fireEvent("sourceselected",this,a);this.capGrid&&a.lazy&&a.store.load({callback:function(){var a=this.capGrid.sourceComboBox,b=a.store,e=a.valueField,f=b.findExact(e,a.getValue()),f=b.getAt(f),g=this.target.layerSources[f.get("id")];g?g.title===f.get("title")||Ext.isEmpty(g.title)||(f.set("title",g.title),a.setValue(f.get(e))):b.remove(f)}.createDelegate(this)})},createUploadButton:function(a){a=a||Ext.Button;var b,c=this.initialConfig.upload||!!this.initialConfig.uploadSource,d;if(c){var e=
function(a,b,c){a in f?window.setTimeout(function(){b.call(c,f[a])},0):Ext.Ajax.request({url:a,disableCaching:!1,callback:function(d,e,n){d=n.status;f[a]=d;b.call(c,d)}})};"boolean"===typeof c&&(c={});b=new a({text:this.uploadText,iconCls:"gxp-icon-filebrowse",hidden:!this.uploadSource,handler:function(){this.target.doAuthorized(this.uploadRoles,function(){var a=new gxp.LayerUploadPanel(Ext.apply({title:this.outputTarget?this.uploadText:void 0,url:d,width:300,border:!1,bodyStyle:"padding: 10px 10px 0 10px;",
labelWidth:65,autoScroll:!0,defaults:{anchor:"99%",allowBlank:!1,msgTarget:"side"},listeners:{uploadcomplete:function(a,c){for(var d=c["import"].tasks,e,f={},g=0,u=d.length;g<u;++g){e=d[g];if("ERROR"===e.state){Ext.Msg.alert(e.layer.originalName,e.errorMessage);return}var t;e.target.dataStore?t=e.target.dataStore.workspace.name:e.target.coverageStore&&(t=e.target.coverageStore.workspace.name);f[t+":"+e.layer.name]=!0}this.selectedSource.store.load({params:{_dc:Math.random()},callback:function(a,b,
c){var d,e;this.capGrid&&this.capGrid.isVisible()&&(d=this.capGrid.get(0).get(0),e=d.getSelectionModel(),e.clearSelections());var g=[],h=0;this.selectedSource.store.each(function(a,b){a.get("name")in f&&(h=b,g.push(a))});d?window.setTimeout(function(){e.selectRecords(g);d.getView().focusRow(h)},100):this.addLayers(g,!0)},scope:this});this.outputTarget?a.hide():b.close()},scope:this}},c)),b;this.outputTarget?this.addOutput(a):(b=new Ext.Window({title:this.uploadText,modal:!0,resizable:!1,items:[a]}),
b.show())},this)},scope:this});var f={};this.on({sourceselected:function(a,c){b[this.uploadSource?"show":"hide"]();this.isEligibleForUpload(c)&&(d=this.getGeoServerRestUrl(c.url),this.target.isAuthorized()&&e(d+"/imports",function(a){b.setVisible(200===a)},this))},scope:this})}return b},getGeoServerRestUrl:function(a){a=a.split("/");a.pop();a.push("rest");return a.join("/")},isEligibleForUpload:function(a){return a.url&&(this.relativeUploadOnly?"/"===a.url.charAt(0):!0)&&-1===(this.nonUploadSources||
[]).indexOf(a.id)},createExpander:function(){return new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)})}});Ext.preg(gxp.plugins.AddLayers.prototype.ptype,gxp.plugins.AddLayers);
