Ext.namespace("gxp");
gxp.util={_uniqueNames:{},dispatch:function(a,b,c){function d(){++g;g===f&&b.call(c,h)}function e(b){window.setTimeout(function(){a[b].apply(c,[d,h])})}for(var b=b||Ext.emptyFn,c=c||this,f=a.length,g=0,h={},j=0;j<f;++j)e(j)},uniqueName:function(a,b){var b=b||" ",c=RegExp(b+"[0-9]*$"),d=a.replace(c,""),c=c.exec(a),c=this._uniqueNames[d]!==void 0?this._uniqueNames[d]:c instanceof Array?Number(c[0]):void 0,e=d;c!==void 0&&(c++,e+=b+c);this._uniqueNames[d]=c||0;return e},getAbsoluteUrl:function(a){var b;Ext.isIE?
(b=document.createElement("<a href='"+a+"'/>"),b.style.display="none",document.body.appendChild(b),b.href=b.href,document.body.removeChild(b)):(b=document.createElement("a"),b.href=a);return b.href},md5:function(){function a(a){return String.fromCharCode(a&255)+String.fromCharCode(a>>>8&255)+String.fromCharCode(a>>>16&255)+String.fromCharCode(a>>>24&255)}function b(a){for(;a<0;)a+=4294967296;for(;a>4294967295;)a-=4294967296;return a}var c=[0,3614090360,3905402710,606105819,3250441966,4118548399,1200080426,
2821735955,4249261313,1770035416,2336552879,4294925233,2304563134,1804603682,4254626195,2792965006,1236535329,4129170786,3225465664,643717713,3921069994,3593408605,38016083,3634488961,3889429448,568446438,3275163606,4107603335,1163531501,2850285829,4243563512,1735328473,2368359562,4294588738,2272392833,1839030562,4259657740,2763975236,1272893353,4139469664,3200236656,681279174,3936430074,3572445317,76029189,3654602809,3873151461,530742520,3299628645,4096336452,1126891415,2878612391,4237533241,1700485571,
2399980690,4293915773,2240044497,1873313359,4264355552,2734768916,1309151649,4149444226,3174756917,718787259,3951481745],d=[[function(a,b,c){return a&b|~a&c},[[0,7,1],[1,12,2],[2,17,3],[3,22,4],[4,7,5],[5,12,6],[6,17,7],[7,22,8],[8,7,9],[9,12,10],[10,17,11],[11,22,12],[12,7,13],[13,12,14],[14,17,15],[15,22,16]]],[function(a,b,c){return a&c|b&~c},[[1,5,17],[6,9,18],[11,14,19],[0,20,20],[5,5,21],[10,9,22],[15,14,23],[4,20,24],[9,5,25],[14,9,26],[3,14,27],[8,20,28],[13,5,29],[2,9,30],[7,14,31],[12,20,
32]]],[function(a,b,c){return a^b^c},[[5,4,33],[8,11,34],[11,16,35],[14,23,36],[1,4,37],[4,11,38],[7,16,39],[10,23,40],[13,4,41],[0,11,42],[3,16,43],[6,23,44],[9,4,45],[12,11,46],[15,16,47],[2,23,48]]],[function(a,b,c){return b^(a|~c)},[[0,6,49],[7,10,50],[14,15,51],[5,21,52],[12,6,53],[3,10,54],[10,15,55],[1,21,56],[8,6,57],[15,10,58],[6,15,59],[13,21,60],[4,6,61],[11,10,62],[2,15,63],[9,21,64]]]];return function(e){var f,g,h,j,k,l,p,n,m,r,o;f=[1732584193,4023233417,2562383102,271733878];g=e.length;
h=g&63;j=h<56?56-h:120-h;if(j>0){e+="\u0080";for(h=0;h<j-1;h++)e+="\0"}e+=a(g*8);e+=a(0);g+=j+8;j=[0,1,2,3];k=[16];l=[4];for(r=0;r<g;r+=64){h=0;for(m=r;h<16;h++,m+=4)k[h]=e.charCodeAt(m)|e.charCodeAt(m+1)<<8|e.charCodeAt(m+2)<<16|e.charCodeAt(m+3)<<24;for(h=0;h<4;h++)l[h]=f[h];for(h=0;h<4;h++){p=d[h][0];n=d[h][1];for(m=0;m<16;m++){o=k;var s=l,t=n[m],v=void 0,w=void 0,u=void 0,y=void 0,q=void 0,x=void 0,z=void 0,u=q=void 0,v=j[0],w=j[1],u=j[2],y=j[3],q=t[0],x=t[1],z=t[2],u=p(s[w],s[u],s[y]),q=s[v]+
u+o[q]+c[z],q=b(q),q=q<<x|q>>>32-x;q+=s[w];s[v]=b(q);o=j[0];j[0]=j[3];j[3]=j[2];j[2]=j[1];j[1]=o}}for(h=0;h<4;h++)f[h]+=l[h],f[h]=b(f[h])}h=a(f[0])+a(f[1])+a(f[2])+a(f[3]);f="";for(e=0;e<16;e++)g=h.charCodeAt(e),f+="0123456789abcdef".charAt(g>>4&15),f+="0123456789abcdef".charAt(g&15);return f}}()};Ext.namespace("gxp.plugins");
gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{store:null,title:"",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.addEvents("ready","failure");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;this.createStore()},getMapProjection:function(){var a=this.target.mapPanel.map.projection;return this.target.mapPanel.map.getProjectionObject()||a&&new OpenLayers.Projection(a)||new OpenLayers.Projection("EPSG:4326")},getProjection:function(a){var a=
a.getLayer(),b=this.getMapProjection();return(a.projection?a.projection instanceof OpenLayers.Projection?a.projection:new OpenLayers.Projection(a.projection):b).equals(b)?b:null},createStore:function(){this.fireEvent("ready",this)},createLayerRecord:function(){},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),visibility:b.getVisibility(),opacity:b.opacity||void 0,group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected")}}});
Ext.namespace("gxp.plugins");
gxp.plugins.Tool=Ext.extend(Ext.util.Observable,{ptype:"gxp_tool",autoActivate:!0,actionTarget:"map.tbar",output:null,constructor:function(a){this.initialConfig=a||{};this.active=!1;Ext.apply(this,a);if(!this.id)this.id=Ext.id();this.output=[];this.addEvents("activate","deactivate");gxp.plugins.Tool.superclass.constructor.apply(this,arguments)},init:function(a){a.tools[this.id]=this;this.target=a;this.autoActivate&&this.activate();this.target.on("portalready",this.addActions,this)},activate:function(){if(this.active===
!1)return this.active=!0,this.fireEvent("activate",this),!0},deactivate:function(){if(this.active===!0)return this.active=!1,this.fireEvent("deactivate",this),!0},addActions:function(a){a=a||this.actions;if(!a||this.actionTarget===null)this.addOutput();else{var b=this.actionTarget instanceof Array?this.actionTarget:[this.actionTarget],a=a instanceof Array?a:[a],c,d,e,f,g,h=null;for(d=b.length-1;d>=0;--d){if(c=b[d]){if(c instanceof Object)h=c.index,c=c.target;c=c.split(".");g=c[0];c=c.length>1&&c[1];
g=g?g=="map"?this.target.mapPanel:Ext.getCmp(g)||this.target.portal[g]:this.target.portal;c&&(g=(e={tbar:"getTopToolbar",bbar:"getBottomToolbar",fbar:"getFooterToolbar"}[c])?g[e]():g[c])}e=0;for(f=a.length;e<f;++e){if(!(a[e]instanceof Ext.Action||a[e]instanceof Ext.Component)&&typeof a[e]!="string"){if(e==this.defaultAction)a[e].pressed=!0;a[e]=new Ext.Action(a[e])}c=a[e];if(e==this.defaultAction&&c instanceof GeoExt.Action)c.isDisabled()?c.activateOnEnable=!0:c.control.activate();if(g){g instanceof
Ext.menu.Menu?c=Ext.apply(new Ext.menu.Item(c),{text:c.initialConfig.menuText}):g instanceof Ext.Toolbar||(c=new Ext.Button(c));var j=h===null?g.add(c):g.insert(h,c);c=c instanceof Ext.Button?c:j;h!==null&&(h+=1);if(this.outputAction!=null&&e==this.outputAction){var k;c.on("click",function(){k?this.outputTarget?k.show():k.ownerCt.ownerCt.show():k=this.addOutput()},this)}}}g&&(g.isVisible()?g.doLayout():g instanceof Ext.menu.Menu||g.show())}return this.actions=a}},addOutput:function(a){if(a||this.outputConfig){var a=
a||{},b=this.outputTarget;b?(b=b==="map"?this.target.mapPanel:Ext.getCmp(b)||this.target.portal[b],Ext.apply(a,this.outputConfig)):(b=this.outputConfig||{},b=(new Ext.Window(Ext.apply({hideBorders:!0,shadow:!1,closeAction:"hide",autoHeight:!b.height,layout:b.height?"fit":void 0,items:[{defaults:{autoHeight:!b.height}}]},b))).show().items.get(0));a=b.add(a);a instanceof Ext.Window?a.show():b.doLayout();this.output.push(a);return a}},removeOutput:function(){for(var a,b=this.output.length-1;b>=0;--b)if(a=
this.output[b],this.outputTarget)if(a.ownerCt){if(a.ownerCt.remove(a),a.ownerCt instanceof Ext.Window)a.ownerCt[a.ownerCt.closeAction]()}else a.remove();else a.findParentBy(function(a){return a instanceof Ext.Window}).close();this.output=[]}});Ext.preg(gxp.plugins.Tool.prototype.ptype,gxp.plugins.Tool);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToExtent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoomtoextent",menuText:"Zoom To Max Extent",tooltip:"Zoom To Max Extent",extent:null,closest:!0,iconCls:"gxp-icon-zoomtoextent",closest:!0,constructor:function(){gxp.plugins.ZoomToExtent.superclass.constructor.apply(this,arguments);if(this.extent instanceof Array)this.extent=OpenLayers.Bounds.fromArray(this.extent)},addActions:function(){return gxp.plugins.ZoomToExtent.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,
iconCls:this.iconCls,tooltip:this.tooltip,handler:function(){var a=this.target.mapPanel.map,b=typeof this.extent=="function"?this.extent():this.extent;if(!b)for(var c,d=0,e=a.layers.length;d<e;++d)c=a.layers[d],c.getVisibility()&&(c=c.restrictedExtent||c.maxExtent,b?b.extend(c):c&&(b=c.clone()));b&&((d=a.restrictedExtent||a.maxExtent)&&(b=new OpenLayers.Bounds(Math.max(b.left,d.left),Math.max(b.bottom,d.bottom),Math.min(b.right,d.right),Math.min(b.top,d.top))),a.zoomToExtent(b,this.closest))},scope:this}])}});
Ext.preg(gxp.plugins.ZoomToExtent.prototype.ptype,gxp.plugins.ZoomToExtent);Ext.namespace("gxp.plugins");
gxp.plugins.ClickableFeatures=Ext.extend(gxp.plugins.Tool,{featureManager:null,toleranceParameters:["BUFFER","RADIUS"],noFeatureClick:function(a){if(!this.selectControl)this.selectControl=new OpenLayers.Control.SelectFeature(this.target.tools[this.featureManager].featureLayer);var b=this.target.mapPanel.map.getLonLatFromPixel(a.xy),c=this.target.tools[this.featureManager],d=c.page;if(!(c.visible()=="all"&&c.paging&&d&&d.extent.containsLonLat(b))&&(b=c.layerRecord&&c.layerRecord.getLayer())){var e=
this.target.mapPanel.map,d=e.getSize(),d=Ext.applyIf({REQUEST:"GetFeatureInfo",BBOX:e.getExtent().toBBOX(),WIDTH:d.w,HEIGHT:d.h,X:a.xy.x,Y:a.xy.y,QUERY_LAYERS:b.params.LAYERS,INFO_FORMAT:"application/vnd.ogc.gml",EXCEPTIONS:"application/vnd.ogc.se_xml",FEATURE_COUNT:1},b.params);if(typeof this.tolerance==="number")for(var f=0,g=this.toleranceParameters.length;f<g;++f)d[this.toleranceParameters[f]]=this.tolerance;e=e.getProjectionObject();(f=b.projection)&&f.equals(e)&&(e=f);parseFloat(b.params.VERSION)>=
1.3?d.CRS=e.getCode():d.SRS=e.getCode();new GeoExt.data.FeatureStore({fields:{},proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:typeof b.url==="string"?b.url:b.url[0],params:d,format:new OpenLayers.Format.WMSGetFeatureInfo})}),autoLoad:!0,listeners:{load:function(b,d){if(d.length>0){var e=d[0].get("fid"),f=new OpenLayers.Filter.FeatureId({fids:[e]}),g=function(){c.loadFeatures(f,function(a){this.autoLoadedFeature=a[0];this.select(a[0])},this)}.createDelegate(this),
n=c.featureLayer.getFeatureByFid(e);n?this.select(n):c.paging&&c.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING?(n=this.target.mapPanel.map.getLonLatFromPixel(a.xy),c.setPage({lonLat:n},function(){var a=c.featureLayer.getFeatureByFid(e);a?this.select(a):this.autoLoadFeatures===!0&&g()},this)):g()}},scope:this}})}},select:function(a){this.selectControl.unselectAll();this.selectControl.select(a)}});Ext.namespace("gxp.plugins");
gxp.plugins.RemoveLayer=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_removelayer",removeMenuText:"Remove layer",removeActionTip:"Remove layer",addActions:function(){var a,b=gxp.plugins.RemoveLayer.superclass.addActions.apply(this,[{menuText:this.removeMenuText,iconCls:"gxp-icon-removelayers",disabled:!0,tooltip:this.removeActionTip,handler:function(){var b=a;b&&this.target.mapPanel.layers.remove(b)},scope:this}]),c=b[0];this.target.on("layerselectionchange",function(b){a=b;c.setDisabled(this.target.mapPanel.layers.getCount()<=
1||!b)},this);var d=function(b){c.setDisabled(!a||b.getCount()<=1)};this.target.mapPanel.layers.on({add:d,remove:d});return b}});Ext.preg(gxp.plugins.RemoveLayer.prototype.ptype,gxp.plugins.RemoveLayer);Ext.namespace("gxp");
gxp.Viewer=Ext.extend(Ext.util.Observable,{defaultToolType:"gxp_tool",tools:null,selectedLayer:null,constructor:function(a){this.addEvents("ready","portalready","beforelayerselectionchange","layerselectionchange");Ext.apply(this,{layerSources:{},portalItems:[]});this.createLayerRecordQueue=[];this.loadConfig(a,this.applyConfig);gxp.Viewer.superclass.constructor.apply(this,arguments)},selectLayer:function(a){var a=a||null,b=!1;if(this.fireEvent("beforelayerselectionchange",a)!==!1)b=!0,this.selectedLayer=
a,this.fireEvent("layerselectionchange",a);return b},loadConfig:function(a){this.applyConfig(a)},applyConfig:function(a){this.initialConfig=Ext.apply({},a);Ext.apply(this,this.initialConfig);this.load()},load:function(){if(this.proxy)OpenLayers.ProxyHost=this.proxy;this.initMapPanel();this.initTools();var a=[],b;for(b in this.sources)a.push(this.createSourceLoader(b));a.push(function(a){Ext.onReady(function(){this.initPortal();a()},this)});gxp.util.dispatch(a,this.activate,this)},createSourceLoader:function(a){return function(b){var c=
this.sources[a];c.projection=this.initialConfig.map.projection;this.addLayerSource({id:a,config:c,callback:b,fallback:function(){b()},scope:this})}},addLayerSource:function(a){var b=a.id||Ext.id(null,"gxp-source-"),c,d=a.config;d.id=b;try{c=Ext.ComponentMgr.createPlugin(d,this.defaultSourceType)}catch(e){throw Error("Could not create new source plugin with ptype: "+a.config.ptype);}c.on({ready:{fn:function(){(a.callback||Ext.emptyFn).call(a.scope||this,b)},scope:this,single:!0},failure:{fn:function(){var c=
a.fallback||Ext.emptyFn;delete this.layerSources[b];c.apply(a.scope||this,arguments)},scope:this,single:!0}});this.layerSources[b]=c;c.init(this);return c},initMapPanel:function(){var a=Ext.apply({},this.initialConfig.map),b={};if(this.initialConfig.map)for(var c="theme,controls,resolutions,projection,units,maxExtent,restrictedExtent,maxResolution,numZoomLevels".split(","),d,e=c.length-1;e>=0;--e)d=c[e],d in a&&(b[d]=a[d],delete a[d]);this.mapPanel=Ext.ComponentMgr.create(Ext.applyIf({xtype:a.xtype||
"gx_mappanel",map:Ext.applyIf({theme:b.theme||null,controls:b.controls||[new OpenLayers.Control.Navigation({zoomWheelOptions:{interval:250}}),new OpenLayers.Control.PanPanel,new OpenLayers.Control.ZoomPanel,new OpenLayers.Control.Attribution],maxExtent:b.maxExtent&&OpenLayers.Bounds.fromArray(b.maxExtent),restrictedExtent:b.restrictedExtent&&OpenLayers.Bounds.fromArray(b.restrictedExtent),numZoomLevels:b.numZoomLevels||20},b),center:a.center&&new OpenLayers.LonLat(a.center[0],a.center[1]),resolutions:a.resolutions,
forceInitialExtent:!0,layers:null,items:this.mapItems,tbar:a.tbar||{hidden:!0}},a));this.mapPanel.layers.on({add:function(a,b){for(var c,d=b.length-1;d>=0;d--)c=b[d],c.get("selected")===!0&&this.selectLayer(c)},remove:function(a,b){b.get("selected")===!0&&this.selectLayer()},scope:this})},initTools:function(){this.tools={};if(this.initialConfig.tools&&this.initialConfig.tools.length>0)for(var a,b=0,c=this.initialConfig.tools.length;b<c;b++){try{a=Ext.ComponentMgr.createPlugin(this.initialConfig.tools[b],
this.defaultToolType)}catch(d){throw Error("Could not create tool plugin with ptype: "+this.initialConfig.tools[b].ptype);}a.init(this)}},initPortal:function(){var a=this.portalConfig||{};if(this.portalItems.length===0)this.mapPanel.region="center",this.portalItems.push(this.mapPanel);this.portal=Ext.ComponentMgr.create(Ext.applyIf(a,{layout:"fit",hideBorders:!0,items:{layout:"border",deferredRender:!1,items:this.portalItems}}),a.renderTo?"panel":"viewport");this.fireEvent("portalready")},activate:function(){Ext.QuickTips.init();
this.addLayers();this.checkLayerRecordQueue();this.fireEvent("ready")},addLayers:function(){var a=this.initialConfig.map;if(a&&a.layers){for(var b,c,d=[],e=[],f=0;f<a.layers.length;++f)if(b=a.layers[f],c=this.layerSources[b.source])(b=c.createLayerRecord(b))&&(b.get("group")==="background"?d.push(b):e.push(b));d.sort(function(a,b){return a.getLayer().visibility<b.getLayer().visibility});a=this.mapPanel;d=d.concat(e);d.length&&a.layers.add(d)}},getLayerRecordFromMap:function(a){var b=null;this.mapPanel&&
this.mapPanel.layers.each(function(c){if(c.get("source")==a.source&&c.get("name")==a.name)return b=c,!1});return b},createLayerRecord:function(a,b,c){this.createLayerRecordQueue.push({config:a,callback:b,scope:c});this.checkLayerRecordQueue()},checkLayerRecordQueue:function(){for(var a,b,c,d=[],e=0,f=this.createLayerRecordQueue.length;e<f;++e){c=!1;a=this.createLayerRecordQueue[e];b=a.config.source;if(b in this.layerSources&&(b=this.layerSources[b].createLayerRecord(a.config)))(function(a,b){window.setTimeout(function(){a.callback.call(a.scope,
b)},0)})(a,b),c=!0;c||d.push(a)}this.createLayerRecordQueue=d},getSource:function(a){return a&&this.layerSources[a.get("source")]},getState:function(){var a=Ext.apply({},this.initialConfig),b=this.mapPanel.map.getCenter();Ext.apply(a.map,{center:[b.lon,b.lat],zoom:this.mapPanel.map.zoom,layers:[]});this.mapPanel.layers.each(function(b){if(b.getLayer().displayInLayerSwitcher){var d=b.get("source"),e=this.layerSources[d];if(!e)throw Error("Could not find source for layer '"+b.get("name")+"'");a.map.layers.push(e.getConfigForRecord(b));
a.sources[d]||(a.sources[d]=Ext.apply({},e.initialConfig))}},this);return a},isAuthorized:function(a){return!this.authorizedRoles||this.authorizedRoles.indexOf(a||"ROLE_ADMINISTRATOR")!==-1},isAuthenticated:function(){return!this.authorizedRoles||this.authorizedRoles.length>0},destroy:function(){this.mapPanel.destroy();this.portal&&this.portal.destroy()}});(function(){OpenLayers.DOTS_PER_INCH=25.4/0.28})();Ext.namespace("gxp.plugins");
gxp.plugins.OLSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_olsource",createLayerRecord:function(a){var b,c=window;b=a.type.split(".");for(var d=0,e=b.length;d<e;++d)if(c=c[b[d]],!c)break;if(c&&c.prototype&&c.prototype.initialize){b=function(){c.prototype.initialize.apply(this,a.args)};b.prototype=c.prototype;b=new b;if("visibility"in a)b.visibility=a.visibility;b=new (GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",
type:"boolean"},{name:"selected",type:"boolean"},{name:"type",type:"string"},{name:"args"}]))({layer:b,title:b.name,name:a.name||b.name,source:a.source,group:a.group,fixed:"fixed"in a?a.fixed:!1,selected:"selected"in a?a.selected:!1,type:a.type,args:a.args,properties:"properties"in a?a.properties:void 0},b.id)}else throw Error("Cannot construct OpenLayers layer from given type: "+a.type);return b},getConfigForRecord:function(a){var b=gxp.plugins.OLSource.superclass.getConfigForRecord.apply(this,arguments);
a.getLayer();return Ext.apply(b,{type:a.get("type"),args:a.get("args")})}});Ext.preg(gxp.plugins.OLSource.prototype.ptype,gxp.plugins.OLSource);Ext.namespace("gxp");
gxp.TextSymbolizer=Ext.extend(Ext.Panel,{fonts:void 0,symbolizer:null,defaultSymbolizer:null,attributes:null,colorManager:null,haloCache:null,border:!1,layout:"form",labelValuesText:"Label values",haloText:"Halo",sizeText:"Size",initComponent:function(){if(!this.symbolizer)this.symbolizer={};Ext.applyIf(this.symbolizer,this.defaultSymbolizer);this.haloCache={};var a={xtype:"combo",fieldLabel:this.labelValuesText,store:this.attributes,editable:!1,triggerAction:"all",allowBlank:!1,displayField:"name",
valueField:"name",value:this.symbolizer.label&&this.symbolizer.label.replace(/^\${(.*)}$/,"$1"),listeners:{select:function(a,c){this.symbolizer.label="${"+c.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,a);this.labelWidth=80;this.items=[this.attributesComboConfig,{cls:"x-html-editor-tb",style:"background: transparent; border: none; padding: 0 0em 0.5em;",xtype:"toolbar",
items:[{xtype:"gxp_fontcombo",fonts:this.fonts||void 0,width:110,value:this.symbolizer.fontFamily,listeners:{select:function(a,c){this.symbolizer.fontFamily=c.get("field1");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"tbtext",text:this.sizeText+": "},{xtype:"numberfield",allowNegative:!1,emptyText:OpenLayers.Renderer.defaultSymbolizer.fontSize,value:this.symbolizer.fontSize,width:30,listeners:{change:function(a,c){c=parseFloat(c);isNaN(c)?delete this.symbolizer.fontSize:this.symbolizer.fontSize=
c;this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:!0,cls:"x-btn-icon",iconCls:"x-edit-bold",pressed:this.symbolizer.fontWeight==="bold",listeners:{toggle:function(a,c){this.symbolizer.fontWeight=c?"bold":"normal";this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:!0,cls:"x-btn-icon",iconCls:"x-edit-italic",pressed:this.symbolizer.fontStyle==="italic",listeners:{toggle:function(a,c){this.symbolizer.fontStyle=c?"italic":"normal";this.fireEvent("change",this.symbolizer)},
scope:this}}]},{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,defaultColor:OpenLayers.Renderer.defaultSymbolizer.fontColor,checkboxToggle:!1,autoHeight:!0,width:213,labelWidth:70,plugins:this.colorManager&&[new this.colorManager],listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.haloText,checkboxToggle:!0,collapsed:!(this.symbolizer.haloRadius||this.symbolizer.haloColor||this.symbolizer.haloOpacity),autoHeight:!0,labelWidth:50,
items:[{xtype:"numberfield",fieldLabel:this.sizeText,anchor:"89%",allowNegative:!1,emptyText:OpenLayers.Renderer.defaultSymbolizer.haloRadius,value:this.symbolizer.haloRadius,listeners:{change:function(a,c){c=parseFloat(c);isNaN(c)?delete this.symbolizer.haloRadius:this.symbolizer.haloRadius=c;this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_fillsymbolizer",symbolizer:{fillColor:"haloColor"in this.symbolizer?this.symbolizer.haloColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,
fillOpacity:"haloOpacity"in this.symbolizer?this.symbolizer.haloOpacity:OpenLayers.Renderer.defaultSymbolizer.haloOpacity},defaultColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,checkboxToggle:!1,width:190,labelWidth:60,plugins:this.colorManager&&[new this.colorManager],listeners:{change:function(a){this.symbolizer.haloColor=a.fillColor;this.symbolizer.haloOpacity=a.fillOpacity;this.fireEvent("change",this.symbolizer)},scope:this}}],listeners:{collapse:function(){this.haloCache={haloRadius:this.symbolizer.haloRadius,
haloColor:this.symbolizer.haloColor,haloOpacity:this.symbolizer.haloOpacity};delete this.symbolizer.haloRadius;delete this.symbolizer.haloColor;delete this.symbolizer.haloOpacity;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.haloCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.TextSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_textsymbolizer",gxp.TextSymbolizer);
(function(){function a(a){var c=this.meta.format;if(typeof a==="string"||a.nodeType){var a=c.read(a),d=c.read;c.read=function(){c.read=d;return a}}this.raw=a}Ext.intercept(GeoExt.data.WMSCapabilitiesReader.prototype,"readRecords",a);GeoExt.data.AttributeReader&&Ext.intercept(GeoExt.data.AttributeReader.prototype,"readRecords",a)})();Ext.namespace("gxp.plugins");
gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_wmssource",baseParams:null,format:null,describeLayerStore:null,describedLayers:null,schemaCache:null,ready:!1,isLazy:function(){var a=!1,b=this.target.initialConfig.map;if(b&&b.layers)for(var c,d=0,e=b.layers.length;d<e;++d)if(c=b.layers[d],c.source===this.id&&!this.layerConfigComplete(c)){a=!1;break}return a},layerConfigComplete:function(){return!1},createStore:function(){var a=this.baseParams||{SERVICE:"WMS",REQUEST:"GetCapabilities"};
if(this.version)a.VERSION=this.version;var b=this.isLazy();this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.trimUrl(this.url,a),baseParams:a,format:this.format,autoLoad:!b,layerParams:{exceptions:null},listeners:{load:function(){if(!this.store.reader.raw||!this.store.reader.raw.service)this.fireEvent("failure",this,"Invalid capabilities document.");else{if(!this.title)this.title=this.store.reader.raw.service.title;if(!this.ready)this.ready=!0,this.fireEvent("ready",this)}},exception:function(a,
b,e,f,g,h){delete this.store;var j="";b==="response"?(a="Invalid response from server.",g=g.status,g>=200&&g<300?(h=h.arg.exceptionReport)&&h.exceptions?(j=[],Ext.each(h.exceptions,function(a){j.push(a.text)}),j=j.join("\n")):j="Unknown error (no exception report).":j="Status: "+g):(a="Trouble creating layer store from response.",j="Unable to handle response.");this.fireEvent("failure",this,a,j)},scope:this}});b&&window.setTimeout(function(){this.fireEvent("ready",this)}.createDelegate(this),0)},
trimUrl:function(a,b){var c=OpenLayers.Util.getParameters(a),b=OpenLayers.Util.upperCaseObject(b),d=0,e;for(e in c)++d,e.toUpperCase()in b&&(--d,delete c[e]);return a.split("?").shift()+(d?"?"+OpenLayers.Util.getParameterString(c):"")},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c);var c=b.getLayer(),d=this.getMapProjection(),e=this.getProjection(b),f=d.getCode(),g=b.get("bbox")[f],f=c.params.VERSION>="1.3"&&!!c.yx[f],d=g&&OpenLayers.Bounds.fromArray(g.bbox,
f)||OpenLayers.Bounds.fromArray(b.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),d);if(!(1/d.getHeight()>0)||!(1/d.getWidth()>0))d=void 0;var g=Ext.applyIf({STYLES:a.styles,FORMAT:a.format,TRANSPARENT:a.transparent},c.params),c=new OpenLayers.Layer.WMS(a.title||c.name,c.url,g,{attribution:c.attribution,maxExtent:d,restrictedExtent:d,singleTile:"tiled"in a?!a.tiled:!1,ratio:a.ratio||1,visibility:"visibility"in a?a.visibility:!0,opacity:"opacity"in a?a.opacity:1,buffer:"buffer"in a?
a.buffer:1,projection:e}),a=Ext.applyIf({title:c.name,group:a.group,source:a.source,properties:"gxp_wmslayerpanel",fixed:a.fixed,selected:"selected"in a?a.selected:!1,layer:c},b.data),h=[{name:"source",type:"string"},{name:"group",type:"string"},{name:"properties",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"}];b.fields.each(function(a){h.push(a)});b=new (GeoExt.data.LayerRecord.create(h))(a,c.id)}return b},getProjection:function(a){var b=this.getMapProjection(),c=b,
a=a.get("srs");if(!a[b.getCode()]){var c=null,d,e;for(e in a)if((d=new OpenLayers.Projection(e)).equals(b)){c=d;break}}return c},initDescribeLayerStore:function(){var a=this.store.reader.raw.capability.request.describelayer;if(a)this.describeLayerStore=new GeoExt.data.WMSDescribeLayerStore({url:a.href,baseParams:{VERSION:this.store.reader.raw.version,REQUEST:"DescribeLayer"}})},describeLayer:function(a,b,c){function d(a){window.setTimeout(function(){b.call(c,a)},0)}this.describeLayerStore||this.initDescribeLayerStore();
if(this.describeLayerStore){if(!this.describedLayers)this.describedLayers={};var e=a.getLayer().params.LAYERS,a=function(){for(var a=Ext.isArray(arguments[1])?arguments[1]:arguments[0],d,g,l=a.length-1;l>=0;l--)if(d=a[l],g=d.get("layerName"),g==e){this.describeLayerStore.un("load",arguments.callee,this);this.describedLayers[g]=!0;b.call(c,d);return}else typeof this.describedLayers[g]=="function"&&(d=this.describedLayers[g],this.describeLayerStore.un("load",d,this),d.apply(this,arguments));delete f[e];
b.call(c,!1)},f=this.describedLayers,g;if(f[e])if((g=this.describeLayerStore.findExact("layerName",e))==-1)this.describeLayerStore.on("load",a,this);else d(this.describeLayerStore.getAt(g));else f[e]=a,this.describeLayerStore.load({params:{LAYERS:e},add:!0,callback:a,scope:this})}else d(!1)},getSchema:function(a,b,c){if(!this.schemaCache)this.schemaCache={};this.describeLayer(a,function(a){if(a&&a.get("owsType")=="WFS"){var e=a.get("typeName"),f=this.schemaCache[e];if(f)if(f.getCount()==0)f.on("load",
function(){b.call(c,f)},this,{single:!0});else b.call(c,f);else f=new GeoExt.data.AttributeStore({url:a.get("owsURL"),baseParams:{SERVICE:"WFS",VERSION:"1.1.0",REQUEST:"DescribeFeatureType",TYPENAME:e},autoLoad:!0,listeners:{load:function(){b.call(c,f)},scope:this}}),this.schemaCache[e]=f}else b.call(c,!1)},this)},getConfigForRecord:function(a){var b=gxp.plugins.WMSSource.superclass.getConfigForRecord.apply(this,arguments),c=a.getLayer().params;return Ext.apply(b,{format:c.FORMAT,styles:c.STYLES,
transparent:c.TRANSPARENT})}});Ext.preg(gxp.plugins.WMSSource.prototype.ptype,gxp.plugins.WMSSource);Ext.namespace("gxp.plugins");
gxp.plugins.WMSCSource=Ext.extend(gxp.plugins.WMSSource,{ptype:"gxp_wmscsource",version:"1.1.1",constructor:function(a){a.baseParams={SERVICE:"WMS",REQUEST:"GetCapabilities",TILED:!0};gxp.plugins.WMSCSource.superclass.constructor.apply(this,arguments);this.format=new OpenLayers.Format.WMSCapabilities({profile:"WMSC"})},createLayerRecord:function(a){var b=gxp.plugins.WMSCSource.superclass.createLayerRecord.apply(this,arguments),c=this.store.reader.raw.capability,d=c&&c.vendorSpecific&&c.vendorSpecific?
c.vendorSpecific.tileSets:null;if(d!==null)for(var c=b.get("layer"),e=this.getMapProjection(),f=0,g=d.length;f<g;f++){var h=d[f];if(h.layers===c.params.LAYERS){var j,k;for(k in h.srs){j=new OpenLayers.Projection(k);break}if(e.equals(j)){k=h.bbox[k].bbox;c.projection=j;c.addOptions({resolutions:h.resolutions,tileSize:new OpenLayers.Size(h.width,h.height),tileOrigin:new OpenLayers.LonLat(k[0],k[1])});c.params.TILED=a.cached!==!1&&!0;break}}}return b},getConfigForRecord:function(a){var b=gxp.plugins.WMSCSource.superclass.getConfigForRecord.apply(this,
arguments);return Ext.apply(b,{cached:!!a.getLayer().params.TILED})}});Ext.preg(gxp.plugins.WMSCSource.prototype.ptype,gxp.plugins.WMSCSource);Ext.namespace("gxp.form");
gxp.form.FilterField=Ext.extend(Ext.form.CompositeField,{lowerBoundaryTip:"lower boundary",upperBoundaryTip:"upper boundary",filter:null,attributes:null,attributesComboConfig:null,initComponent:function(){if(!this.filter)this.filter=this.createDefaultFilter();var a="remote",b=new GeoExt.data.AttributeStore;if(this.attributes)this.attributes.getCount()!=0?(a="local",this.attributes.each(function(a){/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(a.get("type"))||b.add([a])})):b=this.attributes;
a={xtype:"combo",store:b,editable:a=="local",typeAhead:!0,forceSelection:!0,mode:a,triggerAction:"all",allowBlank:this.allowBlank,displayField:"name",valueField:"name",value:this.filter.property,listeners:{select:function(a,b){this.items.get(1).enable();this.filter.property=b.get("name");this.fireEvent("change",this.filter)},blur:function(a){var b=a.store.findExact("name",a.getValue());b!=-1?a.fireEvent("select",a,a.store.getAt(b)):a.startValue!=null&&a.setValue(a.startValue)},scope:this},width:120};
this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,a);this.items=this.createFilterItems();this.addEvents("change");gxp.form.FilterField.superclass.initComponent.call(this)},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison},createFilterItems:function(){var a=this.filter.type===OpenLayers.Filter.Comparison.BETWEEN;return[this.attributesComboConfig,{xtype:"gxp_comparisoncombo",disabled:this.filter.property==null,allowBlank:this.allowBlank,
value:this.filter.type,listeners:{select:function(a,c){this.items.get(2).enable();this.items.get(3).enable();this.items.get(4).enable();this.setFilterType(c.get("value"));this.fireEvent("change",this.filter)},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:a,value:this.filter.value,width:50,grow:!0,growMin:50,anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(a,c){this.filter.value=c;this.fireEvent("change",this.filter)},scope:this}},{xtype:"textfield",disabled:this.filter.type==
null,hidden:!a,value:this.filter.lowerBoundary,tooltip:this.lowerBoundaryTip,grow:!0,growMin:30,anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(a,c){this.filter.lowerBoundary=c;this.fireEvent("change",this.filter)},render:function(a){Ext.QuickTips.register({target:a.getEl(),text:this.lowerBoundaryTip})},autosize:function(a,c){a.setWidth(c);a.ownerCt.doLayout()},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:!a,grow:!0,growMin:30,value:this.filter.upperBoundary,
allowBlank:this.allowBlank,listeners:{change:function(a,c){this.filter.upperBoundary=c;this.fireEvent("change",this.filter)},render:function(a){Ext.QuickTips.register({target:a.getEl(),text:this.upperBoundaryTip})},scope:this}}]},setFilterType:function(a){this.filter.type=a;a===OpenLayers.Filter.Comparison.BETWEEN?(this.items.get(2).hide(),this.items.get(3).show(),this.items.get(4).show()):(this.items.get(2).show(),this.items.get(3).hide(),this.items.get(4).hide());this.doLayout()}});
Ext.reg("gxp_filterfield",gxp.form.FilterField);Ext.namespace("gxp.plugins");
gxp.plugins.MapQuestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapquestsource",title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery",
createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-2.00375083392E7,-2.00375083392E7,2.00375083392E7,2.00375083392E7),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1},a=[new OpenLayers.Layer.OSM(this.osmTitle,["http://otile1.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png"],
OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,type:"osm"},a)),new OpenLayers.Layer.OSM(this.naipTitle,["http://oatile1.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile2.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile3.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile4.mqcdn.com/naip/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.naipAttribution,type:"naip"},a))];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",
type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:!0},{name:"selected",type:"boolean"}]});this.store.each(function(a){a.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();a.title&&(c.setName(a.title),b.set("title",
a.title));if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||!1);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.MapQuestSource.prototype.ptype,gxp.plugins.MapQuestSource);Ext.namespace("gxp.plugins");
gxp.plugins.SnappingAgent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_snappingagent",init:function(){gxp.plugins.SnappingAgent.superclass.init.apply(this,arguments);this.snappingTargets=[];this.controls=[];this.setSnappingTargets(this.targets)},setSnappingTargets:function(a){this.snappingTargets.length=0;if(a)for(var b=0,c=a.length;b<c;++b)this.addSnappingTarget(a[b])},addSnappingTarget:function(a){var a=Ext.apply({},a),b=new gxp.plugins.FeatureManager({maxFeatures:null,paging:!1,layer:{source:a.source,
name:a.name},listeners:{layerchange:function(){var c=this.target.mapPanel.map,d=new OpenLayers.Layer.Vector(a.name,{protocol:b.featureStore.proxy.protocol,strategies:[new OpenLayers.Strategy.BBOX({ratio:1.5})],displayInLayerSwitcher:!1,visibility:!1,minResolution:a.minResolution,maxResolution:a.maxResolution});c.addLayer(d);c.events.on({moveend:function(){var b=a.minResolution||Number.NEGATIVE_INFINITY,e=a.maxResolution||Number.POSITIVE_INFINITY,f=c.getResolution();b<=f&&f<e&&d.strategies[0].update()},
scope:this});a.layer=d;this.snappingTargets.push(a);for(var e=0,f=this.controls.length;e<f;++e)this.controls[e].addTarget(a)},scope:this}});delete a.source;delete a.name;b.init(this.target)},addSnappingControl:function(a){a=new OpenLayers.Control.Snapping(Ext.applyIf({layer:a},this.initialConfig.controlOptions||this.initialConfig.options||{}));a.setTargets(this.snappingTargets);a.activate();this.controls.push(a)}});Ext.preg(gxp.plugins.SnappingAgent.prototype.ptype,gxp.plugins.SnappingAgent);Ext.namespace("gxp.plugins");
gxp.plugins.Measure=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_measure",outputTarget:"map",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure",constructor:function(){gxp.plugins.Measure.superclass.constructor.apply(this,arguments)},destroy:function(){this.button=null;gxp.plugins.Measure.superclass.destroy.apply(this,arguments)},createMeasureControl:function(a,b){var c=new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,
{rules:[new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]})}),d=function(){f&&f.destroy()},e=function(a){var b=a.measure,c=a.units;g.displaySystem="english";var d=a.geometry.CLASS_NAME.indexOf("LineString")>-1?
g.getBestLength(a.geometry):g.getBestArea(a.geometry),e=d[0],d=d[1];g.displaySystem="metric";a=a.order==2?"<sup>2</sup>":"";return b.toFixed(2)+" "+c+a+"<br>"+e.toFixed(2)+" "+d+a},f,g=new OpenLayers.Control.Measure(a,{geodesic:!0,persist:!0,handlerOptions:{layerOptions:{styleMap:c}},eventListeners:{measurepartial:function(a){d();f=this.addOutput({xtype:"tooltip",html:e(a),title:b,autoHide:!1,closable:!0,draggable:!1,mouseOffset:[0,0],showDelay:1,listeners:{hide:d}});if(a.measure>0){var a=g.handler.lastUp,
c=this.target.mapPanel.getPosition();f.targetXY=[c[0]+a.x,c[1]+a.y];f.show()}},measure:function(a){d();f=this.addOutput({xtype:"tooltip",target:Ext.getBody(),html:e(a),title:b,autoHide:!1,closable:!0,draggable:!1,mouseOffset:[0,0],showDelay:1,listeners:{hide:function(){g.cancel();d()}}})},deactivate:d,scope:this}});return g},addActions:function(){this.activeIndex=0;this.button=new Ext.SplitButton({iconCls:"gxp-icon-measure-length",tooltip:this.measureTooltip,enableToggle:!0,toggleGroup:this.toggleGroup,
allowDepress:!0,handler:function(a){a.pressed&&a.menu.items.itemAt(this.activeIndex).setChecked(!0)},scope:this,listeners:{toggle:function(a,b){b||a.menu.items.each(function(a){a.setChecked(!1)})},render:function(a){Ext.ButtonToggleMgr.register(a)}},menu:new Ext.menu.Menu({items:[new Ext.menu.CheckItem(new GeoExt.Action({text:this.lengthMenuText,iconCls:"gxp-icon-measure-length",toggleGroup:this.toggleGroup,group:this.toggleGroup,listeners:{checkchange:function(a,b){this.activeIndex=0;this.button.toggle(b);
b&&this.button.setIconClass(a.iconCls)},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Path,this.lengthTooltip)})),new Ext.menu.CheckItem(new GeoExt.Action({text:this.areaMenuText,iconCls:"gxp-icon-measure-area",toggleGroup:this.toggleGroup,group:this.toggleGroup,allowDepress:!1,listeners:{checkchange:function(a,b){this.activeIndex=1;this.button.toggle(b);b&&this.button.setIconClass(a.iconCls)},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Polygon,
this.areaTooltip)}))]})});return gxp.plugins.Measure.superclass.addActions.apply(this,[this.button])}});Ext.preg(gxp.plugins.Measure.prototype.ptype,gxp.plugins.Measure);Ext.namespace("gxp.plugins");
gxp.plugins.Print=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_print",printService:null,customParams:null,menuText:"Print Map",tooltip:"Print Map",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed",previewText:"Print Preview",constructor:function(){gxp.plugins.Print.superclass.constructor.apply(this,arguments)},addActions:function(){if(this.printService!==null){var a=new GeoExt.data.PrintProvider({url:this.printService,customParams:this.customParams,
autoLoad:!1,listeners:{beforeprint:function(){c.items.get(0).printMapPanel.layers.each(function(a){var a=a.get("layer").params,b;for(b in a)a[b]instanceof Array&&(a[b]=a[b].join(","))})},loadcapabilities:function(){b.initialConfig.disabled=!1;b.enable()},print:function(){try{c.close()}catch(a){}}}}),b=this.actions[0].items[0],c,d=function(){if(c){try{c.items.first().printMapPanel.printPage.destroy()}catch(a){}c=null}},e=this.target.mapPanel,f=function(){var a=[];e.layers.each(function(b){b=b.getLayer();
g(b)&&a.push(b)});return a},g=function(a){return a instanceof OpenLayers.Layer.WMS||a instanceof OpenLayers.Layer.OSM},h=function(){c=new Ext.Window({title:this.previewText,modal:!0,border:!1,resizable:!1,width:360,items:[new GeoExt.ux.PrintPreview({autoHeight:!0,mapTitle:this.target.about&&this.target.about.title,comment:this.target.about&&this.target.about["abstract"],printMapPanel:{map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation,new OpenLayers.Control.PanPanel,new OpenLayers.Control.ZoomPanel,
new OpenLayers.Control.Attribution],eventListeners:{preaddlayer:function(a){return g(a.layer)}}},e.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:!0,height:100,aggressive:!0}]},printProvider:a,includeLegend:!1,sourceMap:e})],listeners:{beforedestroy:d}})},j=function(){c.show();c.setWidth(0);var a=0;c.items.get(0).items.get(0).items.each(function(b){b.getEl()&&(a+=b.getWidth())});c.setWidth(Math.max(c.items.get(0).printMapPanel.getWidth(),a+20));c.center()};return gxp.plugins.Print.superclass.addActions.call(this,
[{menuText:this.menuText,tooltip:this.tooltip,iconCls:"gxp-icon-print",disabled:!0,handler:function(){f().length>0?(h.call(this),j.call(this)):Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText)},scope:this,listeners:{render:function(){a.loadCapabilities()}}}])}}});Ext.preg(gxp.plugins.Print.prototype.ptype,gxp.plugins.Print);Ext.namespace("gxp");
gxp.PointSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation",pointGraphics:null,colorManager:null,external:null,layout:"form",initComponent:function(){if(!this.symbolizer)this.symbolizer={};if(!this.pointGraphics)this.pointGraphics=
[{display:this.graphicCircleText,value:"circle",mark:!0},{display:this.graphicSquareText,value:"square",mark:!0},{display:this.graphicTriangleText,value:"triangle",mark:!0},{display:this.graphicStarText,value:"star",mark:!0},{display:this.graphicCrossText,value:"cross",mark:!0},{display:this.graphicXText,value:"x",mark:!0},{display:this.graphicExternalText}];this.external=!!this.symbolizer.externalGraphic;this.markPanel=new Ext.Panel({border:!1,collapsed:this.external,layout:"form",items:[{xtype:"gxp_fillsymbolizer",
symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}]});this.urlField=new Ext.form.TextField({name:"url",fieldLabel:this.urlText,value:this.symbolizer.externalGraphic,
hidden:!0,listeners:{change:function(a,b){this.symbolizer.externalGraphic=b;this.fireEvent("change",this.symbolizer)},scope:this},width:100});this.graphicPanel=new Ext.Panel({border:!1,collapsed:!this.external,layout:"form",items:[this.urlField,{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:[this.symbolizer.graphicOpacity==null?100:this.symbolizer.graphicOpacity*100],isFormField:!0,listeners:{changecomplete:function(a,b){this.symbolizer.graphicOpacity=b/100;this.fireEvent("change",
this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})],width:100}]});this.items=[{xtype:"combo",name:"mark",fieldLabel:this.symbolText,store:new Ext.data.JsonStore({data:{root:this.pointGraphics},root:"root",fields:["value","display","preview",{name:"mark",type:"boolean"}]}),value:this.external?0:this.symbolizer.graphicName,displayField:"display",valueField:"value",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item gx-pointsymbolizer-mark-item"><tpl if="preview"><img src="{preview}" alt="{display}"/></tpl><span>{display}</span></div></tpl>'),
mode:"local",allowBlank:!1,triggerAction:"all",editable:!1,listeners:{select:function(a,b){var c=b.get("mark"),d=b.get("value");if(c){if(this.external)this.external=!1,delete this.symbolizer.externalGraphic,this.updateGraphicDisplay();this.symbolizer.graphicName=d}else if(d?(this.urlField.hide(),this.urlField.getEl().up(".x-form-item").setDisplayed(!1),this.symbolizer.externalGraphic=d):(this.urlField.show(),this.urlField.getEl().up(".x-form-item").setDisplayed(!0)),!this.external)this.external=!0,
this.updateGraphicDisplay();this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"size",fieldLabel:this.sizeText,value:this.symbolizer.pointRadius&&this.symbolizer.pointRadius*2,listeners:{change:function(a,b){this.symbolizer.pointRadius=b/2;this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"rotation",fieldLabel:this.rotationText,value:this.symbolizer.rotation,listeners:{change:function(a,b){this.symbolizer.rotation=b;this.fireEvent("change",
this.symbolizer)},scope:this},width:100},this.markPanel,this.graphicPanel];this.addEvents("change");gxp.PointSymbolizer.superclass.initComponent.call(this)},updateGraphicDisplay:function(){this.external?(this.markPanel.collapse(),this.graphicPanel.expand()):(this.graphicPanel.collapse(),this.markPanel.expand())}});Ext.reg("gxp_pointsymbolizer",gxp.PointSymbolizer);Ext.namespace("gxp.plugins");
gxp.plugins.Legend=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_legend",menuText:"Legend",tooltip:"Show Legend",actionTarget:null,constructor:function(){gxp.plugins.Legend.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={width:300,height:400};Ext.applyIf(this.outputConfig,{title:this.menuText})},addActions:function(){return gxp.plugins.Legend.superclass.addActions.apply(this,[[{menuText:this.menuText,iconCls:"gxp-icon-legend",tooltip:this.tooltip,handler:function(){this.addOutput()},
scope:this}]])},addOutput:function(a){return gxp.plugins.Legend.superclass.addOutput.call(this,Ext.apply({xtype:"gx_legendpanel",ascending:!1,border:!1,layerStore:this.target.mapPanel.layers,defaults:{cls:"gxp-legend-item"}},a))}});Ext.preg(gxp.plugins.Legend.prototype.ptype,gxp.plugins.Legend);Ext.ns("gxp.data");
gxp.data.AutoCompleteReader=Ext.extend(GeoExt.data.FeatureReader,{read:function(a){var b=this.meta.uniqueField;this.features=[];for(var c=0,d=a.features.length;c<d;++c){var e=a.features[c];this.isDuplicate(b,e.attributes[b])===!1?this.features.push(e):e.destroy()}a.features=this.features;return gxp.data.AutoCompleteReader.superclass.read.apply(this,arguments)},isDuplicate:function(a,b){for(var c=0,d=this.features.length;c<d;++c)if(this.features[c].attributes[a]===b)return!0;return!1}});Ext.namespace("gxp");
gxp.NewSourceWindow=Ext.extend(Ext.Window,{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server...",bodyStyle:"padding: 0px",width:300,closeAction:"hide",error:null,initComponent:function(){this.addEvents("server-added");this.urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:!1,width:240,msgTarget:"under",validator:this.urlValidator.createDelegate(this)});
this.form=new Ext.form.FormPanel({items:[this.urlTextField],border:!1,labelWidth:30,bodyStyle:"padding: 5px",autoWidth:!0,autoHeight:!0});this.bbar=[new Ext.Button({text:this.cancelText,handler:function(){this.hide()},scope:this}),new Ext.Toolbar.Fill,new Ext.Button({text:this.addServerText,iconCls:"add",handler:function(){this.error=null;this.urlTextField.validate()&&this.fireEvent("server-added",this.urlTextField.getValue())},scope:this})];this.items=this.form;gxp.NewSourceWindow.superclass.initComponent.call(this);
this.form.on("render",function(){this.loadMask=new Ext.LoadMask(this.form.getEl(),{msg:this.contactingServerText})},this);this.on("hide",function(){this.error=null;this.urlTextField.validate();this.urlTextField.setValue("");this.loadMask.hide()},this);this.on("server-added",function(a){this.setLoading();this.addSource(a,function(){this.hide()},function(){this.setError(this.sourceLoadFailureMessage)},this)},this)},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(a){a=
this.urlRegExp.test(a)?!this.error||this.error:this.invalidURLText;this.error=null;return a},setLoading:function(){this.loadMask.show()},setError:function(a){this.loadMask.hide();this.error=a;this.urlTextField.validate()},addSource:function(){}});Ext.namespace("gxp.plugins");
gxp.plugins.AddLayers=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_addlayers",addActionMenuText:"Add layers",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting WMS capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadText:"Upload Data",
relativeUploadOnly:!0,startSourceId:null,selectedSource:null,constructor:function(){this.addEvents("sourceselected");gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments)},addActions:function(){var a=gxp.plugins.AddLayers.superclass.addActions.apply(this,[{tooltip:this.addActionTip,text:this.addActionText,menuText:this.addActionMenuText,disabled:!0,iconCls:"gxp-icon-addlayers",handler:this.showCapabilitiesGrid,scope:this}]);this.target.on("ready",function(){a[0].enable()});return a},
showCapabilitiesGrid:function(){this.capGrid||this.initCapGrid();this.capGrid.show()},initCapGrid:function(){var a,b=[],c;for(c in this.target.layerSources)a=this.target.layerSources[c],a.store&&b.push([c,a.title||c]);var d=new Ext.data.ArrayStore({fields:["id","title"],data:b});c=this.createExpander();a=function(){for(var a=h.getValue(),b=this.target.mapPanel.layers,c=this.target.layerSources[a],d=g.getSelectionModel().getSelections(),e,f=0,j=d.length;f<j;++f)(e=c.createLayerRecord({name:d[f].get("name"),
source:a}))&&(e.get("group")==="background"?b.insert(0,[e]):b.add([e]))};var e=0;this.startSourceId!==null&&d.each(function(a){a.get("id")===this.startSourceId&&(e=d.indexOf(a))},this);var f=this.target.layerSources[b[e][0]].store;f.getCount()===0&&f.load();var g=new Ext.grid.GridPanel({store:f,autoScroll:!0,flex:1,autoExpandColumn:"title",plugins:[c],loadMask:!0,colModel:new Ext.grid.ColumnModel([c,{id:"title",header:this.panelTitleText,dataIndex:"title",sortable:!0},{header:"Id",dataIndex:"name",
width:150,sortable:!0}]),listeners:{rowdblclick:a,scope:this}}),h=new Ext.form.ComboBox({store:d,valueField:"id",displayField:"title",triggerAction:"all",editable:!1,allowBlank:!1,forceSelection:!0,mode:"local",value:b[e][0],listeners:{select:function(a,b){var c=this.target.layerSources[b.get("id")];g.reconfigure(c.store,g.getColumnModel());g.getView().focusRow(0);c.store.getCount()===0&&c.store.load();this.setSelectedSource(c)},scope:this}});c=null;if(this.target.proxy||b.length>1)c=[new Ext.Toolbar.TextItem({text:this.layerSelectionText}),
h];this.target.proxy&&c.push("-",new Ext.Button({text:this.addServerText,iconCls:"gxp-icon-addserver",handler:function(){j.show()}}));var j=new gxp.NewSourceWindow({modal:!0,listeners:{"server-added":function(a){j.setLoading();this.target.addLayerSource({config:{url:a},callback:function(a){a=new d.recordType({id:a,title:this.target.layerSources[a].title||this.untitledText});d.insert(0,[a]);h.onSelect(a,0);j.hide()},fallback:function(a,b){j.setError((new Ext.Template(this.addLayerSourceErrorText)).apply({msg:b}))},
scope:this})},scope:this}}),f={xtype:"container",region:"center",layout:"vbox",items:[g]};this.instructionsText&&f.items.push({xtype:"box",autoHeight:!0,autoEl:{tag:"p",cls:"x-form-item",style:"padding-left: 5px; padding-right: 5px"},html:this.instructionsText});a=["->",new Ext.Button({text:this.addButtonText,iconCls:"gxp-icon-addlayers",handler:a,scope:this}),new Ext.Button({text:this.doneText,handler:function(){this.capGrid.hide()},scope:this})];var k=this.createUploadButton();k&&a.unshift(k);this.capGrid=
new Ext.Window(Ext.apply({title:this.availableLayersText,closeAction:"hide",layout:"border",height:300,width:450,modal:!0,items:f,tbar:c,bbar:a,listeners:{hide:function(){g.getSelectionModel().clearSelections()},show:function(){this.setSelectedSource(this.target.layerSources[b[e][0]])},scope:this}},this.initialConfig.outputConfig))},setSelectedSource:function(a){this.selectedSource=a;this.fireEvent("sourceselected",this,a)},createUploadButton:function(){var a,b=this.initialConfig.upload,c;if(b){typeof b===
"boolean"&&(b={});a=new Ext.Button({xtype:"button",text:this.uploadText,iconCls:"gxp-icon-filebrowse",hidden:!0,handler:function(){var a=new gxp.LayerUploadPanel(Ext.apply({url:c,width:350,border:!1,bodyStyle:"padding: 10px 10px 0 10px;",frame:!0,labelWidth:65,defaults:{anchor:"95%",allowBlank:!1,msgTarget:"side"},listeners:{uploadcomplete:function(a,b){for(var c=b.layers,e={},f=0,n=c.length;f<n;++f)e[c[f].name]=!0;this.selectedSource.store.load({callback:function(){var a=this.capGrid.items.get(0),
b=a.getSelectionModel();b.clearSelections();var c=[],d=0;this.selectedSource.store.each(function(a,b){a.get("name")in e&&(d=b,c.push(a))});b.selectRecords(c);window.setTimeout(function(){a.getView().focusRow(d)},100)},scope:this});d.close()},scope:this}},b)),d=new Ext.Window({title:this.uploadText,modal:!0,resizable:!1,items:[a]});d.show()},scope:this});var d={},e=function(a,b,c){a in d?window.setTimeout(function(){b.call(c,d[a])},0):Ext.Ajax.request({url:a,disableCaching:!1,callback:function(e,k,
l){e=l.status;d[a]=e;b.call(c,e)}})};this.on({sourceselected:function(b,d){a.hide();if(this.isEligibleForUpload(d)){var h=d.url.split("/");h.pop();h.push("rest");c=h.join("/");this.target.isAuthorized()&&e(c+"/upload",function(b){a.setVisible(b===405)},this)}},scope:this})}return a},isEligibleForUpload:function(a){return a.url&&(this.relativeUploadOnly?a.url.charAt(0)==="/":!0)&&(this.nonUploadSources||[]).indexOf(a.id)===-1},createExpander:function(){return new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)})}});
Ext.preg(gxp.plugins.AddLayers.prototype.ptype,gxp.plugins.AddLayers);Ext.namespace("gxp.plugins");
gxp.plugins.WMSGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsgetfeatureinfo",outputTarget:"map",popupCache:null,infoActionTip:"Get Feature Info",popupTitle:"Feature Info",addActions:function(){this.popupCache={};var a=gxp.plugins.WMSGetFeatureInfo.superclass.addActions.call(this,[{tooltip:this.infoActionTip,iconCls:"gxp-icon-getfeatureinfo",toggleGroup:this.toggleGroup,enableToggle:!0,allowDepress:!0,toggleHandler:function(a,b){for(var d=0,h=c.controls.length;d<h;d++)b?c.controls[d].activate():
c.controls[d].deactivate()}}]),b=this.actions[0].items[0],c={controls:[]},d=function(){for(var a=this.target.mapPanel.layers.queryBy(function(a){return a.get("queryable")}),d=this.target.mapPanel.map,g,h=0,j=c.controls.length;h<j;h++)g=c.controls[h],g.deactivate(),g.destroy();c.controls=[];a.each(function(a){var e=a.getLayer(),g=Ext.apply({},this.vendorParams),h;if(this.layerParams)for(var j=this.layerParams.length-1;j>=0;--j)h=this.layerParams[j].toUpperCase(),g[h]=e.params[h];e=new OpenLayers.Control.WMSGetFeatureInfo({url:e.url,
queryVisible:!0,layers:[e],vendorParams:g,eventListeners:{getfeatureinfo:function(b){var c=b.text.match(/<body[^>]*>([\s\S]*)<\/body>/);c&&!c[1].match(/^\s*$/)&&this.displayPopup(b,a.get("title")||a.get("name"),c[1])},scope:this}});d.addControl(e);c.controls.push(e);b.pressed&&e.activate()},this)};this.target.mapPanel.layers.on("update",d,this);this.target.mapPanel.layers.on("add",d,this);this.target.mapPanel.layers.on("remove",d,this);return a},displayPopup:function(a,b,c){var d=a.xy.x+"."+a.xy.y;
d in this.popupCache?a=this.popupCache[d]:(a=this.addOutput({xtype:"gx_popup",title:this.popupTitle,layout:"accordion",location:a.xy,map:this.target.mapPanel,width:250,height:300,listeners:{close:function(a){return function(){delete this.popupCache[a]}}(d),scope:this}}),this.popupCache[d]=a);a.add({title:b,layout:"fit",html:c,autoScroll:!0,autoWidth:!0,collapsible:!0});a.doLayout()}});Ext.preg(gxp.plugins.WMSGetFeatureInfo.prototype.ptype,gxp.plugins.WMSGetFeatureInfo);Ext.namespace("gxp.data");
gxp.data.WFSFeatureStore=Ext.extend(GeoExt.data.FeatureStore,{setOgcFilter:function(a){this.proxy.setFilter(a)},constructor:function(a){if(!(a.proxy&&a.proxy instanceof GeoExt.data.ProtocolProxy))a.proxy=new gxp.data.WFSProtocolProxy(Ext.apply({srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.ogcFilter,maxFeatures:a.maxFeatures},a.proxy));if(!a.writer)a.writer=new Ext.data.DataWriter({write:Ext.emptyFn});gxp.data.WFSFeatureStore.superclass.constructor.apply(this,
arguments);this.reader.extractValues=function(a){return this.readRecords([a.feature]).records[0].data}.createDelegate(this.reader);this.reader.meta.idProperty="id";this.reader.getId=function(a){return a.id}}});Ext.namespace("gxp.plugins");
gxp.plugins.FeatureManager=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuremanager",maxFeatures:100,paging:!0,pagingType:null,autoZoomPage:!1,autoSetLayer:!0,autoLoadFeatures:!1,layerRecord:null,featureStore:null,hitCountProtocol:null,featureLayer:null,schema:null,geometryType:null,toolsShowingLayer:null,style:null,pages:null,page:null,numberOfFeatures:null,numPages:null,pageIndex:null,constructor:function(a){this.addEvents("beforequery","query","beforelayerchange","layerchange","beforesetpage","setpage",
"beforeclearfeatures","clearfeatures");if(a&&!a.pagingType)this.pagingType=gxp.plugins.FeatureManager.QUADTREE_PAGING;if(a&&a.layer)this.autoSetLayer=!1;gxp.plugins.FeatureManager.superclass.constructor.apply(this,arguments)},init:function(){gxp.plugins.FeatureManager.superclass.init.apply(this,arguments);this.toolsShowingLayer={};this.style={all:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:this.initialConfig.symbolizer||{Point:{pointRadius:4,graphicName:"square",fillColor:"white",
fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:4,strokeOpacity:1,strokeColor:"#ff9933"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#ff6633",fillColor:"white",fillOpacity:0.3}}})]}),selected:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{display:"none"}})]})};this.featureLayer=new OpenLayers.Layer.Vector(this.id,{displayInLayerSwitcher:!1,visibility:!1,styleMap:new OpenLayers.StyleMap({select:OpenLayers.Util.extend({display:""},OpenLayers.Feature.Vector.style.select),
vertex:this.style.all},{extendDefault:!1})});this.target.on({ready:function(){this.target.mapPanel.map.addLayer(this.featureLayer)},scope:this});this.on({beforedestroy:function(){this.target.mapPanel.map.removeLayer(this.featureLayer)},scope:this})},activate:function(){if(gxp.plugins.FeatureManager.superclass.activate.apply(this,arguments)){if(this.autoSetLayer)this.target.on("beforelayerselectionchange",this.setLayer,this);this.layer&&this.target.createLayerRecord(this.layer,this.setLayer,this);
this.on("layerchange",this.setSchema,this);return!0}},deactivate:function(){if(gxp.plugins.FeatureManager.superclass.deactivate.apply(this,arguments))return this.autoSetLayer&&this.target.un("beforelayerselectionchange",this.setLayer,this),this.un("layerchange",this.setSchema,this),this.setLayer(),!0},getPageExtent:function(){return this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING?this.page.extent:this.featureStore.layer.getDataExtent()},setLayer:function(a){var b=this.fireEvent("beforelayerchange",
this,a);this.featureLayer.projection=this.getProjection(a);if(b!==!1&&a!==this.layerRecord)this.clearFeatureStore(),(this.layerRecord=a)?this.autoLoadFeatures===!0?this.loadFeatures():this.setFeatureStore():this.fireEvent("layerchange",this,null);return b},setSchema:function(a,b,c){this.schema=c},showLayer:function(a,b){this.toolsShowingLayer[a]=b||"all";this.setLayerDisplay()},hideLayer:function(a){delete this.toolsShowingLayer[a];this.setLayerDisplay()},setLayerDisplay:function(){var a=this.visible(),
b=this.target.mapPanel.map;a?(a=this.style[a],a!==this.featureLayer.styleMap.styles["default"]&&(this.featureLayer.styleMap.styles["default"]=a,this.featureLayer.redraw()),this.featureLayer.setVisibility(!0),b.events.on({addlayer:this.raiseLayer,scope:this})):this.featureLayer.map&&(this.featureLayer.setVisibility(!1),b.events.un({addlayer:this.raiseLayer,scope:this}))},visible:function(){var a=!1,b;for(b in this.toolsShowingLayer)a!="all"&&(a=this.toolsShowingLayer[b]);return a},raiseLayer:function(){var a=
this.featureLayer&&this.featureLayer.map;a&&a.setLayerIndex(this.featureLayer,a.layers.length)},loadFeatures:function(a,b,c){if(this.fireEvent("beforequery",this,a,b,c)!==!1){this.filter=a;this.pages=null;if(b){var d=this;d._activeQuery&&d.un("query",d._activeQuery);this.on("query",d._activeQuery=function(a,f){delete d._activeQuery;this.un("query",arguments.callee,this);f.getCount();f.getCount()==0?b.call(c,[]):this.featureLayer.events.register("featuresadded",this,function(a){this.featureLayer.events.unregister("featuresadded",
this,arguments.callee);b.call(c,a.features)})},this,{single:!0})}this.featureStore?(this.featureStore.setOgcFilter(a),this.paging?this.setPage():this.featureStore.load()):(this.paging&&this.on("layerchange",function(a,b,c){c&&(this.un("layerchange",arguments.callee,this),this.setPage())},this),this.setFeatureStore(a,!this.paging))}},clearFeatures:function(){var a=this.featureStore;if(a&&this.fireEvent("beforeclearfeatures",this)!==!1)a.removeAll(),this.fireEvent("clearfeatures",this),a=a.proxy,a.abortRequest(),
a.protocol.response&&a.protocol.response.abort()},getProjection:function(a){var b=this.target.mapPanel.map.getProjectionObject();(a=a.getLayer().projection)&&a.equals(b);return a},setFeatureStore:function(a,b){var c=this.layerRecord,d=this.target.getSource(c);d&&d instanceof gxp.plugins.WMSSource?d.getSchema(c,function(d){if(d===!1)this.clearFeatureStore();else{var f=[],g,h=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/,j={"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int",
"xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"};d.each(function(a){var b=h.exec(a.get("type"));if(b)g=a.get("name"),this.geometryType=b[1];else{b=j[a.get("type")];a={name:a.get("name"),type:j[b]};if(b=="date")a.dateFormat="Y-m-d\\Z";f.push(a)}},this);var k={srsName:this.getProjection(c).getCode(),url:d.url,featureType:d.reader.raw.featureTypes[0].typeName,featureNS:d.reader.raw.targetNamespace,geometryName:g};this.hitCountProtocol=
new OpenLayers.Protocol.WFS(Ext.apply({version:"1.1.0",readOptions:{output:"object"},resultType:"hits",filter:a},k));this.featureStore=new gxp.data.WFSFeatureStore(Ext.apply({fields:f,proxy:{protocol:{outputFormat:this.format}},maxFeatures:this.maxFeatures,layer:this.featureLayer,ogcFilter:a,autoLoad:b,autoSave:!1,listeners:{write:function(){this.redrawMatchingLayers(c)},load:function(){this.fireEvent("query",this,this.featureStore,this.filter)},scope:this}},k))}this.fireEvent("layerchange",this,
c,d)},this):(this.clearFeatureStore(),this.fireEvent("layerchange",this,c,!1))},redrawMatchingLayers:function(a){var b=a.get("name"),c=a.get("source");this.target.mapPanel.layers.each(function(a){a.get("source")===c&&a.get("name")===b&&a.getLayer().redraw(!0)})},clearFeatureStore:function(){if(this.featureStore)this.featureStore.removeAll(),this.featureStore.unbind(),this.featureStore.destroy(),this.geometryType=this.featureStore=null},processPage:function(a,b,c,d){var b=b||{},e=b.lonLat?null:b.index,
f=b.next,g=this.pages,h=this.pages.indexOf(a);this.setPageFilter(a);var j=f?h==(g.indexOf(f)||g.length)-1:!0,k=b.lonLat?a.extent.containsLonLat(b.lonLat):!0;k&&a.numFeatures&&a.numFeatures<=this.maxFeatures?c.call(this,a):k&&(h==e||j)&&this.hitCountProtocol.read({callback:function(h){var j=e,k=b.lonLat;f&&(j=(g.indexOf(f)||g.length)-1);!j&&k&&a.extent.containsLonLat(k)&&(j=g.indexOf(a));a.numFeatures=h.numberOfFeatures;this.page||(a.numFeatures>this.maxFeatures?this.createLeaf(a,Ext.applyIf({index:j,
next:f},b),c,d):a.numFeatures==0&&g.length>1?(g.remove(a),b.allowEmpty===!1&&this.setPage({index:e%this.pages.length,allowEmpty:!1})):this.pages.indexOf(a)==j&&c.call(this,a))},scope:this})},createLeaf:function(a,b,c,d){b=b||{};this.layerRecord.getLayer();var e=this.pages.indexOf(a);this.pages.remove(a);for(var f=a.extent,g=f.getCenterLonLat(),a=[f.left,g.lon,f.left,g.lon],h=[g.lat,g.lat,f.bottom,f.bottom],j=[g.lon,f.right,g.lon,f.right],f=[f.top,f.top,g.lat,g.lat],k,g=3;g>=0;--g)k={extent:new OpenLayers.Bounds(a[g],
h[g],j[g],f[g])},this.pages.splice(e,0,k),this.processPage(k,b,c,d)},getPagingExtent:function(a){var b=this.layerRecord.getLayer(),c=this.getSpatialFilter();if((a=c?c.value:this.target.mapPanel.map[a]())&&b.maxExtent&&a.containsBounds(b.maxExtent))a=b.maxExtent;return a},getSpatialFilter:function(){var a;if(this.filter instanceof OpenLayers.Filter.Spatial&&this.filter.type===OpenLayers.Filter.Spatial.BBOX)a=this.filter;else if(this.filter instanceof OpenLayers.Filter.Logical&&this.filter.type===OpenLayers.Filter.Logical.AND)for(var b,
c=this.filter.filters.length-1;c>=0;--c)if(b=this.filter.filters[c],b instanceof OpenLayers.Filter.Spatial&&b.type===OpenLayers.Filter.Spatial.BBOX){a=b;break}return a},setPageFilter:function(a){a.extent?(a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.featureStore.geometryName,value:a.extent}),a=this.filter?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.filter,a]}):a):a=this.filter;this.featureStore.setOgcFilter(a);this.hitCountProtocol.filter=
a;return this.hitCountProtocol.options.filter=a},nextPage:function(a,b){var c;this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING?(c=this.page,this.page=null,c=(this.pages.indexOf(c)+1)%this.pages.length):c=this.pageIndex+1%this.numPages;this.setPage({index:c,allowEmpty:!1},a,b)},previousPage:function(a){var b;this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING?(b=this.pages.indexOf(this.page)-1,b<0&&(b=this.pages.length-1)):(b=this.pageIndex-1,b<0&&(b=this.numPages-1));this.setPage({index:b,
allowEmpty:!1,next:this.page},a)},setPage:function(a,b,c){if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING)if(this.filter instanceof OpenLayers.Filter.FeatureId)this.featureStore.load({callback:function(){b&&b.call(c)}});else{if(this.fireEvent("beforesetpage",this,a,b,c)!==!1){if(!a){var d=this.getPagingExtent("getExtent"),d=new OpenLayers.LonLat(d.left,d.top),e=this.target.mapPanel.map.getMaxExtent();e.containsLonLat(d,!0)||(d=new OpenLayers.LonLat(e.left,e.top));a={lonLat:d,allowEmpty:!1}}a.index=
a.index||0;if(a.index=="last")a.index=this.pages.length-1,a.next=this.pages[0];this.page=null;if(this.pages){if(a.lonLat)for(d=this.pages.length-1;d>=0;--d)if(this.pages[d].extent.containsLonLat(a.lonLat)){a.index=d;break}}else this.layerRecord.getLayer(),this.pages=[{extent:this.getPagingExtent("getMaxExtent")}],a.index=0;this.processPage(this.pages[a.index],a,function(d){var e=this.target.mapPanel.map;this.page=d;this.setPageFilter(d);this.autoZoomPage&&!e.getExtent().containsLonLat(d.extent.getCenterLonLat())&&
e.zoomToExtent(d.extent);e=this.pages.indexOf(this.page);this.fireEvent("setpage",this,a,b,c,e,this.pages.length);this.featureStore.load({callback:function(){b&&b.call(c,d)}})},this)}}else if(this.fireEvent("beforesetpage",this,a,b,c)!==!1)if(a){if(a.index!=null)this.pageIndex=a.index==="last"?this.numPages-1:a.index==="first"?0:a.index,d=this.pageIndex*this.maxFeatures,this.fireEvent("setpage",this,a,b,c,this.pageIndex,this.numPages),this.featureStore.load({startIndex:d,callback:function(){b&&b.call(c)}})}else this.hitCountProtocol.read({filter:this.filter,
callback:function(d){this.numberOfFeatures=d.numberOfFeatures;this.numPages=Math.ceil(this.numberOfFeatures/this.maxFeatures);this.pageIndex=0;this.fireEvent("setpage",this,a,b,c,this.pageIndex,this.numPages);this.featureStore.load({output:"object",callback:function(){b&&b.call(c)}})},scope:this})}});gxp.plugins.FeatureManager.QUADTREE_PAGING=0;gxp.plugins.FeatureManager.WFS_PAGING=1;Ext.preg(gxp.plugins.FeatureManager.prototype.ptype,gxp.plugins.FeatureManager);Ext.namespace("gxp.plugins");
gxp.plugins.LayerTree=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layertree",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers",groups:null,defaultGroup:"default",constructor:function(){gxp.plugins.LayerTree.superclass.constructor.apply(this,arguments);if(!this.groups)this.groups={"default":this.overlayNodeText,background:{title:this.baseNodeText,exclusive:!0}}},addOutput:function(a){var b=this.target,c=this,d=function(a,d){if(d&&(b.on("layerselectionchange",function(b){!c.selectionChanging&&
b===d&&a.select()}),d===b.selectedLayer))a.on("rendernode",function(){a.select()})},e=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin),f=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:!0,isTarget:!1,allowDrop:!1}),g,h=this.defaultGroup,j;for(j in this.groups)g=typeof this.groups[j]=="string"?{title:this.groups[j]}:this.groups[j],f.appendChild(new GeoExt.tree.LayerContainer({text:g.title,iconCls:"gxp-folder",expanded:!0,group:j==h?void 0:j,loader:new GeoExt.tree.LayerLoader({baseAttrs:g.exclusive?
{checkedGroup:j}:void 0,store:this.target.mapPanel.layers,filter:function(a){return function(b){return(b.get("group")||h)==a&&b.getLayer().displayInLayerSwitcher==!0}}(j),createNode:function(a){a.uiProvider=e;var b=a.layer,c=a.layerStore;if(b&&c){var f=c.getAt(c.findBy(function(a){return a.getLayer()===b}));if(f){if(!f.get("queryable"))a.iconCls="gxp-tree-rasterlayer-icon";if(f.get("fixed"))a.allowDrag=!1}}c=GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments);d(c,f);return c}}),singleClickExpand:!0,
allowDrag:!1,listeners:{append:function(a,b){b.expand()}}}));a=Ext.apply({xtype:"treepanel",root:f,rootVisible:!1,border:!1,enableDD:!0,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:function(a,b){var c=!0,d=b&&b.layer;if(d)c=b.layerStore,c=c.getAt(c.findBy(function(a){return a.getLayer()===d})),this.selectionChanging=!0,c=this.target.selectLayer(c),this.selectionChanging=!1;return c},scope:this}}),listeners:{contextmenu:function(a,b){if(a&&a.layer){a.select();var c=a.getOwnerTree();
if(c.getSelectionModel().getSelectedNode()===a)c=c.contextMenu,c.contextNode=a,c.items.getCount()>0&&c.showAt(b.getXY())}},beforemovenode:function(a,b,c,d){if(c!==d)a=d.loader.store,c=a.findBy(function(a){return a.getLayer()===b.layer}),a.getAt(c).set("group",d.attributes.group)},scope:this},contextMenu:new Ext.menu.Menu({items:[]})},a||{});return gxp.plugins.LayerTree.superclass.addOutput.call(this,a)}});Ext.preg(gxp.plugins.LayerTree.prototype.ptype,gxp.plugins.LayerTree);Ext.namespace("gxp.plugins");
gxp.plugins.WMSRasterStylesDialog={isRaster:null,init:function(a){Ext.apply(a,gxp.plugins.WMSRasterStylesDialog)},createRule:function(){var a=[new OpenLayers.Symbolizer[this.isRaster?"Raster":this.symbolType]];return new OpenLayers.Rule({symbolizers:a})},addRule:function(){var a=this.items.get(2).items.get(0);this.isRaster?(a.rules.push(this.createPseudoRule()),a.rules.length==1&&a.rules.push(this.createPseudoRule()),this.savePseudoRules()):(this.selectedStyle.get("userStyle").rules.push(this.createRule()),
a.update(),this.selectedStyle.store.afterEdit(this.selectedStyle));this.updateRuleRemoveButton()},removeRule:function(){if(this.isRaster){var a=this.items.get(2).items.get(0),b=this.selectedRule;a.unselect();a.rules.remove(b);a.rules.length==1&&a.rules.remove(a.rules[0]);this.savePseudoRules()}else gxp.WMSStylesDialog.prototype.removeRule.apply(this,arguments)},duplicateRule:function(){var a=this.items.get(2).items.get(0);if(this.isRaster)a.rules.push(this.createPseudoRule({quantity:this.selectedRule.name,
label:this.selectedRule.title,color:this.selectedRule.symbolizers[0].fillColor,opacity:this.selectedRule.symbolizers[0].fillOpacity})),this.savePseudoRules();else{var b=this.selectedRule.clone();b.name=gxp.util.uniqueName((b.title||b.name)+" (copy)");delete b.title;this.selectedStyle.get("userStyle").rules.push(b);a.update()}this.updateRuleRemoveButton()},editRule:function(){this.isRaster?this.editPseudoRule():gxp.WMSStylesDialog.prototype.editRule.apply(this,arguments)},editPseudoRule:function(){var a=
this,b=this.selectedRule,c=new Ext.Window({title:"Color Map Entry: "+b.name,width:340,autoHeight:!0,modal:!0,items:[{bodyStyle:"padding-top: 5px",border:!1,defaults:{autoHeight:!0,hideMode:"offsets"},items:[{xtype:"form",border:!1,labelAlign:"top",defaults:{border:!1},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:!1,style:{"padding-right":"1em"}},items:[{layout:"form",width:70,items:[{xtype:"numberfield",anchor:"95%",value:b.name,allowBlank:!1,fieldLabel:"Quantity",validator:function(c){for(var d=
a.items.get(2).items.get(0).rules,g=d.length-1;g>=0;g--)if(b!==d[g]&&d[g].name==c)return"Quantity "+c+" is already defined";return!0},listeners:{valid:function(a){this.selectedRule.name=String(a.getValue());this.savePseudoRules()},scope:this}}]},{layout:"form",width:130,items:[{xtype:"textfield",fieldLabel:"Label",anchor:"95%",value:b.title,listeners:{valid:function(a){this.selectedRule.title=a.getValue();this.savePseudoRules()},scope:this}}]},{layout:"form",width:70,items:[new GeoExt.FeatureRenderer({symbolType:this.symbolType,
symbolizers:[b.symbolizers[0]],isFormField:!0,fieldLabel:"Appearance"})]}]}]},{xtype:"gxp_polygonsymbolizer",symbolizer:b.symbolizers[0],bodyStyle:{padding:"10px"},border:!1,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(a){var b=c.findByType(GeoExt.FeatureRenderer)[0];b.setSymbolizers([a],{draw:b.rendered});this.selectedRule.symbolizers[0]=a;this.savePseudoRules()},scope:this}}]}]}),d=c.findByType("gxp_strokesymbolizer")[0];d.ownerCt.remove(d);c.show()},savePseudoRules:function(){var a=
this.selectedStyle,b=this.items.get(2).items.get(0),a=a.get("userStyle"),b=b.rules;b.sort(function(a,b){var c=parseFloat(a.name),d=parseFloat(b.name);return c===d?0:c<d?-1:1});a=a.rules[0].symbolizers[0];a.colorMap=b.length>0?Array(b.length):void 0;for(var c,d=0,e=b.length;d<e;++d)c=b[d],a.colorMap[d]={quantity:parseFloat(c.name),label:c.title||void 0,color:c.symbolizers[0].fillColor||void 0,opacity:c.symbolizers[0].fill==!1?0:c.symbolizers[0].fillOpacity};this.afterRuleChange(this.selectedRule)},
createLegend:function(a,b){var c=OpenLayers.Symbolizer.Raster;c&&a[0]&&a[0].symbolizers[0]instanceof c?(this.getComponent("rulesfieldset").setTitle("Color Map Entries"),this.isRaster=!0,this.addRasterLegend(a,b)):(this.isRaster=!1,this.addVectorLegend(a))},addRasterLegend:function(a,b){for(var b=b||{},c=a[0].symbolizers[0].colorMap||[],d=[],e=0,f=c.length;e<f;e++)d.push(this.createPseudoRule(c[e]));this.selectedRule=b.selectedRuleIndex!=null?d[b.selectedRuleIndex]:null;return this.addVectorLegend(d,
{symbolType:"Polygon",enableDD:!1})},createPseudoRule:function(a){var b=-1;if(!a){var c=this.items.get(2);if(c.items){rules=c.items.get(0).rules;for(c=rules.length-1;c>=0;c--)b=Math.max(b,parseFloat(rules[c].name))}}a=Ext.applyIf(a||{},{quantity:++b,color:"#000000",opacity:1});return new OpenLayers.Rule({title:a.label,name:String(a.quantity),symbolizers:[new OpenLayers.Symbolizer.Polygon({fillColor:a.color,fillOpacity:a.opacity,stroke:!1,fill:a.opacity!==0})]})},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||
this.isRaster===!1&&this.items.get(2).items.get(0).rules.length<=1)}};Ext.preg("gxp_wmsrasterstylesdialog",gxp.plugins.WMSRasterStylesDialog);Ext.namespace("gxp.data");
gxp.data.WFSProtocolProxy=Ext.extend(GeoExt.data.ProtocolProxy,{setFilter:function(a){this.protocol.filter=a;this.protocol.options.filter=a},constructor:function(a){Ext.applyIf(a,{version:"1.1.0"});if(!(this.protocol&&this.protocol instanceof OpenLayers.Protocol))a.protocol=new OpenLayers.Protocol.WFS(Ext.apply({version:a.version,srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.filter,maxFeatures:a.maxFeatures},a.protocol));
gxp.data.WFSProtocolProxy.superclass.constructor.apply(this,arguments)},doRequest:function(a,b,c,d,e,f,g){delete c.xaction;if(a===Ext.data.Api.actions.read)this.load(c,d,e,f,g);else{b instanceof Array||(b=[b]);var h=Array(b.length);Ext.each(b,function(a,b){h[b]=a.getFeature()},this);var j={action:a,records:b,callback:e,scope:f};this.protocol.commit(h,{callback:function(a){this.onProtocolCommit(a,j)},scope:this})}},onProtocolCommit:function(a,b){if(a.success()){var c=a.reqFeatures,d,e,f=[],g=a.insertIds||
[],h,j,k=0;h=0;for(j=c.length;h<j;++h)if(e=c[h],d=e.state){if(d==OpenLayers.State.DELETE)f.push(e);else if(d==OpenLayers.State.INSERT)e.fid=g[k],++k;e.state=null}h=0;for(j=f.length;h<j;++h)e=f[h],e.layer&&e.layer.destroyFeatures([e]);j=c.length;d=Array(j);for(h=0;h<j;++h){e=c[h];d[h]={id:e.id,feature:e,state:null};var f=b.records[h].fields,l;for(l in e.attributes)f.containsKey(l)&&(d[h][l]=e.attributes[l])}b.callback.call(b.scope,d,a.priv,!0)}else c=a.priv,c.status>=200&&c.status<300?this.fireEvent("exception",
this,"remote",b.action,b,a.error,b.records):this.fireEvent("exception",this,"response",b.action,b,c),b.callback.call(b.scope,[],c,!1)}});Ext.namespace("gxp");
gxp.WMSStylesDialog=Ext.extend(Ext.Container,{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",
duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules",layerRecord:null,layerDescription:null,symbolType:null,stylesStore:null,selectedStyle:null,selectedRule:null,editable:!0,modified:!1,initComponent:function(){this.addEvents("ready","modified","styleselected","beforesaved","saved");Ext.applyIf(this,{layout:"form",
disabled:!0,items:[{xtype:"fieldset",title:this.stylesFieldsetTitle,labelWidth:85,style:"margin-bottom: 0;"},{xtype:"toolbar",style:"border-width: 0 1px 1px 1px; margin-bottom: 10px;",items:[{xtype:"button",iconCls:"add",text:this.addStyleText,tooltip:this.addStyleTip,handler:this.addStyle,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteStyleText,tooltip:this.deleteStyleTip,handler:function(){this.stylesStore.remove(this.selectedStyle)},scope:this},{xtype:"button",iconCls:"edit",text:this.editStyleText,
tooltip:this.editStyleTip,handler:function(){this.editStyle()},scope:this},{xtype:"button",iconCls:"duplicate",text:this.duplicateStyleText,tooltip:this.duplicateStyleTip,handler:function(){var a=this.selectedStyle,b=a.get("userStyle").clone();b.isDefault=!1;b.name=this.newStyleName();var c=this.stylesStore;c.add(new c.recordType({name:b.name,title:b.title,"abstract":b.description,userStyle:b}));this.editStyle(a)},scope:this}]}]});this.createStylesStore();this.on({beforesaved:function(){this._saving=
!0},saved:function(){delete this._saving},render:function(){gxp.util.dispatch([this.getStyles],function(){this.enable()},this)},scope:this});gxp.WMSStylesDialog.superclass.initComponent.apply(this,arguments)},addStyle:function(){if(this._ready){var a=this.selectedStyle,b=this.stylesStore,c=new OpenLayers.Style(null,{name:this.newStyleName(),rules:[this.createRule()]});b.add(new b.recordType({name:c.name,userStyle:c}));this.editStyle(a)}else this.on("ready",this.addStyle,this)},editStyle:function(a){var b=
this.selectedStyle.get("userStyle"),c=new Ext.Window(Ext.apply({bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){c.propertiesDialog.userStyle=b;c.close();if(a)this._cancelling=!0,this.stylesStore.remove(this.selectedStyle),this.changeStyle(a,{updateCombo:!0,markModified:!0}),delete this._cancelling},scope:this},{text:this.saveText,iconCls:"save",handler:function(){c.close()}}]},{title:String.format(this.styleWindowTitle,b.title||b.name),bodyBorder:!1,autoHeight:!0,width:300,modal:!0,
items:{border:!1,items:{xtype:"gxp_stylepropertiesdialog",ref:"../propertiesDialog",userStyle:b.clone(),nameEditable:!1,style:"padding: 10px;"}},listeners:{close:function(){this.selectedStyle.set("userStyle",c.propertiesDialog.userStyle)},scope:this}}));c.show()},createSLD:function(a){var a=a||{},b={version:"1.0.0",namedLayers:{}},c=this.layerRecord.get("name");b.namedLayers[c]={name:c,userStyles:[]};this.stylesStore.each(function(d){(!a.userStyles||a.userStyles.indexOf(d.get("name"))!==-1)&&b.namedLayers[c].userStyles.push(d.get("userStyle"))});
return(new OpenLayers.Format.SLD({multipleSymbolizers:!0})).write(b)},saveStyles:function(a){this.modified===!0&&this.fireEvent("beforesaved",this,a)},updateStyleRemoveButton:function(){var a=this.selectedStyle&&this.selectedStyle.get("userStyle");this.items.get(1).items.get(1).setDisabled(!a||this.stylesStore.getCount()<=1||a.isDefault===!0)},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule)},createRule:function(){return new OpenLayers.Rule({symbolizers:[new OpenLayers.Symbolizer[this.symbolType]]})},
addRulesFieldSet:function(){var a=new Ext.form.FieldSet({itemId:"rulesfieldset",title:this.rulesFieldsetTitle,autoScroll:!0,style:"margin-bottom: 0;"}),b=new Ext.Toolbar({style:"border-width: 0 1px 1px 1px;",items:[{xtype:"button",iconCls:"add",text:this.addRuleText,tooltip:this.addRuleTip,handler:this.addRule,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteRuleText,tooltip:this.deleteRuleTip,handler:this.removeRule,scope:this,disabled:!0},{xtype:"button",iconCls:"edit",text:this.editRuleText,
toolitp:this.editRuleTip,handler:function(){this.layerDescription?this.editRule():this.describeLayer(this.editRule)},scope:this,disabled:!0},{xtype:"button",iconCls:"duplicate",text:this.duplicateRuleText,tip:this.duplicateRuleTip,handler:this.duplicateRule,scope:this,disabled:!0}]});this.add(a,b);this.doLayout();return a},addRule:function(){var a=this.items.get(2).items.get(0);this.selectedStyle.get("userStyle").rules.push(this.createRule());a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);
this.updateRuleRemoveButton()},removeRule:function(){this.selectedStyle.get("userStyle").rules.remove(this.selectedRule);this.afterRuleChange()},duplicateRule:function(){var a=this.items.get(2).items.get(0),b=this.selectedRule.clone();this.selectedStyle.get("userStyle").rules.push(b);a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},editRule:function(){var a=this.selectedRule,b=a.clone(),c=new Ext.Window({title:String.format(this.ruleWindowTitle,a.title||
a.name||this.newRuleText),width:340,autoHeight:!0,modal:!0,items:[{xtype:"gxp_rulepanel",ref:"rulePanel",symbolType:this.symbolType,rule:a,attributes:new GeoExt.data.AttributeStore({url:this.layerDescription.owsURL,baseParams:{SERVICE:this.layerDescription.owsType,REQUEST:"DescribeFeatureType",TYPENAME:this.layerDescription.typeName},method:"GET",disableCaching:!1}),border:!1,defaults:{autoHeight:!0,hideMode:"offsets"},listeners:{change:this.saveRule,tabchange:function(){c.syncShadow()},scope:this}}],
bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){this.saveRule(c.rulePanel,b);c.close()},scope:this},{text:this.saveText,iconCls:"save",handler:function(){c.close()}}]});c.show()},saveRule:function(a,b){var c=this.selectedStyle;this.items.get(2).items.get(0);var c=c.get("userStyle"),d=c.rules.indexOf(this.selectedRule);c.rules[d]=b;this.afterRuleChange(b)},afterRuleChange:function(a){this.items.get(2).items.get(0);this.selectedRule=a;this.selectedStyle.store.afterEdit(this.selectedStyle)},
removeRulesFieldSet:function(){this.remove(this.items.get(3));this.remove(this.items.get(2));this.doLayout()},parseSLD:function(a){var b=a.responseXML;if(!b||!b.documentElement)b=(new OpenLayers.Format.XML).read(a.responseText);var a=this.layerRecord.getLayer().params,c=this.initialConfig.styleName||a.STYLES;if(c)this.selectedStyle=this.stylesStore.getAt(this.stylesStore.findExact("name",c));var d=new OpenLayers.Format.SLD({multipleSymbolizers:!0});try{var e=d.read(b).namedLayers[a.LAYERS].userStyles,
f;if(a.SLD_BODY)f=d.read(a.SLD_BODY).namedLayers[a.LAYERS].userStyles,Array.prototype.push.apply(e,f);this.stylesStore.removeAll();this.selectedStyle=null;for(var g,h,j,b=0,k=e.length;b<k;++b)if(g=e[b],j=this.stylesStore.findExact("name",g.name),j!==-1&&this.stylesStore.removeAt(j),h=new this.stylesStore.recordType({name:g.name,title:g.title,"abstract":g.description,userStyle:g}),h.phantom=!1,this.stylesStore.add(h),!this.selectedStyle&&(c===g.name||!c&&g.isDefault===!0))this.selectedStyle=h;this.addRulesFieldSet();
this.createLegend(this.selectedStyle.get("userStyle").rules);this.stylesStoreReady();a.SLD_BODY&&this.markModified()}catch(l){this.setupNonEditable()}},createLegend:function(a){var b=OpenLayers.Symbolizer.Raster;if(b&&a[0]&&a[0].symbolizers[0]instanceof b)throw"Raster symbolizers are not supported.";else this.addVectorLegend(a)},setupNonEditable:function(){this.editable=!1;this.items.get(1).hide();(this.getComponent("rulesfieldset")||this.addRulesFieldSet()).add(this.createLegendImage());this.doLayout();
this.items.get(3).hide();this.stylesStoreReady()},stylesStoreReady:function(){this.stylesStore.commitChanges();this.stylesStore.on({load:function(){this.addStylesCombo();this.updateStyleRemoveButton()},add:function(a,b,c){this.updateStyleRemoveButton();b=this.items.get(0).items.get(0);this.markModified();b.fireEvent("select",b,a.getAt(c),c);b.setValue(this.selectedStyle.get("name"))},remove:function(a,b,c){if(!this._cancelling)this._removing=!0,b=Math.min(c,a.getCount()-1),this.updateStyleRemoveButton(),
c=this.items.get(0).items.get(0),this.markModified(),c.fireEvent("select",c,a.getAt(b),b),c.setValue(this.selectedStyle.get("name")),delete this._removing},update:function(a,b){var c=b.get("userStyle");Ext.apply(b.data,{name:c.name,title:c.title||c.name,"abstract":c.description});this.changeStyle(b,{updateCombo:!0,markModified:!0})},scope:this});this.stylesStore.fireEvent("load",this.stylesStore,this.stylesStore.getRange());this._ready=!0;this.fireEvent("ready")},markModified:function(){if(this.modified===
!1)this.modified=!0;this._saving||this.fireEvent("modified",this,this.selectedStyle.get("name"))},createStylesStore:function(){var a=this.layerRecord.get("styles");this.stylesStore=new Ext.data.JsonStore({data:{styles:a},idProperty:"name",root:"styles",fields:["name","title","abstract","legend","userStyle"],listeners:{add:function(a,c){for(var d,e=c.length-1;e>=0;--e)d=c[e],a.suspendEvents(),d.get("title")||d.set("title",d.get("name")),a.resumeEvents()}}})},getStyles:function(a){var b=this.layerRecord.getLayer();
this.editable===!0?Ext.Ajax.request({url:b.url,params:{SERVICE:"WMS",VERSION:b.params.VERSION,REQUEST:"GetStyles",LAYERS:""+b.params.LAYERS},method:"GET",disableCaching:!1,success:this.parseSLD,failure:this.setupNonEditable,callback:a,scope:this}):this.setupNonEditable()},describeLayer:function(a){if(this.layerDescription)window.setTimeout(function(){a.call(this)},0);else{var b=this.layerRecord.getLayer();Ext.Ajax.request({url:b.url,params:{SERVICE:"WMS",VERSION:b.params.VERSION,REQUEST:"DescribeLayer",
LAYERS:""+b.params.LAYERS},method:"GET",disableCaching:!1,success:function(a){this.layerDescription=(new OpenLayers.Format.WMSDescribeLayer).read(a.responseXML&&a.responseXML.documentElement?a.responseXML:a.responseText)[0]},callback:a,scope:this})}},addStylesCombo:function(){var a=this.stylesStore,a=new Ext.form.ComboBox(Ext.apply({fieldLabel:this.chooseStyleText,store:a,editable:!1,displayField:"title",valueField:"name",value:this.selectedStyle?this.selectedStyle.get("title"):this.layerRecord.getLayer().params.STYLES||
"default",disabled:!a.getCount(),mode:"local",typeAhead:!0,triggerAction:"all",forceSelection:!0,anchor:"100%",listeners:{select:function(a,c){this.changeStyle(c);!c.phantom&&!this._removing&&this.fireEvent("styleselected",this,c.get("name"))},scope:this}},this.initialConfig.stylesComboOptions));this.items.get(0).add(a);this.doLayout()},createLegendImage:function(){return new GeoExt.WMSLegend({showTitle:!1,layerRecord:this.layerRecord,defaults:{listeners:{render:function(){this.getEl().on({load:this.doLayout,
error:this.removeRulesFieldSet,scope:this})},scope:this}}})},changeStyle:function(a,b){var b=b||{},c=this.items.get(2).items.get(0);this.selectedStyle=a;this.updateStyleRemoveButton();a.get("name");if(this.editable===!0){var d=a.get("userStyle"),e=c.rules.indexOf(this.selectedRule);c.ownerCt.remove(c);this.createLegend(d.rules,{selectedRuleIndex:e})}b.updateCombo===!0&&(this.items.get(0).items.get(0).setValue(d.name),b.markModified===!0&&this.markModified())},addVectorLegend:function(a,b){b=Ext.applyIf(b||
{},{enableDD:!0});this.symbolType=b.symbolType;if(!this.symbolType){var c=["Point","Line","Polygon"];highest=0;for(var d=a[0].symbolizers,e,f=d.length-1;f>=0;f--)e=d[f].CLASS_NAME.split(".").pop(),highest=Math.max(highest,c.indexOf(e));this.symbolType=c[highest]}var g=this.items.get(2).add({xtype:"gx_vectorlegend",showTitle:!1,height:a.length>10?250:void 0,autoScroll:a.length>10,rules:a,symbolType:this.symbolType,selectOnClick:!0,enableDD:b.enableDD,listeners:{ruleselected:function(a,b){this.selectedRule=
b;var c=this.items.get(3).items;this.updateRuleRemoveButton();c.get(2).enable();c.get(3).enable()},ruleunselected:function(){this.selectedRule=null;var a=this.items.get(3).items;a.get(1).disable();a.get(2).disable();a.get(3).disable()},rulemoved:function(){this.markModified()},afterlayout:function(){this.selectedRule!==null&&g.selectedRule===null&&g.rules.indexOf(this.selectedRule)!==-1&&g.selectRuleEntry(this.selectedRule)},scope:this}});this.doLayout();return g},newStyleName:function(){var a=this.layerRecord.get("name");
return a.split(":").pop()+"_"+gxp.util.md5(a+new Date+Math.random()).substr(0,8)}});
gxp.WMSStylesDialog.createGeoServerStylerConfig=function(a,b){var c=a.getLayer();b||(b=c.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest"));return{xtype:"gxp_wmsstylesdialog",layerRecord:a,plugins:[{ptype:"gxp_geoserverstylewriter",baseUrl:b}],listeners:{styleselected:function(a,b){c.mergeNewParams({styles:b})},modified:function(a){a.saveStyles()},saved:function(a,b){c.mergeNewParams({_olSalt:Math.random(),styles:b})},scope:this}}};
OpenLayers.Renderer.defaultSymbolizer={fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square",fontColor:"#000000",fontSize:10,haloColor:"#FFFFFF",haloOpacity:1,haloRadius:1};Ext.reg("gxp_wmsstylesdialog",gxp.WMSStylesDialog);
OpenLayers.Format&&OpenLayers.Format.SLD&&OpenLayers.Format.SLD.v1&&function(){OpenLayers.Format.SLD.v1.prototype.readers.sld.VendorOption=function(a,b){if(!b.vendorOptions)b.vendorOptions=[];b.vendorOptions.push({name:a.getAttribute("name"),value:this.getChildValue(a)})};OpenLayers.Format.SLD.v1.prototype.writers.sld.VendorOption=function(a){return this.createElementNSPlus("sld:VendorOption",{attributes:{name:a.name},value:a.value})};OpenLayers.Format.SLD.v1.prototype.readers.sld.Priority=function(a,
b){b.priority=this.readOgcExpression(a)};OpenLayers.Format.SLD.v1.prototype.writers.sld.Priority=function(a){var b=this.createElementNSPlus("sld:Priority");this.writeNode("ogc:Literal",a,b);return b};var a=OpenLayers.Format.SLD.v1.prototype.writers.sld,b;b=a.TextSymbolizer;a.TextSymbolizer=function(a){return function(b){var c=a.apply(this,arguments);(b.externalGraphic||b.graphicName)&&this.writeNode("Graphic",b,c);"priority"in b&&this.writeNode("Priority",b.priority,c);return c}}(b);for(var c=["PointSymbolizer",
"LineSymbolizer","PolygonSymbolizer","TextSymbolizer"],d,e=0,f=c.length;e<f;++e)d=c[e],b=a[d],a[d]=function(a){return function(b){var c=a.apply(this,arguments),d=b.vendorOptions;if(d)for(var e=0,f=d.length;e<f;++e)this.writeNode("VendorOption",d[e],c);return c}}(b)}();Ext.namespace("gxp.plugins");
gxp.plugins.Styler=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_styler",menuText:"Edit Styles",tooltip:"Manage layer styles",sameOriginStyling:!0,rasterStyling:!1,constructor:function(){gxp.plugins.Styler.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={autoHeight:!0,width:265};Ext.applyIf(this.outputConfig,{closeAction:"close"})},addActions:function(){var a=gxp.plugins.Styler.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-palette",disabled:!0,
tooltip:this.tooltip,handler:function(){this.addOutput()},scope:this}]);this.launchAction=a[0];this.target.on({layerselectionchange:this.handleLayerChange,scope:this});return a},handleLayerChange:function(a){this.launchAction.disable();if(a&&a.get("styles")){var b=this.target.getSource(a);b instanceof gxp.plugins.WMSSource&&b.describeLayer(a,function(b){this.checkIfStyleable(a,b)},this)}},checkIfStyleable:function(a,b){var c=["WFS"];this.rasterStyling===!0&&c.push("WCS");if(b&&c.indexOf(b.get("owsType"))!==
-1){var c=!1,d=this.target.layerSources[a.get("source")].url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest/styles");(c=this.sameOriginStyling?d.charAt(0)==="/":!0)&&this.target.isAuthorized()&&this.enableActionIfAvailable(d)}},enableActionIfAvailable:function(a){Ext.Ajax.request({method:"PUT",url:a,callback:function(a,c,d){this.launchAction.setDisabled(d.status!==405)},scope:this})},addOutput:function(a){var a=a||{},b=this.target.selectedLayer;this.outputConfig.title=(this.initialConfig.outputConfig||
{}).title||this.menuText+": "+b.get("title");Ext.apply(a,gxp.WMSStylesDialog.createGeoServerStylerConfig(b));this.rasterStyling===!0&&a.plugins.push({ptype:"gxp_wmsrasterstylesdialog"});Ext.applyIf(a,{style:"padding: 10px"});var c=gxp.plugins.Styler.superclass.addOutput.call(this,a);c.stylesStore.on("load",function(){this.outputTarget||c.ownerCt.ownerCt.center()})}});Ext.preg(gxp.plugins.Styler.prototype.ptype,gxp.plugins.Styler);Ext.namespace("gxp.grid");
gxp.grid.CapabilitiesGrid=Ext.extend(Ext.grid.GridPanel,{store:null,cm:null,expander:null,mapPanel:null,url:null,autoExpandColumn:"title",allowNewSources:!0,nameHeaderText:"Name",titleHeaderText:"Title",queryableHeaderText:"Queryable",layerSelectionLabel:"View available data from:",layerAdditionLabel:"or add a new server.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",initComponent:function(){if(!this.store)this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.url+"?service=wms&request=GetCapabilities"}),
this.store.load();if(!("expander"in this))this.expander=new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)});if(!this.plugins&&this.expander)this.plugins=this.expander;if(!this.cm){var a=[{id:"title",header:this.titleHeaderText,dataIndex:"title",sortable:!0},{header:this.nameHeaderText,dataIndex:"name",width:180,sortable:!0},{header:this.queryableHeaderText,dataIndex:"queryable",width:70,renderer:function(a,b){b.css="x-btn";var e="x-btn cancel";a&&(e="x-btn add");return'<div style="background-repeat: no-repeat; background-position: 50% 0%; height: 16px;" class="'+
e+'">&nbsp;</div>'}}];this.expander&&a.unshift(this.expander);this.cm=new Ext.grid.ColumnModel(a)}if(!("allowNewSources"in this))this.allowNewSources=!!this.metaStore;if(this.allowNewSources||this.metaStore&&this.metaStore.getCount()>1)this.sourceComboBox=new Ext.form.ComboBox({store:this.metaStore,valueField:"identifier",displayField:"name",triggerAction:"all",editable:!1,allowBlank:!1,forceSelection:!0,mode:"local",value:this.metaStore.getAt(this.metaStore.findBy(function(a){return a.get("store")==
this.store},this)).get("identifier"),listeners:{select:function(a,b){this.reconfigure(b.data.store,this.getColumnModel());if(this.expander)this.expander.ows=b.get("url")},scope:this}}),this.metaStore.on("add",function(a,b,e){this.sourceComboBox.onSelect(b[0],e)},this),this.tbar=this.tbar||[],this.tbar.push(""+this.layerSelectionLabel),this.tbar.push(this.sourceComboBox);if(this.allowNewSources){var b=this;if(!this.newSourceWindow)this.newSourceWindow=new gxp.NewSourceWindow({modal:!0,metaStore:this.metaStore,
addSource:function(){b.addSource.apply(b,arguments)}});this.tbar.push(new Ext.Button({text:this.layerAdditionLabel,handler:function(){this.newSourceWindow.show()},scope:this}))}gxp.grid.CapabilitiesGrid.superclass.initComponent.call(this)},addSource:function(a,b,c,d){d=d||this;c=new GeoExt.data.WMSCapabilitiesStore({url:a,autoLoad:!0});this.metaStore.add(new this.metaStore.recordType({url:a,store:c,identifier:a,name:a}));b.apply(d)},addLayers:function(){for(var a=this.getSelectionModel().getSelections(),
b,c,d=[],e=0;e<a.length;e++)Ext.data.Record.AUTO_ID++,b=a[e].copy(Ext.data.Record.AUTO_ID),this.alignToGrid?(c=b.getLayer().clone(),c.maxExtent=new OpenLayers.Bounds(-180,-90,180,90)):(c=b.getLayer(),c=new OpenLayers.Layer.WMS(c.name,c.url,{layers:c.params.LAYERS},{attribution:c.attribution,maxExtent:OpenLayers.Bounds.fromArray(b.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),this.mapPanel.map.getProjectionObject())})),b.data.layer=c,b.commit(!0),d.push(b);d.length&&(a=this.mapPanel.layers.findBy(function(a){return a.getLayer()instanceof
OpenLayers.Layer.Vector}),a!==-1?this.mapPanel.layers.insert(a,d):this.mapPanel.layers.add(d))}});Ext.reg("gxp_capabilitiesgrid",gxp.grid.CapabilitiesGrid);Ext.namespace("gxp");
gxp.GoogleEarthPanel=Ext.extend(Ext.Panel,{HORIZONTAL_FIELD_OF_VIEW:30*Math.PI/180,map:null,mapPanel:null,layers:null,earth:null,projection:null,layerCache:null,initComponent:function(){this.addEvents("beforeadd","earthready","pluginfailure");gxp.GoogleEarthPanel.superclass.initComponent.call(this);var a=this.mapPanel;a&&!(a instanceof GeoExt.MapPanel)&&(a=Ext.getCmp(a));if(!a)throw Error("Could not get map panel from config: "+this.mapPanel);this.map=a.map;this.layers=a.layers;this.projection=new OpenLayers.Projection("EPSG:4326");
this.on("show",function(){if(this.rendered)this.layerCache={},google.earth.createInstance(this.body.dom,this.onEarthReady.createDelegate(this),function(a){this.fireEvent("pluginfailure",this,a)}.createDelegate(this))},this);this.on("hide",function(){this.body.dom.innerHTML="";this.earth!=null&&this.updateMap();this.earth=null},this)},onEarthReady:function(a){this.earth=a;this.earth.getOptions().setFlyToSpeed(this.earth.SPEED_TELEPORT);this.resetCamera();this.setExtent(this.map.getExtent());this.earth.getNavigationControl().setVisibility(this.earth.VISIBILITY_SHOW);
a=this.earth.getNavigationControl().getScreenXY();a.setXUnits(this.earth.UNITS_PIXELS);a.setYUnits(this.earth.UNITS_INSET_PIXELS);this.earth.getWindow().setVisibility(!0);this.layers.each(function(a){this.addLayer(a)},this);this.layers.on("remove",this.updateLayers,this);this.layers.on("update",this.updateLayers,this);this.layers.on("add",this.updateLayers,this);this.fireEvent("earthready")},updateLayers:function(){if(this.earth){for(var a=this.earth.getFeatures(),b=a.getFirstChild();b!=null;)a.removeChild(b),
b=a.getFirstChild();this.layers.each(function(a){this.addLayer(a)},this)}},addLayer:function(a,b){var c=a.getLayer(),d=c&&c.url;if(this.earth&&c instanceof OpenLayers.Layer.WMS&&typeof d=="string"&&this.fireEvent("beforeadd",a)!==!1){var e=c.id;if(this.layerCache[e])d=this.layerCache[e];else{var f=this.earth.createLink("kl_"+e),d=d.replace(/\?.*/,""),g=c.params;f.setHref(d+("/kml?mode=refresh&layers="+g.LAYERS+"&styles="+g.STYLES));d=this.earth.createNetworkLink("nl_"+e);d.setName(e);d.set(f,!1,!1);
this.layerCache[e]=d}d.setVisibility(c.getVisibility());b!==void 0&&b<this.earth.getFeatures().getChildNodes().getLength()?this.earth.getFeatures().insertBefore(this.earth.getFeatures().getChildNodes().item(b)):this.earth.getFeatures().appendChild(d)}},setExtent:function(a){var a=a.transform(this.map.getProjectionObject(),this.projection),b=a.getCenterLonLat(),a=this.getExtentWidth(a)/(2*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW)),c=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);
c.setLatitude(b.lat);c.setLongitude(b.lon);c.setRange(a);this.earth.getView().setAbstractView(c)},resetCamera:function(){var a=this.earth.getView().copyAsCamera(this.earth.ALTITUDE_RELATIVE_TO_GROUND);a.setRoll(0);a.setHeading(0);a.setTilt(0);this.earth.getView().setAbstractView(a)},getExtent:function(){var a=this.earth.getView().getViewportGlobeBounds();return new OpenLayers.Bounds(a.getWest(),a.getSouth(),a.getEast(),a.getNorth())},updateMap:function(){var a=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND),
b=this.reprojectToMap(new OpenLayers.LonLat(a.getLongitude(),a.getLatitude()));this.map.zoomToExtent(this.reprojectToMap(this.getExtent()),!0);this.map.setCenter(b);var a=2*a.getRange()*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW),c=this.map.getResolutionForZoom(this.map.getZoom()+1),d=this.map.getExtent(),b=new OpenLayers.Bounds(b.lon-this.map.getSize().w/2*c,b.lat+this.map.getSize().h/2*c,b.lon+this.map.getSize().w/2*c,b.lat-this.map.getSize().h/2*c),d=Math.abs(this.getExtentWidth(d)-a);Math.abs(this.getExtentWidth(b)-
a)<d&&this.map.zoomTo(this.map.getZoom()+1)},getExtentWidth:function(a){var b=a.getCenterLonLat(),c=new OpenLayers.LonLat(a.left,b.lat),a=new OpenLayers.LonLat(a.right,b.lat);return OpenLayers.Util.distVincenty(c,a)*1E3},reprojectToGE:function(a){return a.clone().transform(this.map.getProjectionObject(),this.projection)},reprojectToMap:function(a){return a.clone().transform(this.projection,this.map.getProjectionObject())}});Ext.reg("gxp_googleearthpanel",gxp.GoogleEarthPanel);Ext.namespace("gxp");
gxp.FillSymbolizer=Ext.extend(Ext.FormPanel,{symbolizer:null,colorManager:null,checkboxToggle:!0,defaultColor:null,border:!1,fillText:"Fill",colorText:"Color",opacityText:"Opacity",initComponent:function(){if(!this.symbolizer)this.symbolizer={};var a;this.colorManager&&(a=[new this.colorManager]);this.items=[{xtype:"fieldset",title:this.fillText,autoHeight:!0,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===!0&&this.symbolizer.fill===!1,hideMode:"offsets",defaults:{width:100},items:[{xtype:"gxp_colorfield",
fieldLabel:this.colorText,name:"color",emptyText:OpenLayers.Renderer.defaultSymbolizer.fillColor,value:this.symbolizer.fillColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.fillColor,plugins:a,listeners:{valid:function(a){var a=a.getValue(),c=this.symbolizer.fillColor!=a;this.symbolizer.fillColor=a;c&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",fieldLabel:this.opacityText,name:"opacity",values:[("fillOpacity"in this.symbolizer?this.symbolizer.fillOpacity:
OpenLayers.Renderer.defaultSymbolizer.fillOpacity)*100],isFormField:!0,listeners:{changecomplete:function(a,c){this.symbolizer.fillOpacity=c/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.fill!==!1)this.symbolizer.fill=!1,this.fireEvent("change",this.symbolizer)},expand:function(){this.symbolizer.fill=!0;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");
gxp.FillSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_fillsymbolizer",gxp.FillSymbolizer);Ext.ns("gxp.data");gxp.data.AutoCompleteProxy=Ext.extend(GeoExt.data.ProtocolProxy,{doRequest:function(a,b,c){if(c.query)c.filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,matchCase:!1,property:this.protocol.propertyNames[0],value:"*"+c.query+"*"}),delete c.query;gxp.data.AutoCompleteProxy.superclass.doRequest.apply(this,arguments)}});Ext.namespace("gxp");
gxp.ScaleOverlay=Ext.extend(Ext.Panel,{map:null,zoomLevelText:"Zoom level",initComponent:function(){gxp.ScaleOverlay.superclass.initComponent.call(this);this.cls="map-overlay";if(this.map){if(this.map instanceof GeoExt.MapPanel)this.map=this.map.map;this.bind(this.map)}this.on("beforedestroy",this.unbind,this)},addToMapPanel:function(a){this.on({afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(){var a=this.getEl();a.un("mousedown",
this.stopMouseEvents,this);a.un("click",this.stopMouseEvents,this);this.unbind()},addScaleLine:function(){var a=new Ext.BoxComponent({autoEl:{tag:"div",cls:"olControlScaleLine overlay-element overlay-scaleline"}});this.on("afterlayout",function(){a.getEl().dom.style.position="relative";a.getEl().dom.style.display="inline";this.getEl().on("click",this.stopMouseEvents,this);this.getEl().on("mousedown",this.stopMouseEvents,this)},this);a.on("render",function(){var b=new OpenLayers.Control.ScaleLine({div:a.getEl().dom});
this.map.addControl(b);b.activate()},this);this.add(a)},handleZoomEnd:function(){var a=this.zoomStore.queryBy(function(a){return this.map.getZoom()==a.data.level},this);a.length>0?(a=a.items[0],this.zoomSelector.setValue("1 : "+parseInt(a.data.scale,10))):this.zoomSelector.rendered&&this.zoomSelector.clearValue()},addScaleCombo:function(){this.zoomStore=new GeoExt.data.ScaleStore({map:this.map});this.zoomSelector=new Ext.form.ComboBox({emptyText:this.zoomLevelText,tpl:'<tpl for="."><div class="x-combo-list-item">1 : {[parseInt(values.scale)]}</div></tpl>',
editable:!1,triggerAction:"all",mode:"local",store:this.zoomStore,width:110});this.zoomSelector.on({click:this.stopMouseEvents,mousedown:this.stopMouseEvents,select:function(a,b){this.map.zoomTo(b.data.level)},scope:this});this.map.events.register("zoomend",this,this.handleZoomEnd);this.add(new Ext.Panel({items:[this.zoomSelector],cls:"overlay-element overlay-scalechooser",border:!1}))},bind:function(a){this.map=a;this.addScaleLine();this.addScaleCombo();this.doLayout()},unbind:function(){this.map&&
this.map.events&&this.map.events.unregister("zoomend",this,this.handleZoomEnd);this.zoomSelector=this.zoomStore=null}});Ext.reg("gxp_scaleoverlay",gxp.ScaleOverlay);Ext.namespace("gxp");
gxp.ScaleLimitPanel=Ext.extend(Ext.Panel,{maxScaleDenominatorLimit:1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,limitMaxScaleDenominator:!0,maxScaleDenominator:void 0,minScaleDenominatorLimit:Math.pow(0.5,19)*1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,limitMinScaleDenominator:!0,minScaleDenominator:void 0,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,scaleFactor:null,changing:!1,border:!1,maxScaleLimitText:"Max scale limit",minScaleLimitText:"Min scale limit",
initComponent:function(){this.layout="column";this.defaults={border:!1,bodyStyle:"margin: 0 5px;"};this.bodyStyle={padding:"5px"};this.scaleSliderTemplate=new Ext.Template(this.scaleSliderTemplate);Ext.applyIf(this,{minScaleDenominator:this.minScaleDenominatorLimit,maxScaleDenominator:this.maxScaleDenominatorLimit});this.scaleFactor=Math.pow(this.maxScaleDenominatorLimit/this.minScaleDenominatorLimit,1/(this.scaleLevels-1));this.scaleSlider=new Ext.Slider({vertical:!0,height:100,values:[0,100],listeners:{changecomplete:function(a){this.updateScaleValues(a)},
render:function(a){a.thumbs[0].el.setVisible(this.limitMaxScaleDenominator);a.thumbs[1].el.setVisible(this.limitMinScaleDenominator);a.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this},plugins:[new gxp.slider.Tip({getText:function(a){var b=a.slider.thumbs.indexOf(a),c=this.sliderValuesToScale([a.value]),a={scale:String(c[0]),zoom:(a.value*(this.scaleLevels/100)).toFixed(1),type:b===0?"Max":"Min",scaleType:b===0?"Min":"Max"};this.modifyScaleTipContext(this,a);
return this.scaleSliderTemplate.apply(a)}.createDelegate(this)})]});this.maxScaleDenominatorInput=new Ext.form.NumberField({allowNegative:!1,width:100,fieldLabel:"1",value:Math.round(this.maxScaleDenominator),disabled:!this.limitMaxScaleDenominator,validator:function(a){return!this.limitMinScaleDenominator||a>this.minScaleDenominator}.createDelegate(this),listeners:{valid:function(a){a=Number(a.getValue());if(a<Math.round(this.maxScaleDenominatorLimit)&&a>this.minScaleDenominator)this.maxScaleDenominator=
a,this.updateSliderValues()},change:function(a){var b=Number(a.getValue()),c=Math.round(this.maxScaleDenominatorLimit);b>c?a.setValue(c):b<this.minScaleDenominator?a.setValue(this.minScaleDenominator):(this.maxScaleDenominator=b,this.updateSliderValues())},scope:this}});this.minScaleDenominatorInput=new Ext.form.NumberField({allowNegative:!1,width:100,fieldLabel:"1",value:Math.round(this.minScaleDenominator),disabled:!this.limitMinScaleDenominator,validator:function(a){return!this.limitMaxScaleDenominator||
a<this.maxScaleDenominator}.createDelegate(this),listeners:{valid:function(a){a=Number(a.getValue());if(a>Math.round(this.minScaleDenominatorLimit)&&a<this.maxScaleDenominator)this.minScaleDenominator=a,this.updateSliderValues()},change:function(a){var b=Number(a.getValue()),c=Math.round(this.minScaleDenominatorLimit);b<c?a.setValue(c):b>this.maxScaleDenominator?a.setValue(this.maxScaleDenominator):(this.minScaleDenominator=b,this.updateSliderValues())},scope:this}});this.items=[this.scaleSlider,
{xtype:"panel",layout:"form",defaults:{border:!1},items:[{labelWidth:90,layout:"form",width:150,items:[{xtype:"checkbox",checked:!!this.limitMinScaleDenominator,fieldLabel:this.maxScaleLimitText,listeners:{check:function(a,b){this.limitMinScaleDenominator=b;var c=this.scaleSlider;c.setValue(1,100);c.thumbs[1].el.setVisible(b);this.minScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(c);c.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,
layout:"form",items:[this.minScaleDenominatorInput]},{labelWidth:90,layout:"form",items:[{xtype:"checkbox",checked:!!this.limitMaxScaleDenominator,fieldLabel:this.minScaleLimitText,listeners:{check:function(a,b){this.limitMaxScaleDenominator=b;var c=this.scaleSlider;c.setValue(0,0);c.thumbs[0].el.setVisible(b);this.maxScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(c);c.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",
items:[this.maxScaleDenominatorInput]}]}];this.addEvents("change");gxp.ScaleLimitPanel.superclass.initComponent.call(this)},updateScaleValues:function(a){if(!this.changing){var b=a.getValues(),c=!1;!this.limitMaxScaleDenominator&&b[0]>0&&(b[0]=0,c=!0);!this.limitMinScaleDenominator&&b[1]<100&&(b[1]=100,c=!0);c?(a.setValue(0,b[0]),a.setValue(1,b[1])):(b=this.sliderValuesToScale(b),a=b[0],b=b[1],this.changing=!0,this.minScaleDenominatorInput.setValue(b),this.maxScaleDenominatorInput.setValue(a),this.changing=
!1,this.fireEvent("change",this,this.limitMinScaleDenominator?b:void 0,this.limitMaxScaleDenominator?a:void 0))}},updateSliderValues:function(){if(!this.changing){var a=this.minScaleDenominator,b=this.maxScaleDenominator,c=this.scaleToSliderValues([b,a]);this.changing=!0;this.scaleSlider.setValue(0,c[0]);this.scaleSlider.setValue(1,c[1]);this.changing=!1;this.fireEvent("change",this,this.limitMinScaleDenominator?a:void 0,this.limitMaxScaleDenominator?b:void 0)}},sliderValuesToScale:function(a){var b=
100/(this.scaleLevels-1);return[Math.round(Math.pow(this.scaleFactor,(100-a[0])/b)*this.minScaleDenominatorLimit),Math.round(Math.pow(this.scaleFactor,(100-a[1])/b)*this.minScaleDenominatorLimit)]},scaleToSliderValues:function(a){var b=100/(this.scaleLevels-1);return[100-b*Math.log(a[0]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor),100-b*Math.log(a[1]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor)]}});Ext.reg("gxp_scalelimitpanel",gxp.ScaleLimitPanel);Ext.namespace("gxp.plugins");
gxp.plugins.WMSFilterView=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsfilterview",featureManager:null,init:function(){gxp.plugins.WMSFilterView.superclass.init.apply(this,arguments);this.createFilterLayer()},createFilterLayer:function(){this.filterLayer=new OpenLayers.Layer.WMS(this.id+"filterlayer",Ext.BLANK_IMAGE_URL,{format:"image/png",transparent:!0},{buffer:0,displayInLayerSwitcher:!1,tileOptions:{maxGetUrlLength:2048}});var a=this.target.mapPanel.map;a.addLayer(this.filterLayer);a.events.on({addlayer:this.raiseLayer,
scope:this});var b=this.target.tools[this.featureManager],c=new OpenLayers.Format.SLD,a=function(){this.filterLayer.setUrl(Ext.BLANK_IMAGE_URL);this.filterLayer.setVisibility(!1)}.bind(this);b.on({clearfeatures:a,beforelayerchange:a,beforequery:function(){this.filterLayer.setUrl(Ext.BLANK_IMAGE_URL);this.filterLayer.setVisibility(!1)},query:function(a,e,f){if(f){var e=new OpenLayers.Rule,g=b.geometryType.replace(/^Multi/,""),h=b.style.all.rules[0].symbolizer;e.symbolizer[g]=Ext.applyIf(Ext.apply({},
h[g]||h),OpenLayers.Feature.Vector.style["default"]);e=new OpenLayers.Style(null,{rules:[e]});this.filterLayer.setUrl(a.layerRecord.getLayer().url);if(f instanceof OpenLayers.Filter.Logical){a=f.filters;for(g=a.length-1;g>=0;--g)a[g].type===OpenLayers.Filter.Spatial.BBOX&&a.remove(a[g]);a.length==1&&f.type!==OpenLayers.Filter.Comparison.NOT?f=a[0]:a.length==0&&(f=null)}else f.type===OpenLayers.Filter.Spatial.BBOX&&(f=null);a={};if(f)f instanceof OpenLayers.Filter.FeatureId?a.featureid=f.fids:a.cql_filter=
(new OpenLayers.Format.CQL).write(f);this.filterLayer.mergeNewParams(Ext.apply(a,{sld_body:c.write({namedLayers:[{name:b.layerRecord.get("name"),userStyles:[e]}]}).replace(/( (xmlns|xsi):[^\"]*\"[^\"]*"|sld:)/g,"")}));this.filterLayer.setVisibility(!0)}},scope:this})},raiseLayer:function(){var a=this.filterLayer.map;a.setLayerIndex(this.filterLayer,a.layers.length)}});Ext.preg(gxp.plugins.WMSFilterView.prototype.ptype,gxp.plugins.WMSFilterView);Ext.namespace("gxp.plugins");
gxp.plugins.Navigation=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigation",menuText:"Pan Map",tooltip:"Pan Map",constructor:function(){gxp.plugins.Navigation.superclass.constructor.apply(this,arguments)},addActions:function(){this.controlOptions=this.controlOptions||{};Ext.applyIf(this.controlOptions,{zoomWheelEnabled:!1});var a=[new GeoExt.Action({tooltip:this.tooltip,menuText:this.menuText,iconCls:"gxp-icon-pan",enableToggle:!0,pressed:!0,allowDepress:!1,control:new OpenLayers.Control.Navigation(this.controlOptions),
map:this.target.mapPanel.map,toggleGroup:this.toggleGroup})];return gxp.plugins.Navigation.superclass.addActions.apply(this,[a])}});Ext.preg(gxp.plugins.Navigation.prototype.ptype,gxp.plugins.Navigation);Ext.namespace("gxp.menu");
gxp.menu.LayerMenu=Ext.extend(Ext.menu.Menu,{layerText:"Layer",layers:null,initComponent:function(){gxp.menu.LayerMenu.superclass.initComponent.apply(this,arguments);this.layers.on("add",this.onLayerAdd,this);this.onLayerAdd()},onRender:function(){gxp.menu.LayerMenu.superclass.onRender.apply(this,arguments)},beforeDestroy:function(){this.layers&&this.layers.on&&this.layers.un("add",this.onLayerAdd,this);delete this.layers;gxp.menu.LayerMenu.superclass.beforeDestroy.apply(this,arguments)},onLayerAdd:function(){this.removeAll();
this.add({iconCls:"gxp-layer-visibility",text:this.layerText,canActivate:!1},"-");this.layers.each(function(a){if(a.getLayer().displayInLayerSwitcher){var b=new Ext.menu.CheckItem({text:a.get("title"),checked:a.getLayer().getVisibility(),group:a.get("group"),listeners:{checkchange:function(b,d){a.getLayer().setVisibility(d)}}});this.items.getCount()>2?this.insert(2,b):this.add(b)}},this)}});Ext.reg("gxp_layermenu",gxp.menu.LayerMenu);Ext.namespace("gxp.form");
gxp.form.ComparisonComboBox=Ext.extend(Ext.form.ComboBox,{allowedTypes:[[OpenLayers.Filter.Comparison.EQUAL_TO,"="],[OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<>"],[OpenLayers.Filter.Comparison.LESS_THAN,"<"],[OpenLayers.Filter.Comparison.GREATER_THAN,">"],[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,"<="],[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,">="],[OpenLayers.Filter.Comparison.LIKE,"like"],[OpenLayers.Filter.Comparison.BETWEEN,"between"]],allowBlank:!1,mode:"local",typeAhead:!0,
forceSelection:!0,triggerAction:"all",width:50,editable:!0,initComponent:function(){var a={displayField:"name",valueField:"value",store:new Ext.data.SimpleStore({data:this.allowedTypes,fields:["value","name"]}),value:this.value===void 0?this.allowedTypes[0][0]:this.value,listeners:{blur:function(){var a=this.store.findExact("value",this.getValue());a!=-1?this.fireEvent("select",this,this.store.getAt(a)):this.startValue!=null&&this.setValue(this.startValue)}}};Ext.applyIf(this,a);gxp.form.ComparisonComboBox.superclass.initComponent.call(this)}});
Ext.reg("gxp_comparisoncombo",gxp.form.ComparisonComboBox);Ext.namespace("gxp.form");
gxp.form.ColorField=Ext.extend(Ext.form.TextField,{cssColors:{aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},defaultBackground:"#ffffff",initComponent:function(){if(this.value)this.value=this.hexToColor(this.value);gxp.form.ColorField.superclass.initComponent.call(this);this.on({render:this.colorField,
valid:this.colorField,scope:this})},isDark:function(a){var b=!1;if(a)var b=parseInt(a.substring(1,3),16)/255,c=parseInt(a.substring(3,5),16)/255,a=parseInt(a.substring(5,7),16)/255,b=b*0.299+c*0.587+a*0.144<0.5;return b},colorField:function(){var a=this.colorToHex(this.getValue())||this.defaultBackground;this.getEl().setStyle({background:a,color:this.isDark(a)?"#ffffff":"#000000"})},getHexValue:function(){return this.colorToHex(gxp.form.ColorField.superclass.getValue.apply(this,arguments))},getValue:function(){var a=
this.getHexValue(),b=this.initialConfig.value;a===this.hexToColor(b)&&(a=b);return a},setValue:function(a){gxp.form.ColorField.superclass.setValue.apply(this,[this.hexToColor(a)])},colorToHex:function(a){if(!a)return a;return a.match(/^#[0-9a-f]{6}$/i)?a:this.cssColors[a.toLowerCase()]||null},hexToColor:function(a){if(!a)return a;for(var b in this.cssColors)if(this.cssColors[b]==a.toUpperCase()){a=b;break}return a}});Ext.reg("gxp_colorfield",gxp.form.ColorField);Ext.namespace("gxp.plugins");
gxp.plugins.StyleWriter=Ext.extend(Ext.util.Observable,{deletedStyles:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.deletedStyles=[];gxp.plugins.StyleWriter.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;a.stylesStore.on({remove:function(a,c){var d=c.get("name");c.get("name")===d&&this.deletedStyles.push(d)},scope:this});a.on({beforesaved:this.write,scope:this})},write:function(a){a.stylesStore.commitChanges();a.fireEvent("saved",a,a.selectedStyle.get("name"))}});
Ext.namespace("gxp.plugins");
gxp.plugins.FeatureGrid=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featuregrid",schema:null,showTotalResults:!1,alwaysDisplayOnMap:!1,displayMode:"all",autoExpand:!1,autoCollapse:!1,selectOnMap:!1,displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",totalMsg:"Total: {0} records",displayTotalResults:function(){var a=this.target.tools[this.featureManager];this.showTotalResults===
!0&&a.numberOfFeatures!==null&&this.displayItem.setText(String.format(this.totalMsg,a.numberOfFeatures))},addOutput:function(a){var b=this.target.tools[this.featureManager],c=this.target.mapPanel.map,d;this.selectControl=new OpenLayers.Control.SelectFeature(b.featureLayer);if(this.selectOnMap){if(b.paging)this.selectControl.events.on({activate:function(){c.events.register("click",this,this.noFeatureClick)},deactivate:function(){c.events.unregister("click",this,this.noFeatureClick)},scope:this});c.addControl(this.selectControl);
d={selectControl:this.selectControl}}else d={selectControl:this.selectControl,singleSelect:!1,autoActivateControl:!1,listeners:{beforerowselect:function(){if(this.selectControl.active||b.featureStore.getModifiedRecords().length)return!1},scope:this}};this.displayItem=new Ext.Toolbar.TextItem({});var a=Ext.apply({xtype:"gxp_featuregrid",sm:new GeoExt.grid.FeatureSelectionModel(d),autoScroll:!0,bbar:(b.paging?[{iconCls:"x-tbar-page-first",ref:"../firstPageButton",tooltip:this.firstPageTip,disabled:!0,
handler:function(){b.setPage({index:0})}},{iconCls:"x-tbar-page-prev",ref:"../prevPageButton",tooltip:this.previousPageTip,disabled:!0,handler:function(){b.previousPage()}},{iconCls:"gxp-icon-zoom-to",ref:"../zoomToPageButton",tooltip:this.zoomPageExtentTip,disabled:!0,hidden:b.autoZoomPage,handler:function(){c.zoomToExtent(b.getPageExtent())}},{iconCls:"x-tbar-page-next",ref:"../nextPageButton",tooltip:this.nextPageTip,disabled:!0,handler:function(){b.nextPage()}},{iconCls:"x-tbar-page-last",ref:"../lastPageButton",
tooltip:this.lastPageTip,disabled:!0,handler:function(){b.setPage({index:"last"})}},{xtype:"tbspacer",width:10},this.displayItem]:[]).concat(["->"].concat(!this.alwaysDisplayOnMap?[{text:this.displayFeatureText,enableToggle:!0,toggleHandler:function(a,c){this.selectOnMap&&this.selectControl[c?"activate":"deactivate"]();b[c?"showLayer":"hideLayer"](this.id,this.displayMode)},scope:this}]:[])),listeners:{added:function(a,c){var d=function(){this.displayTotalResults();this.selectOnMap&&this.selectControl.deactivate();
this.autoCollapse&&typeof c.collapse=="function"&&c.collapse()}.bind(this),e=function(){this.displayTotalResults();this.selectOnMap&&this.selectControl.activate();this.autoExpand&&typeof c.expand=="function"&&c.expand()}.bind(this);b.on({query:function(a,b){b&&b.getCount()?e():d()},layerchange:d,clearfeatures:d})},contextmenu:function(a){if(e.contextMenu.items.getCount()>0){var b=e.getView().findRowIndex(a.getTarget());b!==!1&&(e.getSelectionModel().selectRow(b),e.contextMenu.showAt(a.getXY()),a.stopEvent())}},
scope:this},contextMenu:new Ext.menu.Menu({items:[]})},a||{}),e=gxp.plugins.FeatureGrid.superclass.addOutput.call(this,a);(this.alwaysDisplayOnMap||this.selectOnMap)&&b.showLayer(this.id,this.displayMode);b.paging&&b.on({beforesetpage:function(){e.zoomToPageButton.disable()},setpage:function(a,b,c,d,k,l){a=l>0;e.zoomToPageButton.setDisabled(!a);b=a&&k!==0;e.firstPageButton.setDisabled(!b);e.prevPageButton.setDisabled(!b);k=a&&k!==l-1;e.lastPageButton.setDisabled(!k);e.nextPageButton.setDisabled(!k)},
scope:this});b.on("layerchange",function(a,c,d){var j=["feature","state","fid"];d&&d.each(function(a){a.get("type").indexOf("gml:")==0&&j.push(a.get("name"))});e.ignoreFields=j;e.setStore(b.featureStore,d)},this);return e}});Ext.preg(gxp.plugins.FeatureGrid.prototype.ptype,gxp.plugins.FeatureGrid);Ext.namespace("gxp");
gxp.LineSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.LineSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_linesymbolizer",gxp.LineSymbolizer);Ext.namespace("gxp.plugins");
gxp.plugins.GoogleEarth=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_googleearth",timeout:7E3,apiKeyPrompt:"Please enter the Google API key for ",menuText:"3D Viewer",tooltip:"Switch to 3D Viewer",constructor:function(){gxp.plugins.GoogleEarth.superclass.constructor.apply(this,arguments)},addActions:function(){var a=[{menuText:this.menuText,enableToggle:!0,iconCls:"gxp-icon-googleearth",tooltip:this.tooltip,toggleHandler:function(a,b){a.toggle(!1,!0);this.togglePanelDisplay(b)},scope:this}],b=this.target.mapPanel.ownerCt,
c=b&&b.getLayout();if(c&&c instanceof Ext.layout.CardLayout)b.get(1).on({pluginfailure:function(){delete this.initialConfig.apiKey;gxp.plugins.GoogleEarth.loader.unload()},scope:this});return gxp.plugins.GoogleEarth.superclass.addActions.apply(this,[a])},togglePanelDisplay:function(a){var b=this.target.mapPanel.ownerCt,c=b&&b.getLayout();c&&c instanceof Ext.layout.CardLayout&&(a===!0?this.getAPIKey(function(a){this.initialConfig.apiKey=a;gxp.plugins.GoogleEarth.loader.onLoad({apiKey:this.initialConfig.apiKey,
callback:function(){c.setActiveItem(1);this.actions[0].enable();this.actions[0].each(function(a){a.toggle&&a.toggle(!0,!0)})},scope:this})}):c.setActiveItem(0))},getAPIKey:function(a){var b=this.initialConfig.apiKey,c=this.initialConfig.apiKeys;if(!b&&c){var d=this.getHost(),e=/:\d+$/,f,g;for(g in c)if(f=e.test(g)?g:g+":80",RegExp("^(.*\\.)?"+f+"$","i").test(d)){b=c[g];break}}b?window.setTimeout(function(){a.call(this,b)}.createDelegate(this),0):Ext.Msg.prompt("Google API Key",this.apiKeyPrompt+window.location.hostname+
" <sup><a target='_blank' href='http://code.google.com/apis/earth/'>?</a></sup>",function(b,c){b==="ok"&&a.call(this,c)},this)},getHost:function(){return window.location.host.split(":").shift()+":"+(window.location.port||"80")}});
gxp.plugins.GoogleEarth.loader=new (Ext.extend(Ext.util.Observable,{ready:!(!window.google||!window.google.earth),loading:!1,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var a=gxp.plugins.GoogleEarth.loader;if(!a.ready)a.ready=!0,a.loading=!1,a.fireEvent("ready")},onLoad:function(a){if(this.ready)window.setTimeout(function(){a.callback.call(a.scope)},0);else if(this.loading)this.on({ready:a.callback,
failure:a.errback||Ext.emptyFn,scope:a.scope});else this.loadScript(a)},loadScript:function(a){window.google&&delete google.loader;var b={key:a.apiKey,autoload:Ext.encode({modules:[{name:"earth",version:"1",callback:"gxp.plugins.GoogleEarth.loader.onScriptLoad"}]})},c=document.createElement("script");c.src="http://www.google.com/jsapi?"+Ext.urlEncode(b);b=a.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout(function(){gxp.plugins.GoogleEarth.loader.ready||(this.fireEvent("failure"),
this.unload())}.createDelegate(this),b);this.on({ready:a.callback,failure:a.errback||Ext.emptyFn,scope:a.scope});this.loading=!0;document.getElementsByTagName("head")[0].appendChild(c);this.script=c},unload:function(){this.purgeListeners();this.script&&(document.getElementsByTagName("head")[0].removeChild(this.script),delete this.script);this.ready=this.loading=!1;delete google.loader;delete google.earth}}));Ext.preg(gxp.plugins.GoogleEarth.prototype.ptype,gxp.plugins.GoogleEarth);Ext.namespace("gxp.plugins");
gxp.plugins.OSMSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_osmsource",title:"OpenStreetMap Layers",mapnikAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>",createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-2.00375083392E7,-2.00375083392E7,2.00375083392E7,2.00375083392E7),maxResolution:156543.03390625,
numZoomLevels:19,units:"m",buffer:1},a=[new OpenLayers.Layer.OSM("OpenStreetMap",["http://a.tile.openstreetmap.org/${z}/${x}/${y}.png","http://b.tile.openstreetmap.org/${z}/${x}/${y}.png","http://c.tile.openstreetmap.org/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.mapnikAttribution,type:"mapnik"},a)),new OpenLayers.Layer.OSM("Tiles@home",["http://a.tah.openstreetmap.org/Tiles/tile/${z}/${x}/${y}.png","http://b.tah.openstreetmap.org/Tiles/tile/${z}/${x}/${y}.png","http://c.tah.openstreetmap.org/Tiles/tile/${z}/${x}/${y}.png"],
OpenLayers.Util.applyDefaults({attribution:this.osmarenderAttribution,type:"osmarender"},a))];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:!0},{name:"selected",type:"boolean"}]});this.store.each(function(a){a.set("group","background")});this.fireEvent("ready",this)},
createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();a.title&&(c.setName(a.title),b.set("title",a.title));if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||!1);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.OSMSource.prototype.ptype,gxp.plugins.OSMSource);Ext.namespace("gxp");
gxp.RulePanel=Ext.extend(Ext.TabPanel,{fonts:void 0,symbolType:"Point",rule:null,attributes:null,nestedFilters:!0,minScaleDenominatorLimit:Math.pow(0.5,19)*1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,maxScaleDenominatorLimit:1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",
limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name",initComponent:function(){Ext.applyIf(this,{plain:!0,border:!1});if(this.rule){if(!this.initialConfig.symbolType)this.symbolType=this.getSymbolTypeFromRule(this.rule)||this.symbolType}else this.rule=new OpenLayers.Rule({name:this.uniqueRuleName()});this.activeTab=0;this.textSymbolizer=new gxp.TextSymbolizer({symbolizer:this.getTextSymbolizer(),attributes:this.attributes,fonts:this.fonts,listeners:{change:function(){this.fireEvent("change",
this,this.rule)},scope:this}});this.scaleLimitPanel=new gxp.ScaleLimitPanel({maxScaleDenominator:this.rule.maxScaleDenominator||void 0,limitMaxScaleDenominator:!!this.rule.maxScaleDenominator,maxScaleDenominatorLimit:this.maxScaleDenominatorLimit,minScaleDenominator:this.rule.minScaleDenominator||void 0,limitMinScaleDenominator:!!this.rule.minScaleDenominator,minScaleDenominatorLimit:this.minScaleDenominatorLimit,scaleLevels:this.scaleLevels,scaleSliderTemplate:this.scaleSliderTemplate,modifyScaleTipContext:this.modifyScaleTipContext,
listeners:{change:function(a,b,c){this.rule.minScaleDenominator=b;this.rule.maxScaleDenominator=c;this.fireEvent("change",this,this.rule)},scope:this}});this.filterBuilder=new gxp.FilterBuilder({allowGroups:this.nestedFilters,filter:this.rule&&this.rule.filter&&this.rule.filter.clone(),attributes:this.attributes,listeners:{change:function(a){this.rule.filter=a.getFilter();this.fireEvent("change",this,this.rule)},scope:this}});this.items=[{title:this.labelsText,autoScroll:!0,bodyStyle:{padding:"10px"},
items:[{xtype:"fieldset",title:this.labelFeaturesText,autoHeight:!0,checkboxToggle:!0,collapsed:!this.hasTextSymbolizer(),items:[this.textSymbolizer],listeners:{collapse:function(){OpenLayers.Util.removeItem(this.rule.symbolizers,this.getTextSymbolizer());this.fireEvent("change",this,this.rule)},expand:function(){this.setTextSymbolizer(this.textSymbolizer.symbolizer);this.fireEvent("change",this,this.rule)},scope:this}}]}];if(this.getSymbolTypeFromRule(this.rule)||this.symbolType)this.items=[{title:this.basicText,
autoScroll:!0,items:[this.createHeaderPanel(),this.createSymbolizerPanel()]},this.items[0],{title:this.advancedText,defaults:{style:{margin:"7px"}},autoScroll:!0,items:[{xtype:"fieldset",title:this.limitByScaleText,checkboxToggle:!0,collapsed:!(this.rule&&(this.rule.minScaleDenominator||this.rule.maxScaleDenominator)),autoHeight:!0,items:[this.scaleLimitPanel],listeners:{collapse:function(){delete this.rule.minScaleDenominator;delete this.rule.maxScaleDenominator;this.fireEvent("change",this,this.rule)},
expand:function(){var a=this.getActiveTab();this.activeTab=null;this.setActiveTab(a);a=!1;if(this.scaleLimitPanel.limitMinScaleDenominator)this.rule.minScaleDenominator=this.scaleLimitPanel.minScaleDenominator,a=!0;if(this.scaleLimitPanel.limitMaxScaleDenominator)this.rule.maxScaleDenominator=this.scaleLimitPanel.maxScaleDenominator,a=!0;a&&this.fireEvent("change",this,this.rule)},scope:this}},{xtype:"fieldset",title:this.limitByConditionText,checkboxToggle:!0,collapsed:!(this.rule&&this.rule.filter),
autoHeight:!0,items:[this.filterBuilder],listeners:{collapse:function(){delete this.rule.filter;this.fireEvent("change",this,this.rule)},expand:function(){this.rule.filter=this.filterBuilder.getFilter();this.fireEvent("change",this,this.rule)},scope:this}}]}];this.items[0].autoHeight=!0;this.addEvents("change");this.on({tabchange:function(a,b){b.doLayout()},scope:this});gxp.RulePanel.superclass.initComponent.call(this)},hasTextSymbolizer:function(){for(var a,b,c=0,d=this.rule.symbolizers.length;c<
d;++c)if(a=this.rule.symbolizers[c],a instanceof OpenLayers.Symbolizer.Text){b=a;break}return b},getTextSymbolizer:function(){var a=this.hasTextSymbolizer();a||(a=new OpenLayers.Symbolizer.Text);return a},setTextSymbolizer:function(a){for(var b,c=0,d=this.rule.symbolizers.length;c<d;++c)if(candidate=this.rule.symbolizers[c],this.rule.symbolizers[c]instanceof OpenLayers.Symbolizer.Text){this.rule.symbolizers[c]=a;b=!0;break}b||this.rule.symbolizers.push(a)},uniqueRuleName:function(){return OpenLayers.Util.createUniqueID("rule_")},
createHeaderPanel:function(){this.symbolizerSwatch=new GeoExt.FeatureRenderer({symbolType:this.symbolType,isFormField:!0,fieldLabel:this.symbolText});return{xtype:"form",border:!1,labelAlign:"top",defaults:{border:!1},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:!1,style:{"padding-right":"1em"}},items:[{layout:"form",width:150,items:[{xtype:"textfield",fieldLabel:this.nameText,anchor:"95%",value:this.rule&&(this.rule.title||this.rule.name||""),listeners:{change:function(a,
b){this.rule.title=b;this.fireEvent("change",this,this.rule)},scope:this}}]},{layout:"form",width:70,items:[this.symbolizerSwatch]}]}]}},createSymbolizerPanel:function(){var a,b,c=OpenLayers.Symbolizer[this.symbolType],d=!1;if(c){for(var e=0,f=this.rule.symbolizers.length;e<f;++e)if(a=this.rule.symbolizers[e],a instanceof c){d=!0;b=a;break}b||(b=new c({fill:!1,stroke:!1}))}else throw Error("Appropriate symbolizer type not included in build: "+this.symbolType);this.symbolizerSwatch.setSymbolizers([b],
{draw:this.symbolizerSwatch.rendered});a={xtype:"gxp_"+this.symbolType.toLowerCase()+"symbolizer",symbolizer:b,bodyStyle:{padding:"10px"},border:!1,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(a){this.symbolizerSwatch.setSymbolizers([a],{draw:this.symbolizerSwatch.rendered});d||(this.rule.symbolizers.push(a),d=!0);this.fireEvent("change",this,this.rule)},scope:this}};if(this.symbolType==="Point"&&this.pointGraphics)a.pointGraphics=this.pointGraphics;return a},getSymbolTypeFromRule:function(a){for(var b,
c,d=0,e=a.symbolizers.length;d<e;++d)if(b=a.symbolizers[d],!(b instanceof OpenLayers.Symbolizer.Text)){c=b.CLASS_NAME.split(".").pop();break}return c}});Ext.reg("gxp_rulepanel",gxp.RulePanel);Ext.namespace("gxp.slider");
gxp.slider.Tip=Ext.extend(Ext.slider.Tip,{hover:!0,dragging:!1,init:function(a){if(this.hover)a.on("render",this.registerThumbListeners,this);this.slider=a;gxp.slider.Tip.superclass.init.apply(this,arguments)},registerThumbListeners:function(){for(var a=0,b=this.slider.thumbs.length;a<b;++a)this.slider.thumbs[a].el.on({mouseover:this.createHoverListener(a),mouseout:function(){this.dragging||this.hide.apply(this,arguments)},scope:this})},createHoverListener:function(a){return function(){this.onSlide(this.slider,
{},this.slider.thumbs[a]);this.dragging=!1}.createDelegate(this)},onSlide:function(){this.dragging=!0;gxp.slider.Tip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("gxp.plugins");
gxp.plugins.DeleteSelectedFeatures=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_deleteselectedfeatures",deleteMsgTitle:"Delete",deleteFeaturesMsg:"Are you sure you want to delete {0} selected features?",deleteFeatureMsg:"Are you sure you want to delete the selected feature?",menuText:"Delete selected features",tooltip:"Delete the currently selected features",iconCls:"delete",addActions:function(){var a=gxp.plugins.DeleteSelectedFeatures.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,
iconCls:this.iconCls,tooltip:this.tooltip,handler:this.deleteFeatures,scope:this}]);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featureselected:function(){a[0].isDisabled()&&a[0].enable()},featureunselected:function(){b.selectedFeatures.length==0&&a[0].disable()}});return a},deleteFeatures:function(){var a=this.target.tools[this.featureManager],b=a.featureLayer.selectedFeatures;Ext.Msg.show({title:this.deleteMsgTitle,msg:b.length>1?String.format(this.deleteFeaturesMsg,
b.length):this.deleteFeatureMsg,buttons:Ext.Msg.YESNO,fn:function(c){if(c==="yes"){for(var c=a.featureStore,d,e=b.length-1;e>=0;--e){d=b[e];d.layer.selectedFeatures.remove(d);d.layer.events.triggerEvent("featureunselected",{feature:d});if(d.state!==OpenLayers.State.INSERT)d.state=OpenLayers.State.DELETE,c._removing=!0;c.remove(c.getRecordFromFeature(d));delete c._removing}c.save()}},scope:this,icon:Ext.MessageBox.QUESTION})}});Ext.preg(gxp.plugins.DeleteSelectedFeatures.prototype.ptype,gxp.plugins.DeleteSelectedFeatures);
Ext.namespace("gxp.plugins");
gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_googlesource",timeout:7E3,title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain",constructor:function(a){this.config=a;gxp.plugins.GoogleSource.superclass.constructor.apply(this,arguments)},createStore:function(){gxp.plugins.GoogleSource.loader.onLoad({timeout:this.timeout,callback:this.syncCreateStore,
errback:function(){delete this.store;this.fireEvent("failure",this,"The Google Maps script failed to load within the provided timeout ("+this.timeout/1E3+" s).")},scope:this})},syncCreateStore:function(){var a={ROADMAP:{"abstract":this.roadmapAbstract},SATELLITE:{"abstract":this.satelliteAbstract},HYBRID:{"abstract":this.hybridAbstract},TERRAIN:{"abstract":this.terrainAbstract}},b=[],c,d;for(c in a)d=google.maps.MapTypeId[c],b.push(new OpenLayers.Layer.GoogleNG({name:"Google "+d.replace(/\w/,function(a){return a.toUpperCase()}),
type:d,typeName:c,restrictedExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7),projection:this.projection}));this.store=new GeoExt.data.LayerStore({layers:b,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"typeName"},{name:"abstract",type:"string"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:!0},{name:"selected",type:"boolean"}]});this.store.each(function(b){b.set("abstract",a[b.get("name")]["abstract"])});
this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=function(b){return b.get("name")===a.name};if(this.target.mapPanel.layers.findBy(c)==-1){b=this.store.getAt(this.store.findBy(c)).clone();c=b.getLayer();a.title&&(c.setName(a.title),b.set("title",a.title));if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||!1);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.commit()}return b}});
gxp.plugins.GoogleSource.loader=new (Ext.extend(Ext.util.Observable,{ready:!(!window.google||!google.maps),loading:!1,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var a=gxp.plugins.GoogleSource.loader;if(!a.ready)a.ready=!0,a.loading=!1,a.fireEvent("ready")},onLoad:function(a){if(this.ready)window.setTimeout(function(){a.callback.call(a.scope)},0);else if(this.loading)this.on({ready:a.callback,
failure:a.errback||Ext.emptyFn,scope:a.scope});else this.loadScript(a)},loadScript:function(a){var b={autoload:Ext.encode({modules:[{name:"maps",version:3.3,nocss:"true",callback:"gxp.plugins.GoogleSource.loader.onScriptLoad",other_params:"sensor=false"}]})},c=document.createElement("script");c.src="http://www.google.com/jsapi?"+Ext.urlEncode(b);var d=a.errback||Ext.emptyFn,b=a.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout(function(){if(!gxp.plugins.GoogleSource.loader.ready)this.ready=
this.loading=!1,document.getElementsByTagName("head")[0].removeChild(c),d.call(a.scope),this.fireEvent("failure"),this.purgeListeners()}.createDelegate(this),b);this.on({ready:a.callback,scope:a.scope});this.loading=!0;document.getElementsByTagName("head")[0].appendChild(c)}}));Ext.preg(gxp.plugins.GoogleSource.prototype.ptype,gxp.plugins.GoogleSource);Ext.namespace("gxp");
gxp.FeatureEditPopup=Ext.extend(GeoExt.Popup,{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes",
layout:"fit",feature:null,schema:null,readOnly:!1,allowDelete:!1,editing:!1,grid:null,modifyControl:null,geometry:null,attributes:null,cancelButton:null,saveButton:null,editButton:null,deleteButton:null,initComponent:function(){this.addEvents("featuremodified","canceledit","cancelclose");if(!this.dateFormat)this.dateFormat=Ext.form.DateField.prototype.format;if(!this.timeFormat)this.timeFormat=Ext.form.TimeField.prototype.format;var a=this.feature;if(!this.location)this.location=a;this.anchored=!this.editing;
var b={},c={};if(this.schema){var d={};if(this.fields){if(!this.excludeFields)this.excludeFields=[];for(var e=0,f=this.fields.length;e<f;++e)d[this.fields[e]]=null}var g=this.fields?this.fields.join(",").toUpperCase().split(","):[];this.schema.each(function(e){var f=e.get("type");if(!f.match(/^[^:]*:?((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry))/)){var h=e.get("name");this.fields&&g.indexOf(h.toUpperCase())==-1&&this.excludeFields.push(h);var p=a.attributes[h],e=GeoExt.form.recordToField(e),
n;if(typeof p=="string"){var m;switch(f.split(":").pop()){case "date":m=this.dateFormat;e.editable=!1;break;case "dateTime":if(!m)m=this.dateFormat+" "+this.timeFormat,e.editable=!0;e.format=m;n={startedit:function(a,b){if(!(b instanceof Date)){var c=Date.parseDate(b.replace(/Z$/,""),"c");c&&this.setValue(c)}}};c[h]=function(){return function(a){var b=a;typeof a=="string"&&(b=Date.parseDate(a.replace(/Z$/,""),"c"));return b?b.format(m):a}}();break;case "boolean":n={startedit:function(a,b){this.setValue(Boolean(b))}}}}b[h]=
new Ext.grid.GridEditor({field:Ext.create(e),listeners:n});d[h]=p}},this);a.attributes=d}if(!this.title&&a.fid)this.title=a.fid;this.editButton=new Ext.Button({text:this.editButtonText,tooltip:this.editButtonTooltip,iconCls:"edit",handler:this.startEditing,scope:this});this.deleteButton=new Ext.Button({text:this.deleteButtonText,tooltip:this.deleteButtonTooltip,iconCls:"delete",hidden:!this.allowDelete,handler:this.deleteFeature,scope:this});this.cancelButton=new Ext.Button({text:this.cancelButtonText,
tooltip:this.cancelButtonTooltip,iconCls:"cancel",hidden:!0,handler:function(){this.stopEditing(!1)},scope:this});this.saveButton=new Ext.Button({text:this.saveButtonText,tooltip:this.saveButtonTooltip,iconCls:"save",hidden:!0,handler:function(){this.stopEditing(!0)},scope:this});var h=this.excludeFields?this.excludeFields.join(",").toUpperCase().split(","):[];this.grid=new Ext.grid.PropertyGrid({border:!1,source:a.attributes,customEditors:b,customRenderers:c,propertyNames:this.propertyNames,viewConfig:{forceFit:!0,
getRowClass:function(a){if(h.indexOf(a.get("name").toUpperCase())!==-1)return"x-hide-nosize"}},listeners:{beforeedit:function(){return this.editing},propertychange:function(){this.setFeatureState(this.getDirtyState())},scope:this},initComponent:function(){var a=Ext.data.Store.prototype.sort;Ext.data.Store.prototype.sort=function(){};Ext.grid.PropertyGrid.prototype.initComponent.apply(this,arguments);Ext.data.Store.prototype.sort=a}});this.grid.propStore.isEditableValue=function(){return!0};this.items=
[this.grid];this.bbar=new Ext.Toolbar({hidden:this.readOnly,items:[this.editButton,this.deleteButton,this.saveButton,this.cancelButton]});gxp.FeatureEditPopup.superclass.initComponent.call(this);this.on({show:function(){if(this.editing)this.editing=null,this.startEditing()},beforeclose:function(){if(this.editing)if(this.feature.state===this.getDirtyState())return Ext.Msg.show({title:this.closeMsgTitle,msg:this.closeMsg,buttons:Ext.Msg.YESNOCANCEL,fn:function(a){a&&a!=="cancel"?(this.stopEditing(a===
"yes"),this.close()):this.fireEvent("cancelclose",this)},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()}),!1;else this.stopEditing(!1)},scope:this})},getDirtyState:function(){return this.feature.state===OpenLayers.State.INSERT?this.feature.state:OpenLayers.State.UPDATE},startEditing:function(){if(!this.editing)this.editing=!0,this.anc&&this.unanchorPopup(),this.editButton.hide(),this.deleteButton.hide(),this.saveButton.show(),this.cancelButton.show(),this.geometry=this.feature.geometry.clone(),
this.attributes=Ext.apply({},this.feature.attributes),this.modifyControl=new OpenLayers.Control.ModifyFeature(this.feature.layer,{standalone:!0,vertexRenderIntent:this.vertexRenderIntent}),this.feature.layer.map.addControl(this.modifyControl),this.modifyControl.activate(),this.modifyControl.selectFeature(this.feature)},stopEditing:function(a){if(this.editing){this.modifyControl.deactivate();this.modifyControl.destroy();var b=this.feature;if(b.state===this.getDirtyState())if(a===!0){if(this.schema){var c,
d;for(d in b.attributes)c=this.schema.getAt(this.schema.findExact("name",d)),a=b.attributes[d],a instanceof Date&&(c=c.get("type").split(":").pop(),b.attributes[d]=a.format(c=="date"?"Y-m-d":"c"))}this.fireEvent("featuremodified",this,b)}else b.state===OpenLayers.State.INSERT?(this.editing=!1,b.layer.destroyFeatures([b]),this.fireEvent("canceledit",this,null),this.close()):(d=b.layer,d.drawFeature(b,{display:"none"}),b.geometry=this.geometry,b.attributes=this.attributes,this.setFeatureState(null),
this.grid.setSource(b.attributes),d.drawFeature(b),this.fireEvent("canceledit",this,b));this.isDestroyed||(this.cancelButton.hide(),this.saveButton.hide(),this.editButton.show(),this.allowDelete&&this.deleteButton.show());this.editing=!1}},deleteFeature:function(){Ext.Msg.show({title:this.deleteMsgTitle,msg:this.deleteMsg,buttons:Ext.Msg.YESNO,fn:function(a){a==="yes"&&(this.setFeatureState(OpenLayers.State.DELETE),this.fireEvent("featuremodified",this,this.feature),this.close())},scope:this,icon:Ext.MessageBox.QUESTION,
animEl:this.getEl()})},setFeatureState:function(a){this.feature.state=a;(a=this.feature.layer)&&a.events.triggerEvent("featuremodified",{feature:this.feature})}});Ext.reg("gxp_featureeditpopup",gxp.FeatureEditPopup);Ext.namespace("gxp.grid");
gxp.grid.FeatureGrid=Ext.extend(Ext.grid.GridPanel,{map:null,ignoreFields:null,layer:null,initComponent:function(){this.ignoreFields=["feature","state","fid"].concat(this.ignoreFields);if(this.store){if(this.cm=this.createColumnModel(this.store),this.map)this.layer=new OpenLayers.Layer.Vector(this.id+"_layer"),this.map.addLayer(this.layer)}else this.store=new Ext.data.Store,this.cm=new Ext.grid.ColumnModel({columns:[]});if(this.layer)this.sm=this.sm||new GeoExt.grid.FeatureSelectionModel({layerFromStore:!1,
layer:this.layer}),this.store instanceof GeoExt.data.FeatureStore&&this.store.bind(this.layer);if(!this.dateFormat)this.dateFormat=Ext.form.DateField.prototype.format;if(!this.timeFormat)this.timeFormat=Ext.form.TimeField.prototype.format;gxp.grid.FeatureGrid.superclass.initComponent.call(this)},onDestroy:function(){this.initialConfig&&this.initialConfig.map&&!this.initialConfig.layer&&(this.layer.destroy(),delete this.layer);gxp.grid.FeatureGrid.superclass.onDestroy.apply(this,arguments)},setStore:function(a,
b){if(b)this.schema=b;a?(this.store instanceof GeoExt.data.FeatureStore&&this.store.unbind(),this.layer&&(this.layer.destroyFeatures(),a.bind(this.layer)),this.reconfigure(a,this.createColumnModel(a))):this.reconfigure(new Ext.data.Store,new Ext.grid.ColumnModel({columns:[]}))},getColumns:function(a){function b(a){return function(b){var c=b;typeof b=="string"&&(c=Date.parseDate(b.replace(/Z$/,""),"c"));return c?c.format(a):b}}var c=[],d,e,f,g,h;(this.schema||a.fields).each(function(a){if(this.schema)switch(d=
a.get("name"),e=a.get("type").split(":").pop(),g=null,e){case "date":g=this.dateFormat;case "datetime":g=g?g:this.dateFormat+" "+this.timeFormat;f=void 0;h=b(g);break;case "boolean":f="booleancolumn";break;case "string":f="gridcolumn";break;default:f="numbercolumn"}else d=a.name;this.ignoreFields.indexOf(d)===-1&&c.push({dataIndex:d,header:this.propertyNames?this.propertyNames[d]||d:d,sortable:!0,xtype:f,format:g,renderer:f?void 0:h})},this);return c},createColumnModel:function(a){a=this.getColumns(a);
return new Ext.grid.ColumnModel(a)}});Ext.reg("gxp_featuregrid",gxp.grid.FeatureGrid);Ext.namespace("gxp");
gxp.FilterBuilder=Ext.extend(Ext.Container,{builderTypeNames:["any","all","none","not all"],allowedBuilderTypes:null,allowBlank:!1,preComboText:"Match",postComboText:"of the following:",cls:"gxp-filterbuilder",builderType:null,childFilterContainer:null,customizeFilterOnInit:!0,addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition",allowGroups:!0,initComponent:function(){Ext.applyIf(this,{defaultBuilderType:gxp.FilterBuilder.ANY_OF});if(this.customizeFilterOnInit)this.filter=
this.customizeFilter(this.filter);this.builderType=this.getBuilderType();this.items=[{xtype:"container",layout:"form",defaults:{anchor:"100%"},hideLabels:!0,items:[{xtype:"compositefield",style:"padding-left: 2px",items:[{xtype:"label",style:"padding-top: 0.3em",text:this.preComboText},this.createBuilderTypeCombo(),{xtype:"label",style:"padding-top: 0.3em",text:this.postComboText}]},this.createChildFiltersPanel(),{xtype:"toolbar",items:this.createToolBar()}]}];this.addEvents("change");gxp.FilterBuilder.superclass.initComponent.call(this)},
createToolBar:function(){var a=[{text:this.addConditionText,iconCls:"add",handler:function(){this.addCondition()},scope:this}];this.allowGroups&&a.push({text:this.addGroupText,iconCls:"add",handler:function(){this.addCondition(!0)},scope:this});return a},getFilter:function(){var a;this.filter&&(a=this.filter.clone(),a instanceof OpenLayers.Filter.Logical&&(a=this.cleanFilter(a)));return a},cleanFilter:function(a){if(a instanceof OpenLayers.Filter.Logical)if(a.type!==OpenLayers.Filter.Logical.NOT&&
a.filters.length===1)a=this.cleanFilter(a.filters[0]);else for(var b,c=0,d=a.filters.length;c<d;++c)if(b=a.filters[c],b instanceof OpenLayers.Filter.Logical)if(b=this.cleanFilter(b))a.filters[c]=b;else{a=b;break}else{if(!b||b.type===null||b.property===null||b[a.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null){a=!1;break}}else if(!a||a.type===null||a.property===null||a[a.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null)a=!1;return a},customizeFilter:function(a){if(a)switch(a=
this.cleanFilter(a),a.type){case OpenLayers.Filter.Logical.AND:case OpenLayers.Filter.Logical.OR:if(!a.filters||a.filters.length===0)a.filters=[this.createDefaultFilter()];else for(var b,c=0,d=a.filters.length;c<d;++c)b=a.filters[c],b instanceof OpenLayers.Filter.Logical&&(a.filters[c]=this.customizeFilter(b));a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[a]});break;case OpenLayers.Filter.Logical.NOT:if(!a.filters||a.filters.length===0)a.filters=[new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,
filters:[this.createDefaultFilter()]})];else if(b=a.filters[0],b instanceof OpenLayers.Filter.Logical)if(b.type!==OpenLayers.Filter.Logical.NOT)for(var e,c=0,d=b.filters.length;c<d;++c)e=b.filters[c],e instanceof OpenLayers.Filter.Logical&&(b.filters[c]=this.customizeFilter(e));else a=b.filters&&b.filters.length>0?this.customizeFilter(b.filters[0]):this.wrapFilter(this.createDefaultFilter());else a.filters=[new OpenLayers.Filter.Logical({type:this.defaultBuilderType===gxp.FilterBuilder.NOT_ALL_OF?
OpenLayers.Filter.Logical.AND:OpenLayers.Filter.Logical.OR,filters:[b]})];break;default:a=this.wrapFilter(a)}else a=this.wrapFilter(this.createDefaultFilter());return a},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison},wrapFilter:function(a){return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[new OpenLayers.Filter.Logical({type:this.defaultBuilderType===gxp.FilterBuilder.ALL_OF?OpenLayers.Filter.Logical.AND:OpenLayers.Filter.Logical.OR,filters:[a]})]})},
addCondition:function(a){var b,c;a?(c="gxp_filterbuilder",b=this.wrapFilter(this.createDefaultFilter())):(c="gxp_filterfield",b=this.createDefaultFilter());this.childFilterContainer.add(this.newRow({xtype:c,filter:b,columnWidth:1,attributes:this.attributes,allowBlank:a?void 0:this.allowBlank,customizeFilterOnInit:a&&!1,listeners:{change:function(){this.fireEvent("change",this)},scope:this}}));this.filter.filters[0].filters.push(b);this.childFilterContainer.doLayout()},removeCondition:function(a,b){var c=
this.filter.filters[0].filters;c.length>1&&(c.remove(b),this.childFilterContainer.remove(a,!0));this.fireEvent("change",this)},createBuilderTypeCombo:function(){for(var a=this.allowedBuilderTypes||[gxp.FilterBuilder.ANY_OF,gxp.FilterBuilder.ALL_OF,gxp.FilterBuilder.NONE_OF],b=a.length,c=Array(b),d,e=0;e<b;++e)d=a[e],c[e]=[d,this.builderTypeNames[d]];return{xtype:"combo",store:new Ext.data.SimpleStore({data:c,fields:["value","name"]}),value:this.builderType,displayField:"name",valueField:"value",triggerAction:"all",
mode:"local",listeners:{select:function(a,b){this.changeBuilderType(b.get("value"));this.fireEvent("change",this)},scope:this},width:60}},changeBuilderType:function(a){if(a!==this.builderType){this.builderType=a;var b=this.filter.filters[0];switch(a){case gxp.FilterBuilder.ANY_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.ALL_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.AND;break;case gxp.FilterBuilder.NONE_OF:this.filter.type=
OpenLayers.Filter.Logical.NOT;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.NOT_ALL_OF:this.filter.type=OpenLayers.Filter.Logical.NOT,b.type=OpenLayers.Filter.Logical.AND}}},createChildFiltersPanel:function(){this.childFilterContainer=new Ext.Container;for(var a=this.filter.filters[0].filters,b,c=0,d=a.length;c<d;++c){b=a[c];var e={xtype:"gxp_filterfield",allowBlank:this.allowBlank,columnWidth:1,filter:b,attributes:this.attributes,listeners:{change:function(){this.fireEvent("change",
this)},scope:this}};this.childFilterContainer.add(this.newRow(Ext.applyIf(b instanceof OpenLayers.Filter.Logical?{xtype:"gxp_filterbuilder"}:{xtype:"container",layout:"form",hideLabels:!0,items:e},e)))}return this.childFilterContainer},newRow:function(a){var b=new Ext.Container({layout:"column",items:[{xtype:"container",width:28,height:26,style:"padding-left: 2px",items:{xtype:"button",tooltip:this.removeConditionText,iconCls:"delete",handler:function(){this.removeCondition(b,a.filter)},scope:this}},
a]});return b},getBuilderType:function(){var a=this.defaultBuilderType;if(this.filter){var b=this.filter.filters[0];if(this.filter.type===OpenLayers.Filter.Logical.NOT)switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.NONE_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.NOT_ALL_OF}else switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.ANY_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.ALL_OF}}return a}});
gxp.FilterBuilder.ANY_OF=0;gxp.FilterBuilder.ALL_OF=1;gxp.FilterBuilder.NONE_OF=2;gxp.FilterBuilder.NOT_ALL_OF=3;Ext.reg("gxp_filterbuilder",gxp.FilterBuilder);Ext.namespace("gxp.plugins");
gxp.plugins.GeoServerStyleWriter=Ext.extend(gxp.plugins.StyleWriter,{baseUrl:"/geoserver/rest",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);gxp.plugins.GeoServerStyleWriter.superclass.constructor.apply(this,arguments)},write:function(a){var a=a||{},b=[],c=this.target.stylesStore;c.each(function(a){(a.phantom||c.modified.indexOf(a)!==-1)&&this.writeStyle(a,b)},this);var d=function(){this.deleteStyles();for(var b=this.target.stylesStore.getModifiedRecords(),c=b.length-1;c>=0;--c)b[c].phantom=
!1;b=this.target;b.stylesStore.commitChanges();a.success&&a.success.call(a.scope);b.fireEvent("saved",b,b.selectedStyle.get("name"))};b.length>0?gxp.util.dispatch(b,function(){this.assignStyles(a.defaultStyle,d)},this):this.assignStyles(a.defaultStyle,d)},writeStyle:function(a,b){var c=a.get("userStyle").name;b.push(function(b){Ext.Ajax.request({method:a.phantom===!0?"POST":"PUT",url:this.baseUrl+"/styles"+(a.phantom===!0?"":"/"+c+".xml"),headers:{"Content-Type":"application/vnd.ogc.sld+xml; charset=UTF-8"},
xmlData:this.target.createSLD({userStyles:[c]}),success:a.phantom===!0?function(){Ext.Ajax.request({method:"POST",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+"/styles.json",jsonData:{style:{name:c}},success:b,scope:this})}:b,scope:this})})},assignStyles:function(a,b){var c=[];this.target.stylesStore.each(function(b){!a&&b.get("userStyle").isDefault===!0&&(a=b.get("name"));b.get("name")!==a&&this.deletedStyles.indexOf(b.id)===-1&&c.push({name:b.get("name")})},this);Ext.Ajax.request({method:"PUT",
url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+".json",jsonData:{layer:{defaultStyle:{name:a},styles:c.length>0?{style:c}:{},enabled:!0}},success:b,scope:this})},deleteStyles:function(){for(var a=0,b=this.deletedStyles.length;a<b;++a)Ext.Ajax.request({method:"DELETE",url:this.baseUrl+"/styles/"+this.deletedStyles[a]+"?purge=true"});this.deletedStyles=[]}});Ext.preg("gxp_geoserverstylewriter",gxp.plugins.GeoServerStyleWriter);Ext.namespace("gxp.plugins");
gxp.plugins.QueryForm=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_queryform",featureManager:null,autoHide:!1,schema:null,queryActionText:"Query",cancelButtonText:"Cancel",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results.",outputAction:0,constructor:function(a){Ext.applyIf(a,
{actions:[{text:this.queryActionText,menuText:this.queryMenuText,iconCls:"gxp-icon-find",tooltip:this.queryActionTip,disabled:!0}]});gxp.plugins.QueryForm.superclass.constructor.apply(this,arguments)},addActions:function(){gxp.plugins.QueryForm.superclass.addActions.apply(this,arguments);if(this.actions)this.target.tools[this.featureManager].on("layerchange",function(a,b,c){for(a=this.actions.length-1;a>=0;--a)this.actions[a].setDisabled(!c)},this)},addOutput:function(a){var b=this.target.tools[this.featureManager],
a=Ext.apply({border:!1,bodyStyle:"padding: 10px",layout:"form",autoScroll:!0,items:[{xtype:"fieldset",ref:"spatialFieldset",title:this.queryByLocationText,checkboxToggle:!0,items:[{xtype:"textfield",ref:"../extent",anchor:"100%",fieldLabel:this.currentTextText,value:this.getFormattedMapExtent(),readOnly:!0}]},{xtype:"fieldset",ref:"attributeFieldset",title:this.queryByAttributesText,checkboxToggle:!0}],bbar:["->",{text:this.cancelButtonText,iconCls:"cancel",handler:function(){var a=this.outputTarget?
c.ownerCt:c.ownerCt.ownerCt;a&&a instanceof Ext.Window?a.hide():addAttributeFilter(b,b.layerRecord,featureManater.schema)}},{text:this.queryActionText,iconCls:"gxp-icon-find",handler:function(){var a=[];c.spatialFieldset.collapsed!==!0&&a.push(new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:b.featureStore.geometryName,value:this.target.mapPanel.map.getExtent()}));if(c.attributeFieldset.collapsed!==!0){var e=c.filterBuilder.getFilter();e&&a.push(e)}b.loadFeatures(a.length>
1?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:a}):a[0])},scope:this}]},a||{}),c=gxp.plugins.QueryForm.superclass.addOutput.call(this,a),a=function(a,b,f){c.attributeFieldset.removeAll();c.setDisabled(!f);f?(c.attributeFieldset.add({xtype:"gxp_filterbuilder",ref:"../filterBuilder",attributes:f,allowBlank:!0,allowGroups:!1}),c.spatialFieldset.expand(),c.attributeFieldset.expand()):(c.attributeFieldset.rendered&&c.attributeFieldset.collapse(),c.spatialFieldset.rendered&&
c.spatialFieldset.collapse());c.attributeFieldset.doLayout()};b.on("layerchange",a);a(b,b.layerRecord,b.schema);this.target.mapPanel.map.events.register("moveend",this,function(){c.extent.setValue(this.getFormattedMapExtent())});b.on({beforequery:function(){(new Ext.LoadMask(c.getEl(),{store:b.featureStore,msg:this.queryMsg})).show()},query:function(a,b){if(b&&(b.getCount()||Ext.Msg.show({title:this.noFeaturesTitle,msg:this.noFeaturesMessage,buttons:Ext.Msg.OK,icon:Ext.Msg.INFO}),this.autoHide)){var f=
this.outputTarget?c.ownerCt:c.ownerCt.ownerCt;f instanceof Ext.Window&&f.hide()}},scope:this});return c},getFormattedMapExtent:function(){var a=this.target.mapPanel.map.getExtent();return a&&a.toArray().join(", ")}});Ext.preg(gxp.plugins.QueryForm.prototype.ptype,gxp.plugins.QueryForm);Ext.namespace("gxp.plugins");
gxp.plugins.NavigationHistory=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigationhistory",previousMenuText:"Zoom To Previous Extent",nextMenuText:"Zoom To Next Extent",previousTooltip:"Zoom To Previous Extent",nextTooltip:"Zoom To Next Extent",constructor:function(){gxp.plugins.NavigationHistory.superclass.constructor.apply(this,arguments)},addActions:function(){var a=new OpenLayers.Control.NavigationHistory;this.target.mapPanel.map.addControl(a);a=[new GeoExt.Action({menuText:this.previousMenuText,
iconCls:"gxp-icon-zoom-previous",tooltip:this.previousTooltip,disabled:!0,control:a.previous}),new GeoExt.Action({menuText:this.nextMenuText,iconCls:"gxp-icon-zoom-next",tooltip:this.nextTooltip,disabled:!0,control:a.next})];return gxp.plugins.NavigationHistory.superclass.addActions.apply(this,[a])}});Ext.preg(gxp.plugins.NavigationHistory.prototype.ptype,gxp.plugins.NavigationHistory);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToSelectedFeatures=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtoselectedfeatures",menuText:"Zoom to selected features",tooltip:"Zoom to selected features",closest:!1,iconCls:"gxp-icon-zoom-to",extent:function(){for(var a,b,c=this.target.tools[this.featureManager].featureLayer.selectedFeatures,d=c.length-1;d>=0;--d)if(b=c[d].geometry)b=b.getBounds(),a?a.extend(b):a=b.clone();return a},addActions:function(){var a=gxp.plugins.ZoomToSelectedFeatures.superclass.addActions.apply(this,
arguments);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featureselected:function(){a[0].isDisabled()&&a[0].enable()},featureunselected:function(){b.selectedFeatures.length==0&&a[0].disable()}});return a}});Ext.preg(gxp.plugins.ZoomToSelectedFeatures.prototype.ptype,gxp.plugins.ZoomToSelectedFeatures);Ext.namespace("gxp.plugins");
gxp.plugins.BingSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_bingsource",title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels",apiKey:"AqTGBsziZHIJYYxgivLBf0hVdrAk9mWO5cQcb8Yux8sW5M8c8opEC2lZqKR1ZZXf",createStore:function(){var a=[new OpenLayers.Layer.Bing({key:this.apiKey,name:this.roadTitle,type:"Road",buffer:1}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.aerialTitle,type:"Aerial",buffer:1}),new OpenLayers.Layer.Bing({key:this.apiKey,
name:this.labeledAerialTitle,type:"AerialWithLabels",buffer:1})];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:!0},{name:"selected",type:"boolean"}]});this.store.each(function(a){a.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,
c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();a.title&&(c.setName(a.title),b.set("title",a.title));if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||!1);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.BingSource.prototype.ptype,gxp.plugins.BingSource);Ext.namespace("gxp");
gxp.StrokeSymbolizer=Ext.extend(Ext.FormPanel,{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity",symbolizer:null,colorManager:null,checkboxToggle:!0,defaultColor:null,dashStyles:null,border:!1,initComponent:function(){this.dashStyles=this.dashStyles||[["solid",this.solidStrokeName],["4 4",this.dashStrokeName],["2 4",this.dotStrokeName]];if(!this.symbolizer)this.symbolizer={};var a;this.colorManager&&
(a=[new this.colorManager]);this.items=[{xtype:"fieldset",title:this.titleText,autoHeight:!0,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===!0&&this.symbolizer.stroke===!1,hideMode:"offsets",defaults:{width:100},items:[{xtype:"combo",name:"style",fieldLabel:this.styleText,store:new Ext.data.SimpleStore({data:this.dashStyles,fields:["value","display"]}),displayField:"display",valueField:"value",value:this.getDashArray(this.symbolizer.strokeDashstyle)||OpenLayers.Renderer.defaultSymbolizer.strokeDashstyle,
mode:"local",allowBlank:!0,triggerAction:"all",editable:!1,listeners:{select:function(a,c){this.symbolizer.strokeDashstyle=c.get("value");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_colorfield",name:"color",fieldLabel:this.colorText,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeColor,value:this.symbolizer.strokeColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.strokeColor,plugins:a,listeners:{valid:function(a){var a=a.getValue(),c=this.symbolizer.strokeColor!=
a;this.symbolizer.strokeColor=a;c&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"numberfield",name:"width",fieldLabel:this.widthText,allowNegative:!1,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeWidth,value:this.symbolizer.strokeWidth,listeners:{change:function(a,c){c=parseFloat(c);isNaN(c)?delete this.symbolizer.strokeWidth:this.symbolizer.strokeWidth=c;this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,values:[("strokeOpacity"in
this.symbolizer?this.symbolizer.strokeOpacity:OpenLayers.Renderer.defaultSymbolizer.strokeOpacity)*100],isFormField:!0,listeners:{changecomplete:function(a,c){this.symbolizer.strokeOpacity=c/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.stroke!==!1)this.symbolizer.stroke=!1,this.fireEvent("change",this.symbolizer)},expand:function(){this.symbolizer.stroke=!0;this.fireEvent("change",
this.symbolizer)},scope:this}}];this.addEvents("change");gxp.StrokeSymbolizer.superclass.initComponent.call(this)},getDashArray:function(a){var b;a&&(a=a.split(/\s+/),a=a[0]/a[1],isNaN(a)||(b=a>=1?"4 4":"2 4"));return b}});Ext.reg("gxp_strokesymbolizer",gxp.StrokeSymbolizer);Ext.namespace("gxp.form");
gxp.form.GoogleGeocoderComboBox=Ext.extend(Ext.form.ComboBox,{xtype:"gxp_googlegeocodercombo",queryDelay:100,valueField:"viewport",displayField:"address",initComponent:function(){this.disabled=!0;if(window.google&&google.maps)window.setTimeout(function(){this.prepGeocoder()}.createDelegate(this),0);else{if(!gxp.plugins||!gxp.plugins.GoogleSource)throw Error("The gxp.form.GoogleGeocoderComboBox requres the gxp.plugins.GoogleSource or the Google Maps V3 API to be loaded.");gxp.plugins.GoogleSource.loader.onLoad({callback:this.prepGeocoder,
errback:function(){throw Error("The Google Maps script failed to load within the given timeout.");},scope:this})}this.store=new Ext.data.JsonStore({root:"results",fields:[{name:"address",type:"string"},{name:"location"},{name:"viewport"}],autoLoad:!1});this.on({focus:function(){this.clearValue()},scope:this});return gxp.form.GoogleGeocoderComboBox.superclass.initComponent.apply(this,arguments)},prepGeocoder:function(){var a=new google.maps.Geocoder,b={};b[Ext.data.Api.actions.read]=!0;var b=new Ext.data.DataProxy({api:b}),
c=this,d=function(){var a=this.bounds;a&&(a instanceof OpenLayers.Bounds&&(a=a.toArray()),a=new google.maps.LatLngBounds(new google.maps.LatLng(a[1],a[0]),new google.maps.LatLng(a[3],a[2])));return a}.createDelegate(this);b.doRequest=function(b,f,g,h,j,k,l){a.geocode({address:g.query,bounds:d()},function(a,d){var f;if(d===google.maps.GeocoderStatus.OK||d===google.maps.GeocoderStatus.ZERO_RESULTS)try{a=c.transformResults(a),f=h.readRecords({results:a})}catch(g){c.fireEvent("exception",c,"response",
b,l,d,g)}else c.fireEvent("exception",c,"remote",b,l,d,null);f?j.call(k,f,l,!0):j.call(k,null,l,!1)})};this.store.proxy=b;this.initialConfig.disabled!=!0&&this.enable()},transformResults:function(a){var b=a.length,c=Array(b),d,e,f,g;for(i=0;i<b;++i)d=a[i],e=d.geometry.location,f=d.geometry.viewport,g=f.getNorthEast(),f=f.getSouthWest(),c[i]={address:d.formatted_address,location:new OpenLayers.LonLat(e.lng(),e.lat()),viewport:new OpenLayers.Bounds(f.lng(),f.lat(),g.lng(),g.lat())};return c}});
Ext.reg(gxp.form.GoogleGeocoderComboBox.prototype.xtype,gxp.form.GoogleGeocoderComboBox);Ext.namespace("gxp.plugins");
gxp.plugins.LayerProperties=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layerproperties",menuText:"Layer Properties",toolTip:"Layer Properties",constructor:function(){gxp.plugins.LayerProperties.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={width:265,autoHeight:!0}},addActions:function(){var a=gxp.plugins.LayerProperties.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-layerproperties",disabled:!0,tooltip:this.toolTip,handler:function(){this.removeOutput();
this.addOutput()},scope:this}]),b=a[0];this.target.on("layerselectionchange",function(a){b.setDisabled(!a||!a.get("properties"))},this);return a},addOutput:function(a){var a=a||{},b=this.target.selectedLayer;this.outputConfig.title=(this.initialConfig.outputConfig||{}).title||this.menuText+": "+b.get("title");var c=b.get("properties")||"gxp_layerpanel",d=this.layerPanelConfig;d&&d[c]&&Ext.apply(a,d[c]);return gxp.plugins.LayerProperties.superclass.addOutput.call(this,Ext.apply({xtype:c,authorized:this.target.isAuthorized(),
layerRecord:b,source:this.target.getSource(b),defaults:{style:"padding: 10px",autoHeight:this.outputConfig.autoHeight}},a))}});Ext.preg(gxp.plugins.LayerProperties.prototype.ptype,gxp.plugins.LayerProperties);Ext.namespace("gxp.plugins");
gxp.plugins.SelectedFeatureActions=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_selectedfeatureactions",addActions:function(){for(var a=this.target.tools[this.featureManager],b=this.actions.length,c=Array(b),d=this,e=0;e<b;++e)c[e]=Ext.apply({iconCls:"process",disabled:!0,handler:function(){var b=a.featureLayer.selectedFeatures[0],c=new Ext.Template(this.urlTemplate),e=Ext.applyIf(this.outputConfig||{},d.initialConfig.outputConfig);d.outputConfig=Ext.apply(e,{title:this.menuText,bodyCfg:{tag:"iframe",
src:c.apply(Ext.applyIf({fid:b.fid.split(".").pop(),layer:a.layerRecord.get("name")},b.attributes)),style:{border:"0px none"}}});d.addOutput()}},this.actions[e]);a.featureLayer.events.on({featureselected:function(a){for(var a=a.feature.layer.selectedFeatures.length!=1,b=c.length-1;b>=0;--b)c[b].setDisabled(a)},featureunselected:function(a){if(a.feature.layer.selectedFeatures.length==0)for(a=c.length-1;a>=0;--a)c[a].disable()},scope:this});gxp.plugins.SelectedFeatureActions.superclass.addActions.apply(this,
[c])}});Ext.preg(gxp.plugins.SelectedFeatureActions.prototype.ptype,gxp.plugins.SelectedFeatureActions);Ext.namespace("gxp");
gxp.EmbedMapDialog=Ext.extend(Ext.Container,{url:null,url:null,publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large",snippetArea:null,heightField:null,widthField:null,initComponent:function(){Ext.apply(this,this.getConfig());gxp.EmbedMapDialog.superclass.initComponent.call(this)},
getIframeHTML:function(){return this.snippetArea.getValue()},updateSnippet:function(){this.snippetArea.setValue('<iframe style="border: none;" height="'+this.heightField.getValue()+'" width="'+this.widthField.getValue()+'" src="'+gxp.util.getAbsoluteUrl(this.url)+'"></iframe>');this.snippetArea.focus(!0,100)},getConfig:function(){this.snippetArea=new Ext.form.TextArea({height:70,selectOnFocus:!0,readOnly:!0});var a={change:this.updateSnippet,specialkey:function(a,c){c.getKey()==c.ENTER&&this.updateSnippet()},
scope:this};this.heightField=new Ext.form.NumberField({width:50,value:400,listeners:a});this.widthField=new Ext.form.NumberField({width:50,value:600,listeners:a});return{border:!1,defaults:{border:!1,cls:"gxp-export-section",xtype:"container",layout:"fit"},items:[{items:[new Ext.Container({layout:"column",defaults:{border:!1,xtype:"box"},items:[{autoEl:{cls:"gxp-field-label",html:this.mapSizeLabel}},new Ext.form.ComboBox({editable:!1,width:75,store:new Ext.data.SimpleStore({fields:["name","height",
"width"],data:[[this.miniSizeLabel,100,100],[this.smallSizeLabel,200,300],[this.largeSizeLabel,400,600],[this.premiumSizeLabel,600,800]]}),triggerAction:"all",displayField:"name",value:this.largeSizeLabel,mode:"local",listeners:{select:function(a,c){this.widthField.setValue(c.get("width"));this.heightField.setValue(c.get("height"));this.updateSnippet()},scope:this}}),{autoEl:{cls:"gxp-field-label",html:this.heightLabel}},this.heightField,{autoEl:{cls:"gxp-field-label",html:this.widthLabel}},this.widthField]})]},
{xtype:"box",autoEl:{tag:"p",html:this.publishMessage}},{items:[this.snippetArea]}],listeners:{afterrender:this.updateSnippet,scope:this}}}});Ext.reg("gxp_embedmapdialog",gxp.EmbedMapDialog);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToDataExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtodataextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",closest:!1,iconCls:"gxp-icon-zoom-to",extent:function(){return this.target.tools[this.featureManager].featureLayer.getDataExtent()},addActions:function(){var a=gxp.plugins.ZoomToDataExtent.superclass.addActions.apply(this,arguments);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featuresadded:function(){a[0].isDisabled()&&
a[0].enable()},featuresremoved:function(){b.features.length==0&&a[0].disable()}});return a}});Ext.preg(gxp.plugins.ZoomToDataExtent.prototype.ptype,gxp.plugins.ZoomToDataExtent);Ext.namespace("gxp");
gxp.LayerUploadPanel=Ext.extend(Ext.FormPanel,{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Default datastore",crsLabel:"CRS",
crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)",fileUpload:!0,validFileExtensions:[".zip",".tif",".gz",".tar.bz2",".tar",".tgz",".tbz2"],constructor:function(a){a.errorReader={read:a.handleUploadResponse||this.handleUploadResponse.createDelegate(this)};gxp.LayerUploadPanel.superclass.constructor.call(this,a)},selectedWorkspace:null,initComponent:function(){this.items=[{xtype:"textfield",name:"title",fieldLabel:this.titleLabel,emptyText:this.titleEmptyText,
allowBlank:!0},{xtype:"textarea",name:"abstract",fieldLabel:this.abstractLabel,emptyText:this.abstractEmptyText,allowBlank:!0},{xtype:"fileuploadfield",id:"file",emptyText:this.fieldEmptyText,fieldLabel:this.fileLabel,name:"file",buttonText:"",buttonCfg:{iconCls:"gxp-icon-filebrowse"},validator:this.fileNameValidator.createDelegate(this)},{xtype:"fieldset",title:this.optionsText,checkboxToggle:!0,collapsed:!0,hidden:this.workspace!=void 0&&this.store!=void 0&&this.crs!=void 0,hideMode:"offsets",defaults:{anchor:"97%"},
items:[this.createWorkspacesCombo(),this.createDataStoresCombo(),{xtype:"textfield",name:"crs",fieldLabel:this.crsLabel,emptyText:this.crsEmptyText,allowBlank:!0,regex:/^epsg:\d+$/i,regexText:this.invalidCrsText}],listeners:{collapse:function(a){a.items.each(function(a){a.reset()})}}}];this.buttons=[{text:this.uploadText,handler:function(){var a=this.getForm();a.isValid()&&a.submit({url:this.getUploadUrl(),submitEmptyText:!1,waitMsg:this.waitMsgText,waitMsgTarget:!0,reset:!0,success:this.handleUploadSuccess,
scope:this})},scope:this}];this.addEvents("workspaceselected","datastoreselected","uploadcomplete");gxp.LayerUploadPanel.superclass.initComponent.call(this)},fileNameValidator:function(a){for(var b=!1,c,d=0,e=this.validFileExtensions.length;d<e;++d)if(c=this.validFileExtensions[d],a.slice(-c.length).toLowerCase()===c){b=!0;break}return b||this.invalidFileExtensionText+this.validFileExtensions.join(", ")},createWorkspacesCombo:function(){return{xtype:"combo",name:"workspace",fieldLabel:this.workspaceLabel,
emptyText:this.workspaceEmptyText,store:new Ext.data.JsonStore({url:this.getWorkspacesUrl(),autoLoad:!0,root:"workspaces.workspace",fields:["name","href"]}),displayField:"name",valueField:"name",mode:"local",allowBlank:!0,triggerAction:"all",editable:!1,listeners:{select:function(a,b){this.fireEvent("workspaceselected",this,b)},scope:this}}},createDataStoresCombo:function(){var a=new Ext.data.JsonStore({autoLoad:!1,root:"dataStores.dataStore",fields:["name","href"]});this.on({workspaceselected:function(c,
d){b.reset();var e=d.get("href");a.removeAll();a.proxy=new Ext.data.HttpProxy({url:e.split(".json").shift()+"/datastores.json"});a.load()},scope:this});var b=new Ext.form.ComboBox({name:"store",fieldLabel:this.dataStoreLabel,emptyText:this.dataStoreEmptyText,store:a,displayField:"name",valueField:"name",mode:"local",allowBlank:!0,triggerAction:"all",editable:!1,listeners:{select:function(a,b){this.fireEvent("datastoreselected",this,b)},scope:this}});return b},getUploadUrl:function(){return this.url+
"/upload"},getWorkspacesUrl:function(){return this.url+"/workspaces.json"},handleUploadResponse:function(a){var b=(a=this.parseResponseText(a.responseText))&&a.success,c=[];b||(c=[{data:{id:"file",msg:a.message}}]);return{success:b,records:c}},parseResponseText:function(a){var b;try{b=Ext.decode(a)}catch(c){if(a=a.match(/^\s*<pre>(.*)<\/pre>\s*/))try{b=Ext.decode(a[1])}catch(d){}}return b},handleUploadSuccess:function(a,b){this.fireEvent("uploadcomplete",this,this.parseResponseText(b.response.responseText))}});
Ext.reg("gxp_layeruploadpanel",gxp.LayerUploadPanel);Ext.namespace("gxp.plugins");
gxp.plugins.Zoom=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoom",zoomInMenuText:"Zoom In",zoomOutMenuText:"Zoom Out",zoomInTooltip:"Zoom In",zoomOutTooltip:"Zoom Out",constructor:function(){gxp.plugins.Zoom.superclass.constructor.apply(this,arguments)},addActions:function(){return gxp.plugins.Zoom.superclass.addActions.apply(this,[[{menuText:this.zoomInMenuText,iconCls:"gxp-icon-zoom-in",tooltip:this.zoomInTooltip,handler:function(){this.target.mapPanel.map.zoomIn()},scope:this},{menuText:this.zoomOutMenuText,
iconCls:"gxp-icon-zoom-out",tooltip:this.zoomOutTooltip,handler:function(){this.target.mapPanel.map.zoomOut()},scope:this}]])}});Ext.preg(gxp.plugins.Zoom.prototype.ptype,gxp.plugins.Zoom);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToLayerExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtolayerextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",iconCls:"gxp-icon-zoom-to",destroy:function(){this.selectedRecord=null;gxp.plugins.ZoomToLayerExtent.superclass.destroy.apply(this,arguments)},extent:function(){var a=this.selectedRecord.getLayer(),b=a instanceof OpenLayers.Layer.Vector&&a.getDataExtent();return a.restrictedExtent||b||a.maxExtent||map.maxExtent},addActions:function(){var a=
gxp.plugins.ZoomToLayerExtent.superclass.addActions.apply(this,arguments);a[0].disable();this.target.on("layerselectionchange",function(b){this.selectedRecord=b;a[0].setDisabled(!b||!b.get("layer"))},this);return a}});Ext.preg(gxp.plugins.ZoomToLayerExtent.prototype.ptype,gxp.plugins.ZoomToLayerExtent);Ext.namespace("gxp.form");
gxp.form.FontComboBox=Ext.extend(Ext.form.ComboBox,{fonts:["Serif","SansSerif","Arial","Courier New","Tahoma","Times New Roman","Verdana"],defaultFont:"Serif",allowBlank:!1,mode:"local",triggerAction:"all",editable:!1,initComponent:function(){var a=this.fonts||gxp.form.FontComboBox.prototype.fonts,b=this.defaultFont;a.indexOf(this.defaultFont)===-1&&(b=a[0]);a={displayField:"field1",valueField:"field1",store:a,value:b,tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-family: {field1};">{field1}</span></div></tpl>')};
Ext.applyIf(this,a);gxp.form.FontComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_fontcombo",gxp.form.FontComboBox);Ext.namespace("gxp");
gxp.WMSLayerPanel=Ext.extend(Ext.TabPanel,{layerRecord:null,source:null,styling:!0,sameOriginStyling:!0,rasterStyling:!1,editableStyles:!1,activeTab:0,border:!1,imageFormats:/png|gif|jpe?g/i,aboutText:"About",titleText:"Title",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Use cached version",stylesText:"Styles",initComponent:function(){this.addEvents("change");this.items=
[this.createAboutPanel(),this.createDisplayPanel()];this.layerRecord.get("layer").params.TILED!=null&&this.items.push(this.createCachePanel());if(this.styling&&gxp.WMSStylesDialog&&this.layerRecord.get("styles")){var a=(this.source||this.layerRecord.get("layer")).url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest");this.editableStyles=this.sameOriginStyling?a.charAt(0)==="/":!0;this.items.push(this.createStylesPanel(a))}gxp.WMSLayerPanel.superclass.initComponent.call(this)},createCachePanel:function(){return{title:this.cacheText,
layout:"form",style:"padding: 10px",items:[{xtype:"checkbox",fieldLabel:this.cacheFieldText,checked:this.layerRecord.get("layer").params.TILED===!0,listeners:{check:function(a,b){this.layerRecord.get("layer").mergeNewParams({TILED:b});this.fireEvent("change")},scope:this}}]}},createStylesPanel:function(a){var b=gxp.WMSStylesDialog.createGeoServerStylerConfig(this.layerRecord,a);this.rasterStyling===!0&&b.plugins.push({ptype:"gxp_wmsrasterstylesdialog"});return Ext.apply(b,{title:this.stylesText,style:"padding: 10px",
editable:!1,listeners:Ext.apply(b.listeners,{beforerender:{fn:function(b){var d=!this.editableStyles;if(!d)typeof this.authorized=="boolean"?(b.editable=this.authorized,b.ownerCt.doLayout()):Ext.Ajax.request({method:"PUT",url:a+"/styles",callback:function(a,d,g){b.editable=g.status==405;b.ownerCt.doLayout()}});return d},scope:this,single:!0}})})},createAboutPanel:function(){return{title:this.aboutText,style:{padding:"10px"},defaults:{border:!1},items:[{layout:"form",labelWidth:70,items:[{xtype:"textfield",
fieldLabel:this.titleText,anchor:"99%",value:this.layerRecord.get("title"),listeners:{change:function(a){this.layerRecord.set("title",a.getValue());this.layerRecord.commit();this.fireEvent("change")},scope:this}},{xtype:"textfield",fieldLabel:this.nameText,anchor:"99%",value:this.layerRecord.get("name"),readOnly:!0}]},{layout:"form",labelAlign:"top",items:[{xtype:"textarea",fieldLabel:this.descriptionText,grow:!0,growMax:150,anchor:"99%",value:this.layerRecord.get("abstract"),readOnly:!0}]}]}},createDisplayPanel:function(){var a=
this.layerRecord,b=a.getLayer(),c=b.opacity;c==null&&(c=1);var d=[],e=b.params.FORMAT.toLowerCase();Ext.each(a.get("formats"),function(a){this.imageFormats.test(a)&&d.push(a.toLowerCase())},this);d.indexOf(e)===-1&&d.push(e);a=b.params.TRANSPARENT;return{title:this.displayText,style:{padding:"10px"},layout:"form",labelWidth:70,items:[{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:c*100,values:[c*100],anchor:"99%",isFormField:!0,listeners:{change:function(a,c){b.setOpacity(c/100);
this.fireEvent("change")},scope:this}},{xtype:"combo",fieldLabel:this.formatText,store:d,value:e,mode:"local",triggerAction:"all",editable:!1,anchor:"99%",listeners:{select:function(a){a=a.getValue();b.mergeNewParams({format:a});Ext.getCmp("transparent").setDisabled(a=="image/jpeg");this.fireEvent("change")},scope:this}},{xtype:"checkbox",id:"transparent",fieldLabel:this.transparentText,checked:a==="true"||a===!0,listeners:{check:function(a,c){b.mergeNewParams({transparent:c?"true":"false"});this.fireEvent("change")},
scope:this}}]}}});Ext.reg("gxp_wmslayerpanel",gxp.WMSLayerPanel);Ext.namespace("gxp.plugins");
gxp.plugins.FeatureToField=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuretofield",format:"GeoJSON",addActions:function(){var a=this.target.tools[this.featureManager],b,c=new OpenLayers.Format[this.format];a.featureLayer.events.on({featureselected:function(a){this.target.field.setValue(c.write(a.feature));b=a.feature},featureunselected:function(){this.target.field.setValue("");b=null},scope:this});a.on("layerchange",function(){a.featureStore&&a.featureStore.on("save",function(a,e,f){if(f.create)for(a=
f.create.length-1;a>=0;--a)e=f.create[a].feature,e==b&&this.target.field.setValue(c.write(e))},this)});return gxp.plugins.FeatureToField.superclass.addActions.apply(this,arguments)}});Ext.preg(gxp.plugins.FeatureToField.prototype.ptype,gxp.plugins.FeatureToField);Ext.namespace("gxp.plugins");
gxp.plugins.FeatureEditor=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featureeditor",iconClsAdd:"gxp-icon-addfeature",iconClsEdit:"gxp-icon-editfeature",exceptionTitle:"Save Failed",exceptionText:"Trouble saving features",createFeatureActionTip:"Create a new feature",editFeatureActionTip:"Edit existing feature",outputTarget:"map",snappingAgent:null,readOnly:!1,modifyOnly:!1,autoLoadFeatures:!1,showSelectedOnly:!0,drawControl:null,popup:null,autoLoadedFeature:null,schema:null,addActions:function(){function a(a,
d){var e=Array.prototype.slice.call(arguments);e.splice(0,2);if(!g&&b&&!b.isDestroyed){if(b.editing){var f=function(){g=!0;p.call(this);d==="setLayer"?this.target.selectLayer(e[0]):d==="clearFeatures"?window.setTimeout(function(){a[d].call(a)}):a[d].apply(a,e)},p=function(){c.featureStore.un("write",f,this);b.un("canceledit",f,this);b.un("cancelclose",p,this)};c.featureStore.on("write",f,this);b.on({canceledit:f,cancelclose:p,scope:this});b.close()}return!b.editing}g=!1}var b,c=this.target.tools[this.featureManager],
d=c.featureLayer,e=this.snappingAgent;if(e){var f=this.target.tools[e];if(f)f.addSnappingControl(d);else throw Error("Unable to locate snapping agent: "+e);}var g=!1;c.on({beforequery:a.createDelegate(this,"loadFeatures",1),beforelayerchange:a.createDelegate(this,"setLayer",1),beforesetpage:a.createDelegate(this,"setPage",1),beforeclearfeatures:a.createDelegate(this,"clearFeatures",1),scope:this});this.drawControl=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.Point,{eventListeners:{featureadded:function(a){if(this.autoLoadFeatures===
!0)this.autoLoadedFeature=a.feature},activate:function(){c.showLayer(this.id,this.showSelectedOnly&&"selected")},deactivate:function(){c.hideLayer(this.id)},scope:this}});this.selectControl=new OpenLayers.Control.SelectFeature(d,{clickout:!1,multipleKey:"fakeKey",unselect:function(){c.featureStore.getModifiedRecords().length||OpenLayers.Control.SelectFeature.prototype.unselect.apply(this,arguments)},eventListeners:{activate:function(){(this.autoLoadFeatures===!0||c.paging)&&this.target.mapPanel.map.events.register("click",
this,this.noFeatureClick);c.showLayer(this.id,this.showSelectedOnly&&"selected");this.selectControl.unselectAll(b&&b.editing&&{except:b.feature})},deactivate:function(){(this.autoLoadFeatures===!0||c.paging)&&this.target.mapPanel.map.events.unregister("click",this,this.noFeatureClick);if(b){if(b.editing)b.on("cancelclose",function(){this.selectControl.activate()},this,{single:!0});b.on("close",function(){c.hideLayer(this.id)},this,{single:!0});b.close()}else c.hideLayer(this.id)},scope:this}});d.events.on({beforefeatureremoved:function(a){this.selectControl.unselect(a.feature)},
featureunselected:function(){b&&b.close()},beforefeatureselected:function(){if(b)return!b.editing},featureselected:function(a){var d=a.feature,e=c.featureStore;if(this.selectControl.active&&d.geometry!==null)this.popup=b=this.addOutput({xtype:"gxp_featureeditpopup",collapsible:!0,feature:d,vertexRenderIntent:"vertex",readOnly:this.readOnly,fields:this.fields,excludeFields:this.excludeFields,editing:d.state===OpenLayers.State.INSERT,schema:this.schema,allowDelete:!0,width:200,height:250,listeners:{close:function(){d.layer&&
d.layer.selectedFeatures.indexOf(d)!==-1&&this.selectControl.unselect(d);d===this.autoLoadedFeature&&e.remove(e.getRecordFromFeature(d))},featuremodified:function(a,b){a.disable();e.on({write:{fn:function(){a&&a.isVisible()&&a.enable()},single:!0},exception:{fn:function(){Ext.Msg.show({title:this.exceptionTitle,msg:this.exceptionText,icon:Ext.MessageBox.WARNING});a&&a.isVisible()&&(a.enable(),a.startEditing())},single:!0},scope:this});if(b.state===OpenLayers.State.DELETE)e._removing=!0,e.remove(e.getRecordFromFeature(b)),
delete e._removing;e.save()},canceledit:function(){e.commitChanges()},scope:this}})},sketchcomplete:function(){c.featureLayer.events.register("featuresadded",this,function(a){c.featureLayer.events.unregister("featuresadded",this,arguments.callee);this.drawControl.deactivate();this.selectControl.activate();this.selectControl.select(a.features[0])})},scope:this});d=this.toggleGroup||Ext.id();d=gxp.plugins.FeatureEditor.superclass.addActions.call(this,[new GeoExt.Action({tooltip:this.createFeatureActionTip,
text:this.createFeatureActionText,iconCls:this.iconClsAdd,disabled:!0,hidden:this.modifyOnly||this.readOnly,toggleGroup:d,enableToggle:!0,allowDepress:!0,control:this.drawControl,deactivateOnDisable:!0,map:this.target.mapPanel.map}),new GeoExt.Action({tooltip:this.editFeatureActionTip,text:this.editFeatureActionText,iconCls:this.iconClsEdit,disabled:!0,toggleGroup:d,enableToggle:!0,allowDepress:!0,control:this.selectControl,deactivateOnDisable:!0,map:this.target.mapPanel.map})]);c.on("layerchange",
this.onLayerChange,this);return d},onLayerChange:function(a,b,c){this.schema=c;b=!c||!this.target.isAuthorized();this.actions[0].setDisabled(b);this.actions[1].setDisabled(b);if(!b){var b=this.drawControl,c=this.actions[0],d={Point:OpenLayers.Handler.Point,Line:OpenLayers.Handler.Path,Curve:OpenLayers.Handler.Path,Polygon:OpenLayers.Handler.Polygon,Surface:OpenLayers.Handler.Polygon},e=a.geometryType.replace("Multi","");if(d=d[e]){var f=b.active;f&&b.deactivate();b.handler=new d(b,b.callbacks,Ext.apply(b.handlerOptions,
{multi:e!=a.geometryType}));f&&b.activate();c.enable()}else c.disable()}},select:function(a){this.selectControl.unselectAll(this.popup&&this.popup.editing&&{except:this.popup.feature});this.selectControl.select(a)}});Ext.preg(gxp.plugins.FeatureEditor.prototype.ptype,gxp.plugins.FeatureEditor);Ext.namespace("gxp");
gxp.PolygonSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.PolygonSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_polygonsymbolizer",gxp.PolygonSymbolizer);
Ext.namespace("gxp");
gxp.GoogleStreetViewPanel=Ext.extend(Ext.Panel,{panorama:null,heading:0,pitch:0,zoom:0,location:null,initComponent:function(){Ext.applyIf(this,{plain:!0,border:!1});return gxp.GoogleStreetViewPanel.superclass.initComponent.call(this)},afterRender:function(){var a=this.ownerCt;a&&(a=a.getSize(),Ext.applyIf(this,a),this.location||GeoExt.Popup&&this.bubble(function(a){if(a instanceof GeoExt.Popup)return this.location=a.location.clone().transform(a.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326")),!1},
this));gxp.GoogleStreetViewPanel.superclass.afterRender.call(this);a={position:new google.maps.LatLng(this.location.lat,this.location.lon),pov:{heading:this.heading,pitch:this.pitch,zoom:this.zoom}};this.panorama=new google.maps.StreetViewPanorama(this.body.dom,a)},beforeDestroy:function(){delete this.panorama;gxp.GoogleStreetViewPanel.superclass.beforeDestroy.apply(this,arguments)},onResize:function(){gxp.GoogleStreetViewPanel.superclass.onResize.apply(this,arguments);this.panorama&&typeof this.panorama==
"object"&&google.maps.event.trigger(this.panorama,"resize")},setSize:function(){gxp.GoogleStreetViewPanel.superclass.setSize.apply(this,arguments);this.panorama&&typeof this.panorama=="object"&&google.maps.event.trigger(this.panorama,"resize")}});Ext.reg("gxp_googlestreetviewpanel",gxp.GoogleStreetViewPanel);Ext.namespace("gxp.plugins");
gxp.plugins.GoogleGeocoder=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_googlegeocoder",updateField:"viewport",init:function(a){var b=new gxp.form.GoogleGeocoderComboBox(Ext.apply({listeners:{select:this.onComboSelect,scope:this}},this.outputConfig)),c=a.mapPanel.map.restrictedExtent;if(c&&!b.bounds)a.on({ready:function(){b.bounds=c.clone().transform(a.mapPanel.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"))}});this.combo=b;return gxp.plugins.GoogleGeocoder.superclass.init.apply(this,
arguments)},addOutput:function(){return gxp.plugins.GoogleGeocoder.superclass.addOutput.call(this,this.combo)},onComboSelect:function(a,b){if(this.updateField){var c=this.target.mapPanel.map,d=b.get(this.updateField).clone().transform(new OpenLayers.Projection("EPSG:4326"),c.getProjectionObject());d instanceof OpenLayers.Bounds?c.zoomToExtent(d,!0):c.setCenter(d)}}});Ext.preg(gxp.plugins.GoogleGeocoder.prototype.ptype,gxp.plugins.GoogleGeocoder);Ext.namespace("gxp.form");
gxp.form.ViewerField=Ext.extend(Ext.form.TextArea,{viewer:null,initComponent:function(){this.width=this.width||350;this.height=this.height||220;gxp.form.ViewerField.superclass.initComponent.call(this)},onRender:function(){if(!this.el)this.defaultAutoCreate={tag:"textarea",style:{color:"transparent",background:"none"}};gxp.form.ViewerField.superclass.onRender.apply(this,arguments);this.viewerEl=Ext.get(document.createElement("div"));this.viewerEl.setStyle("position","absolute");this.viewerEl.on({mouseenter:function(){this.hasFocus||
this.el.focus()},mousemove:function(){this.hasFocus||this.el.focus()},mouseleave:function(){this.hasFocus&&this.el.blur()},scope:this});this.el.dom.parentNode.appendChild(this.viewerEl.dom);this.viewerEl.anchorTo(this.el,"tl-tl");var a={border:!1,renderTo:this.viewerEl,width:this.width,height:this.height,style:"border: 1px solid transparent"},b=Ext.applyIf(this.initialConfig.viewer||{},{field:this,portalConfig:a});Ext.apply(b.portalConfig,a);this.viewer=new gxp.Viewer(b)}});
Ext.reg("gxp_viewerfield",gxp.form.ViewerField);Ext.namespace("gxp.form");
gxp.form.AutoCompleteComboBox=Ext.extend(Ext.form.ComboBox,{xtype:"gxp_autocompletecombo",fieldName:null,featureType:null,featurePrefix:null,fieldLabel:null,geometryName:null,maxFeatures:500,url:null,srsName:null,autoHeight:!0,hideTrigger:!0,customSortInfo:null,initComponent:function(){var a=[{name:this.fieldName}],b=[this.fieldName];this.geometryName!==null&&(a.push({name:this.geometryName}),b.push(this.geometryName));if(!this.name)this.name=this.fieldName;this.valueField=this.displayField=this.fieldName;
this.tpl=new Ext.XTemplate('<tpl for="."><div class="x-form-field">',"{"+this.fieldName+"}","</div></tpl>");this.itemSelector="div.x-form-field";this.store=new Ext.data.Store({fields:a,reader:new gxp.data.AutoCompleteReader({uniqueField:this.fieldName},b),proxy:new gxp.data.AutoCompleteProxy({protocol:new OpenLayers.Protocol.WFS({version:"1.1.0",url:this.url,featureType:this.featureType,featurePrefix:this.featurePrefix,srsName:this.srsName,propertyNames:b,maxFeatures:this.maxFeatures}),setParamsAsOptions:!0}),
sortInfo:this.customSortInfo&&{field:this.fieldName,direction:this.customSortInfo.direction}});if(this.customSortInfo)this.store.createSortFunction=this.createCustomSortFunction();return gxp.form.AutoCompleteComboBox.superclass.initComponent.apply(this,arguments)},createCustomSortFunction:function(){for(var a=RegExp(this.customSortInfo.matcher),b=this.customSortInfo.parts.length,c=Array(b),d,e=0;e<b;++e)d=this.customSortInfo.parts[e],c[e]={index:e,sortType:Ext.data.SortTypes[d.sortType||"none"],order:d.order||
0};c.sort(function(a,b){return a.order-b.order});return function(b,d){var e=(d||"ASC").toUpperCase()=="DESC"?-1:1;return function(d,g){for(var l=d.data[b],p=g.data[b],n=a.exec(l)||[],m=a.exec(p)||[],r,o,s=0,t=c.length;s<t;++s)if(o=c[s],r=o.sortType(n[o.index+1]||l),o=o.sortType(m[o.index+1]||p),r=r>o?1:r<o?-1:0)break;return e*r}}}});Ext.reg(gxp.form.AutoCompleteComboBox.prototype.xtype,gxp.form.AutoCompleteComboBox);Ext.namespace("gxp.plugins");
gxp.plugins.MapBoxSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapboxsource",title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",
naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldGlassTitle:"World Glass",worldPrintTitle:"World Print",createStore:function(){for(var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-2.00375083392E7,-2.00375083392E7,2.00375083392E7,2.00375083392E7),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1},b=[{name:"blue-marble-topo-bathy-jan",numZoomLevels:9},{name:"blue-marble-topo-bathy-jul",
numZoomLevels:9},{name:"blue-marble-topo-jan",numZoomLevels:9},{name:"blue-marble-topo-jul",numZoomLevels:9},{name:"control-room",numZoomLevels:9},{name:"geography-class",numZoomLevels:9},{name:"natural-earth-hypso",numZoomLevels:7},{name:"natural-earth-hypso-bathy",numZoomLevels:7},{name:"natural-earth-1",numZoomLevels:7},{name:"natural-earth-2",numZoomLevels:7},{name:"world-dark",numZoomLevels:12},{name:"world-light",numZoomLevels:12},{name:"world-glass",numZoomLevels:11},{name:"world-print",numZoomLevels:10}],
c=b.length,d=Array(c),e,f=0;f<c;++f)e=b[f],d[f]=new OpenLayers.Layer.TMS(this[OpenLayers.String.camelize(e.name)+"Title"],["http://a.tiles.mapbox.com/mapbox/","http://b.tiles.mapbox.com/mapbox/","http://c.tiles.mapbox.com/mapbox/","http://d.tiles.mapbox.com/mapbox/"],OpenLayers.Util.applyDefaults({attribution:"<a href='http://mapbox.com'>MapBox</a> | <a href='http://mapbox.com/tos'>Terms of Service</a>",type:"png",tileOrigin:new OpenLayers.LonLat(-2.00375083392E7,-2.00375083392E7),layername:e.name,
numZoomLevels:e.numZoomLevels},a));this.store=new GeoExt.data.LayerStore({layers:d,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"layername"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"}]});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();
a.title&&(c.setName(a.title),b.set("title",a.title));if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||!1);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.MapBoxSource.prototype.ptype,gxp.plugins.MapBoxSource);Ext.namespace("gxp");
gxp.QueryPanel=Ext.extend(Ext.Panel,{layout:"form",spatialQuery:!0,attributeQuery:!0,selectedLayer:null,featureStore:null,attributeStore:null,geometryType:null,geometryName:null,queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",layerText:"Layer",initComponent:function(){this.addEvents("ready","beforelayerchange","layerchange","beforequery","query","storeload");this.mapExtentField=new Ext.form.TextField({fieldLabel:this.currentTextText,
readOnly:!0,anchor:"100%",value:this.getFormattedMapExtent()});this.map.events.on({moveend:this.updateMapExtent,scope:this});this.createFilterBuilder(this.layerStore.getAt(0));this.items=[{xtype:"combo",name:"layer",fieldLabel:this.layerText,store:this.layerStore,value:this.layerStore.getAt(0).get("name"),displayField:"title",valueField:"name",mode:"local",allowBlank:!0,editable:!1,triggerAction:"all",listeners:{beforeselect:function(a,b){return this.fireEvent("beforelayerchange",this,b)},select:function(a,
b){this.createFilterBuilder(b)},scope:this}},{xtype:"fieldset",title:this.queryByLocationText,checkboxToggle:!0,collapsed:!this.spatialQuery,anchor:"95%",items:[this.mapExtentField],listeners:{collapse:function(){this.spatialQuery=!1},expand:function(){this.spatialQuery=!0},scope:this}},{xtype:"fieldset",title:this.queryByAttributesText,checkboxToggle:!0,collapsed:!this.attributeQuery,anchor:"95%",items:[this.filterBuilder],listeners:{collapse:function(){this.attributeQuery=!1},expand:function(){this.attributeQuery=
!0},scope:this}}];gxp.QueryPanel.superclass.initComponent.apply(this,arguments)},createFilterBuilder:function(a){this.selectedLayer=a;var b=this.filterBuilder&&this.filterBuilder.ownerCt;b&&b.remove(this.filterBuilder,!0);this.attributeStore=new GeoExt.data.AttributeStore({url:a.get("schema"),listeners:{load:function(b){this.geometryName=null;b.filterBy(function(b){var c=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(b.get("type"));if(c&&!this.geometryName)this.geometryName=b.get("name"),
this.geometryType=c[1],this.fireEvent("layerchange",this,a);return!c},this);this.createFeatureStore()},scope:this},autoLoad:!0});this.filterBuilder=new gxp.FilterBuilder({attributes:this.attributeStore,allowGroups:!1});b&&(b.add(this.filterBuilder),b.doLayout())},getFormattedMapExtent:function(){return this.map&&this.map.getExtent()&&this.map.getExtent().toBBOX().replace(/\.(\d)\d*/g,".$1").replace(/,/g,", ")},updateMapExtent:function(){this.mapExtentField.setValue(this.getFormattedMapExtent())},
getFilter:function(){var a=this.attributeQuery&&this.filterBuilder.getFilter(),b=this.spatialQuery&&new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.map.getExtent()});return a&&b?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[b,a]}):a||b},getFieldType:function(a){return{"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int","xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"}[a]},
createFeatureStore:function(){var a=[];this.attributeStore.each(function(b){a.push({name:b.get("name"),type:this.getFieldType(b.get("type"))})},this);var b=this.selectedLayer;this.featureStore=new gxp.data.WFSFeatureStore({fields:a,srsName:this.map.getProjection(),url:b.get("url"),featureType:b.get("name"),featureNS:b.get("namespace"),geometryName:this.geometryName,schema:b.get("schema"),maxFeatures:this.maxFeatures,autoLoad:!1,autoSave:!1,listeners:{load:function(a,b,e){this.fireEvent("storeload",
this,a,b,e)},scope:this}});this.fireEvent("ready",this,this.featureStore)},query:function(){this.featureStore&&this.fireEvent("beforequery",this)!==!1&&(this.featureStore.setOgcFilter(this.getFilter()),this.featureStore.load(),this.fireEvent("query",this,this.featureStore))},beforeDestroy:function(){this.map&&this.map.events&&this.map.events.un({moveend:this.updateMapExtent,scope:this});gxp.QueryPanel.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gxp_querypanel",gxp.QueryPanel);Ext.namespace("gxp");
gxp.StylePropertiesDialog=Ext.extend(Ext.Container,{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract",userStyle:null,initComponent:function(){Ext.applyIf(this,{layout:"form",items:[{xtype:"fieldset",title:this.titleText,labelWidth:75,defaults:{xtype:"textfield",anchor:"100%",listeners:{change:function(a,b){this.userStyle[a.name]=b;this.fireEvent("change",this,this.userStyle)},scope:this}},items:[{xtype:this.initialConfig.nameEditable?"textfield":"displayfield",
fieldLabel:this.nameFieldText,name:"name",value:this.userStyle.name,maskRe:/[A-Za-z0-9_]/},{fieldLabel:this.titleFieldText,name:"title",value:this.userStyle.title},{xtype:"textarea",fieldLabel:this.abstractFieldText,name:"description",value:this.userStyle.description}]}]});this.addEvents("change");gxp.StylePropertiesDialog.superclass.initComponent.apply(this,arguments)}});Ext.reg("gxp_stylepropertiesdialog",gxp.StylePropertiesDialog);
