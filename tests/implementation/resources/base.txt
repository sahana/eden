*** Settings ***
Documentation       Global keywords for Eden tests

*** Variables ***
${CONFIRMATION}     jquery=div.alert-success
${ERROR}            jquery=div.alert-error
${ABORTED EARLY}    Test Aborted, awaiting for code to be completed

*** Keywords ***

Should Show Confirmation
    [Documentation]  Checks for the confirmation element and the message inside it (if given
    ...                as an argument) n the page and fails if it is not present.
    [Arguments]  @{message}
    Sleep  1s  Wait for message to render
    Page Should Contain Element  ${CONFIRMATION}  Confirmation message not shown
    ${msg len} =  Get Length  ${message}
    Run Keyword if  ${msg len} >= 1  Element Should Contain  ${CONFIRMATION}  @{message}[0]

Should Show Error
    [Documentation]  Fails if no error message is visible in the page
    [Arguments]  @{message}
    Sleep  1s  Wait for message to render
    Page Should Contain Element  ${ERROR}  Error message not shown
    ${msg len} =  Get Length  ${message}
    Run Keyword if  ${msg len} >= 1  Element Should Contain  ${CONFIRMATION}  @{message}[0]

Code Incomplete Abort Test
    [Documentation]  This will run a keyword which is expected to fail
    ...               but fail with a helpful message
    [Arguments]  ${condition}  ${error}  ${keyword}  @{args}
    ${error}=  Run Keyword And Expect Error  ${error}*  ${keyword}  @{args}
    Run Keyword If  ${condition}  Fail  ${ABORTED EARLY}  ELSE  Fail  ${error}

Run On Templates
    [Documentation]  Run if the current template is in the argument
    ...            USAGE: To apply it at a suite level, add it to start testing.
    ...             To apply it at at a test level, add it at begining of the test
    [Arguments]  @{Template List}
    Should Contain  ${Template List}  ${TEMPLATE}  The test does not run on the current template

Do Not Run on Templates
    [Documentation]  Do not run if the current template is in the argument
    ...             USAGE : Similar to Run on Templates
    [Arguments]  @{Template List}
    Should Not Contain  ${Template List}  ${TEMPLATE}  The test does not run on the current template

Catch Error If Available Else Take Screenshot
    [Documentation]  Run on failure mechanism of EdenTest
    ${output}=  Check For Ticket And Catch Exception
    Run Keyword If  ${output}==0  Capture Page Screenshot

Check for ticket and catch exception
    [Documentation]  Looks for tickets and if found, returns the traceback
    ...  In case optional argument Failed URL is given, it returns
    ...  the error generated otherwise it returns the 1/0
    [Arguments]  @{Failed URL}
    ${passed}=  Run Keyword and Return Status  Page Should Contain  Ticket issued:
    # If Ticket Issued not found, return
    Run Keyword Unless  ${passed}  Return From Keyword  ${0}
    ${Ticket URL}=  Get Element Attribute  tag=a@href
    Go To  ${Ticket URL}
    Login To Admin Interface If Not Logged In
    # This complicated xpath has been generated using Chrome Developer Tools ;)
    ${Exception Name}=  Get Text  xpath=//div[@id="main_inner"]/div/h4
    ${Traceback}=  Get Table Cell  xpath=//*[@id="main_inner"]/div/div[2]/table  1  2
    ${Ticket URL}=  Get Location

     @{With Failed URL}=  Set Variable  Failed URL: ${Failed URL}\n Ticket URL: ${Ticket URL} \n
     ...  Exception:${Exception Name} \n ${Traceback} \n

    @{Without Failed URL}=  Set Variable  Ticket URL: ${Ticket URL} \n
    ...  Exception:${Exception Name} \n ${Traceback} \n----\n

    ${passed}=  Run Keyword and Return Status  Should Not Be Empty  ${Failed URL}
    Run Keyword If  ${passed}  Log  @{With Failed URL}[0] @{With Failed URL}[1]  WARN
    Run Keyword Unless  ${passed}  Log  @{Without Failed URL}[0] @{Without Failed URL}[1]  WARN

    Log  ${Traceback}  INFO
    # Return errors if the Failed URL is given
    Return From Keyword if  ${passed}  @{With Failed URL}

    [Return]  ${1}

Login To Admin Interface If Not Logged In
    [Documentation]  Login to the admin interface to access the ticket
    ${passed}=  Run Keyword and Return Status  Page Should Contain  Administrator Password:
    Run Keyword Unless  ${passed}  Return From Keyword
    Input Text  password  ${WEB2PY PASSWD}
    Click Button  Login

Go To URL If Not Already There
    [Arguments]  ${URL}
    [Documentation]  Got to the URL if that is not the current page
    ${status}  ${value}  Run Keyword And Ignore Error  Location Should Be  ${URL}
    Run keyword If  '${status}'=='FAIL'  Go To  ${URL}
